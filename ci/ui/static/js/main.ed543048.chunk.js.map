{"version":3,"sources":["framework.visual/extras/utils/collectionUtils.ts","framework/api/logService/logLevel.ts","framework/services/logService/defaultLogger.ts","framework/extras/loggablePlugin.ts","framework/extras/typeUtils.ts","framework/extras/basePlugin.ts","framework/services/repoService/repoService.ts","framework/services/logService/logService.ts","framework/services/selectionService/selectionService.ts","framework/services/displayService/displayService.ts","framework/services/repoService/repoItem.ts","model/documentInfo.ts","model/metadataInfo.ts","model/paramType.ts","model/referenceInfo.ts","model/referenceType.ts","model/roleInfo.ts","model/searchParamInfo.ts","model/sortPropertyInfo.ts","model/statInfo.ts","model/statType.ts","model/tagInfo.ts","model/tagType.ts","model/userInfo.ts","framework/model/menuItem.ts","visual/model/searchBannerMenuItem.ts","framework/extras/plugin.ts","framework.visual/extras/utils/timeUtils.ts","application/documents/documentService.ts","application/references/referenceService.ts","framework.visual/extras/utils/uniqueIdUtils.ts","model/userRequestInfo.ts","application/users/userService.ts","api/authentication/iAuthenticationService.ts","api/authorization/iAuthorizationService.ts","config/config.ts","application/authentication/authenticationService.ts","application/stats/statService.ts","application/tags/tagService.ts","visual/theme/svgs/graphSVG.tsx","visual/model/systemToolMenuItem.ts","visual/theme/svgs/uploadSVG.tsx","visual/theme/svgs/tagsSVG.tsx","visual/theme/svgs/profileSVG.tsx","visual/model/searchResultsMenuItem.ts","visual/theme/svgs/cardsSVG.tsx","visual/theme/widgets/button/buttonModel.ts","visual/theme/svgs/tableSVG.tsx","visual/theme/svgs/listSVG.tsx","visual/theme/widgets/card/card.tsx","visual/theme/widgets/scrollBar/scrollBar.tsx","visual/theme/widgets/loadingIndicator/loadingIndicator.tsx","visual/theme/svgs/checkMarkSVG.tsx","visual/theme/widgets/checkBox/checkBox.tsx","visual/theme/widgets/portal/portal.tsx","visual/theme/widgets/tooltipPortal/tooltipPortal.tsx","visual/theme/widgets/textEdit/textEdit.tsx","visual/theme/svgs/deleteSVG.tsx","visual/theme/widgets/tag/tag.tsx","visual/components/searchResultsPanel/renderers/cardCollectionView.tsx","visual/theme/widgets/button/button.tsx","visual/theme/svgs/arrowRightSVG.tsx","visual/theme/svgs/arrowLeftSVG.tsx","visual/components/searchResultsPanel/renderers/tableCollectionView.jsx","visual/theme/widgets/listItem/listItem.tsx","visual/theme/svgs/infoSVG.tsx","visual/components/searchResultsPanel/renderers/listCollectionView.tsx","application/scenarioService/scenarioService.ts","application/common/converters/converter.ts","application/users/converters/users/getUserArrayRequestConverter.ts","application/users/converters/users/getUserArrayResponseConverter.ts","application/users/converters/users/getUserResponseConverter.ts","application/common/converters/parsingUtils.ts","application/users/converters/users/createUserRequestConverter.ts","application/users/converters/users/userStatusResponseConverter.ts","application/users/converters/users/updateUserRequestConverter.ts","application/common/providers/entityProvider.ts","application/users/providers/userProvider.ts","framework/services/httpService/httpService.ts","application/documents/converters/deleteDocumentResponseConverter.ts","application/documents/converters/documentResponseConverter.ts","application/documents/converters/getDocumentArrayRequestConverter.ts","application/documents/converters/getDocumentArrayResponseConverter.ts","application/documents/converters/getDocumentResponseConverter.ts","framework.visual/extras/utils/sizeUtils.ts","application/documents/converters/updateDocumentRequestConverter.ts","application/documents/converters/uploadDocumentRequestConverter.ts","application/documents/converters/uploadDocumentResponseConverter.ts","application/documents/providers/documentProvider.ts","application/references/converters/getReferenceArrayRequestConverter.ts","application/references/converters/getReferenceArrayResponseConverter.ts","application/references/providers/referenceProvider.ts","application/stats/converters/getStatsRequestConverter.ts","application/stats/converters/getStatsResponseConverter.ts","application/stats/providers/statProvider.ts","application/tags/converters/getTagArrayRequestConverter.ts","application/tags/converters/getTagArrayResponseConverter.ts","application/tags/converters/getTagResponseConverter.ts","application/tags/providers/tagProvider.ts","application/users/converters/roles/getSingleRoleResponseConverter.ts","application/users/providers/roleProvider.ts","framework/redux/reduxStore.ts","model/permissionInfo.ts","application/authorization/converters/getPermissionArrayResponseConverter.ts","application/authorization/converters/getPermissionArrayRequestConverter.ts","application/authorization/providers/permissionProvider.ts","application/authorization/authorizationService.ts","application/serviceComposition.ts","visual/theme/svgs/arrowDownSVG.tsx","visual/theme/svgs/arrowUpSVG.tsx","visual/theme/widgets/comboBox/comboBoxItem.tsx","visual/theme/widgets/comboBox/comboBox.tsx","visual/theme/svgs/personalSVG.tsx","visual/theme/svgs/globalSVG.tsx","visual/theme/widgets/globalSwitchButton/globalSwitchButton.tsx","visual/components/documentPanel/documentPanelView.tsx","framework.visual/extras/presenter.ts","framework.visual/extras/utils/animationUtils.ts","framework/wrappers/componentWrapper.ts","framework/wrappers/viewModelWrapper.js","framework/wrappers/metadataWrapper.js","framework/wrappers/displayWrapper.tsx","visual/theme/svgs/zoomInSVG.tsx","visual/theme/svgs/zoomOutSVG.tsx","visual/theme/svgs/downloadSVG.tsx","visual/theme/svgs/textEditSVG.tsx","visual/components/documentPanel/documentPdfPreview.tsx","visual/components/documentPanel/documentPanelPresenter.ts","visual/theme/svgs/searchSVG.tsx","visual/theme/widgets/searchBox/searchBox.tsx","visual/theme/widgets/amcharts/xyChart/xyChart.tsx","visual/theme/widgets/amcharts/wordCloud/wordCloud.tsx","framework.visual/extras/useTraceUpdate.ts","visual/theme/widgets/amcharts/circlePieChart/circlePieChart.tsx","visual/components/searchResultsPanel/searchResultsModel.ts","visual/theme/widgets/amcharts/donutPieChart/donutPieChart.tsx","visual/theme/widgets/amcharts/variableRadiusDonutPieChart/variableRadiusDonutPieChart.tsx","visual/components/searchGraphsPanel/searchGraphsPanelView.tsx","visual/components/searchGraphsPanel/searchGraphsPanelPresenter.ts","visual/components/searchBanner/searchBannerView.tsx","visual/components/searchBanner/searchBannerPresenter.ts","visual/theme/svgs/sortSVG.tsx","visual/theme/widgets/loadingIndicator/loadingIndicatorModel.ts","visual/components/searchResultsPanel/searchResultsPanelView.tsx","visual/components/searchResultsPanel/searchResultsPanelPresenter.ts","visual/views/knowledgeManagement/app/search/searchView.tsx","visual/views/knowledgeManagement/app/search/searchPresenter.tsx","visual/theme/widgets/fileInput/fileInput.tsx","visual/theme/svgs/removeSVG.tsx","visual/theme/svgs/approveSVG.tsx","visual/theme/widgets/popup/popup.tsx","visual/theme/svgs/fileSVG.tsx","visual/components/landingPanel/landingPanelModel.ts","visual/components/systemToolPanels/uploadPanel/uploadPanelView.tsx","visual/components/systemToolPanels/uploadPanel/uploadPanelPresenter.ts","visual/components/systemToolPanels/profilePanel/profileInfoView.tsx","visual/components/systemToolPanels/profilePanel/newUserProfileInfoView.tsx","visual/components/systemToolPanels/profilePanel/userRequestInfoView.tsx","visual/components/systemToolPanels/profilePanel/profilePanelView.tsx","visual/components/systemToolPanels/profilePanel/profilePanelPresenter.ts","visual/theme/svgs/acceptSVG.tsx","visual/components/systemToolPanels/tagsPanel/tagsPanelView.tsx","visual/components/systemToolPanels/tagsPanel/tagsPanelPresenter.ts","visual/components/systemToolPanels/statsPanel/statsPanelView.tsx","visual/components/systemToolPanels/statsPanel/statsPanelPresenter.ts","visual/theme/widgets/toolbar/toolbar.tsx","visual/theme/svgs/docPreviewSVG.tsx","visual/components/systemToolbar/systemToolbarView.tsx","visual/components/systemToolbar/systemToolbarPresenter.ts","visual/views/knowledgeManagement/app/appView.tsx","visual/views/knowledgeManagement/app/appPresenter.tsx","visual/components/systemBanner/systemBannerView.tsx","visual/components/systemBanner/systemBannerPresenter.ts","visual/components/landingPanel/landingPanelView.tsx","visual/components/landingPanel/landingPanelPresenter.ts","visual/views/knowledgeManagement/landing/landingView.tsx","visual/views/knowledgeManagement/landing/landingPresenter.tsx","visual/views/knowledgeManagement/knowledgeManagementView.tsx","visual/views/knowledgeManagement/knowledgeManagementPresenter.tsx","index.tsx"],"names":["forEach","items","consumer","itemKeys","Object","keys","itemsLength","length","index","forEachKVP","key","arrayEquals","a","b","Array","isArray","every","val","LogLevel","DefaultLogger","className","log","this","getLogger","debug","error","fatal","info","trace","warn","appender","addAppender","assertion","assert","name","expanded","group","groupEnd","level","time","getLog4JLevel","timeEnd","log4JLevel","ALL","Level","TRACE","DEBUG","INFO","WARN","ERROR","FATAL","OFF","LoggablePlugin","messages","syncToLog","logger","logFxn","message","call","logFunction","getClassName","getValueOrDefault","object","propertyName","defaultValue","result","hasOwnProperty","console","JSON","stringify","bindInstanceMethods","o","propertyDescriptors","getOwnPropertyDescriptors","getPrototypeOf","dictionary","value","element","bind","ex","BasePlugin","logService","appendClassName","class","Error","RepositoryService","storage","initialState","model","classToFullClassNameMap","storageByClass","createSlice","reducers","addOrUpdateHandler","state","action","payload","item","id","shortName","split","removeHandler","removeSingle","removeByTypeHandler","includeSubTypes","fullClassName","values","shortClassName","longClassName","includes","removeByIdHandler","ids","itemId","getRepoState","addEventHandlers","reducer","classes","repoState","itemKey","itemValue","getState","sendEvent","actions","LogService","loggers","globalLogger","popUpAppender","PopUpAppender","setFocusPopUp","setShowCommandLine","setLayout","PatternLayout","ref","setLogService","setLogLevel","getRootLogger","setLevel","SelectionService","getContextMap","getModelState","contextMap","setContextHandler","appDataStore","createSelector","DisplayService","nodes","containers","nodeInfoUpdatedHandler","nodeId","options","visible","containerId","undefined","currentNodeId","containerUpdatedHandler","visibilityUpdatedHandler","node","container","getContainer","viewInfo","getNodeInfo","setVisibility","nextNodeId","nodeOptions","mergedOptions","assign","appearClass","enterClass","exitClass","timeout","RepoItem","DocumentInfo","author","department","file_name","file_page_count","file_size","file_type","primary_sme_email","primary_sme_name","primary_sme_phone","private_tag","project","public_tag","publication_date","purpose","secondary_sme_email","secondary_sme_name","secondary_sme_phone","status","title","upload_date","uploadedBy_id","preview_url","original_url","isUpdating","isUploading","isPending","isDeleted","MetadataType","ParamType","MetadataInfo","isLoading","hasError","errorMessage","ReferenceType","ReferenceInfo","type","RoleInfo","SearchParamInfo","optionsId","advanced","dirty","SortPropertyInfo","StatType","StatInfo","count","TagType","TagInfo","user_id","UserInfo","dod_id","first_name","last_name","email_address","phone_number","preferred_results_view","account_status","role","approved_by","date_approved","MenuItem","selected","graphic","context","SearchBannerMenuItem","Plugin","repoService","addOrUpdateRepoItem","addOrUpdateAllRepoItems","getRepoItem","getAll","removeRepoItem","removeAllByType","removeAllById","getDateWithoutTime","dateTime","year","getUTCFullYear","month","getUTCMonth","monthStr","day","getUTCDay","DocumentService","userService","documentProvider","pendingFilesRaw","pendingFilesQueue","getAllDocumentsSelector","getSearchDocumentsSelector","getPendingDocumentsSelector","getCurrentUserId","documents","currentUserId","document","userDoc","getAllDocuments","getSingle","then","localDocument","getDocument","nextDocument","catch","clearAllParams","setGetDocumentArrayMetadata","getPendingDocuments","getSearchParams","responseData","clearDirtyFlags","modifiedDocument","total_private_tag","tagUserId","tagArray","push","tag_id","mergedDocumentInfo","update","remove","file","tmpId","tmpFileInfo","shift","requestData","create","updatedDocument","localFile","removeDocument","processQueue","dequeueFile","fileList","enqueueFile","pendingFile","rawFile","filter","cancelledFile","setTimeout","approvedFile","repoItem","DOCUMENTS_GET_ARRAY","provider","nextItems","searchInfo","next","DATE_RANGE","start_date","Date","end_date","nextParams","nextParam","fetchDocuments","ReferenceService","getAllReferenceSelectors","getAllReferencesGroupedByTypeSelector","referenceProvider","references","reference","referenceType","setReferencesLoading","referenceOrdinal","selector","REFERENCE_GET_SINGLE","makeGuid","s4","Math","floor","random","toString","substring","UserRequestInfo","duration","comment","UserService","selectionService","authorizationService","referenceService","userProvider","getActiveUsersSelector","getPendingUsersSelector","users","user","accountStatus","toUpperCase","latestUser","localUser","getUser","nextUser","userData","userInfo","updatedUserInfo","modifiedUser","fetchUser","fetchPermissions","setContext","getContext","updateUser","removeUser","RegistrationStatus","PERMISSION_ENTITY","PERMISSION_OPERATOR","PERMISSION_LEVEL","KM_API_SERVER_URL","process","keycloakConfig","AuthenticationService","_kc","REDIRECT_URI","loginOptions","logoutOptions","prompt","redirectUri","profile","username","firstName","lastName","email","setHasError","setProfile","setRegistrationStatus","registrationStatus","kcProfile","authenticationProfile","s","createElement","src","head","append","onload","keyCloakLoadedHandler","ev","Keycloak","init","onLoad","authenticated","loadUserProfile","userId","updateProfile","setCurrentUser","onError","logout","clearToken","token","getAuthenticationState","alert","successCallback","prevToken","getToken","updateToken","reason","finally","SUBMITTED","StatService","statProvider","statSelectors","statType","makeGetAllStats","statInfos","stats","statKey","statValue","TagService","getAllPublicTagsSelector","tagProvider","setLoading","GraphSVG","viewBox","d","SystemToolMenuItem","UploadSVG","TagsSVG","ProfileSVG","SearchResultsMenuItem","Justify_Content","CardsSVG","TableSVG","ListSVG","Card","props","setState","body","children","onClick","header","rest","cn","_toggleExpanded","Fragment","React","Component","ScrollBar","renderTrackHorizontal","renderTrackVertical","cnh","cnv","renderThumbHorizontal","renderThumbVertical","renderView","autoHide","autoHideTimeout","autoHideDuration","LoadingIndicator","size","CheckMarkSVG","CheckBox","toggleHandler","disabled","prevProps","prevState","snapshot","setSelected","text","checked","onChange","Portal","didChangeTimeout","_onShouldClose","onShouldClose","isOpen","_close","willChangeTo","_open","_cancelQueue","clearTimeout","portalContent","zIndex","autoLayout","relatedWidth","style","minWidth","TooltipPortal","willShow","isShowing","light","onMouseEnter","_onMouseEnter","onMouseLeave","_onMouseLeave","tooltip","TextEdit","inputRef","tmpValue","tooltipId","isHover","cancelHover","createRef","current","addEventListener","submit","setTmpValue","onSubmit","onCancel","e","target","cancel","placeholder","disable","autoFocus","edit","readonly","onKeyUp","onKeyPress","handleChange","DeleteSVG","Tag","isSelected","tmpText","onDelete","isEdit","isGlobal","editValue","toggleSelected","delete","CardCollectionView","searchResults","onDocumentSelected","itemDivs","map","timestamp","tag","top","right","bottom","left","Button","orientation","justifyContent","highlight","buttonDiv","ArrowRightSVG","ArrowLeftSVG","TableCollectionView","columns","tableManager","rowIndex","data","column","event","pageWidth","_updateColumns","field","label","width","sortable","resizable","cellRenderer","CheckBoxCellRenderer","headerCellRenderer","CheckBoxHeaderCellRenderer","TitleCellRender","DateCellRender","PageCountCellRender","AuthorCellRender","CellRenderer","PublicTagCellRender","PrivateTagCellRender","showSearch","onRowClick","_onRowClick","isPaginated","enableColumnsReorder","onColumnsChange","rows","showColumnVisibilityManager","showRowsInformation","components","PageSize","Pagination","colIndex","page","paginationApi","setPage","config","additionalProps","pagination","totalPages","ListItem","InfoSVG","ListCollectionView","userLookup","page_count","uploaded_by","ScenarioService","dataAppStore","runScenario","dataStore","ctor","args","createScenarioItem","createSearchParamInfo","STRING","OPTIONS","DEPARTMENT","PURPOSE","createSortPropertyInfo","createMenuItem","createSearchParamsInfos","createSortPropertyInfos","createSearchBannerTools","createSystemTools","createSearchResultsTools","Converter","GetUserArrayRequestConverter","uiRequestData","GetUserArrayResponseConverter","_singleConverter","fromData","reject","convert","window","GetUserResponseConverter","titleUpper","referenceInfo","referenceInfos","parseServerReferenceValueOrDefault","CreateUserRequestConverter","getTextValueOrDefault","middle_initial","dept_id","UserStatusResponseConverter","UpdateUserRequestConverter","dodid","roles","ROLE","EntityProvider","baseUrl","store","httpService","converters","converter","setRepositoryService","service","onUpdated","requestConverter","responseConverter","Promise","resolve","createPOST","createPUT","createDELETE","createGET","entityTypes","getAllData","createFormAPI","UserProvider","createUserRequestConverter","userStatusResponseConverter","updateUserRequestConverter","getUserResponseConverter","getUserArrayResponseConverter","getUserArrayRequestConverter","roleProvider","addConverter","singleConverter","promises","promise","getRole","allSettled","results","roleInfo","errorHandler","converterData","sendPut","HttpService","authenticationService","url","command","format","method","headers","Headers","userProfile","getUserProfile","self","fetchFxn","requestURL","requestBody","fetch","response","json","responseURL","isLoggedIn","formData","createAPI","DeleteDocumentResponseConverter","document_id","DocumentResponseConverter","GetDocumentArrayRequestConverter","searchParam","searchValue","getSearchParamValue","limit","offset","sort","GetDocumentArrayResponseConverter","sortProperty","searchValueObject","property","sortFunction","startsWith","aElement","bElement","utc1","UTC","getFullYear","getMonth","getDate","utc2","localeCompare","sortByProperty","documentInfo","GetDocumentResponseConverter","bytes","tmpSize","toFixed","getFormattedSize","UpdateDocumentRequestConverter","latestDocument","custom_personal_tag","custom_shared_tag","UploadDocumentRequestConverter","FormData","UploadDocumentResponseConverter","DocumentProvider","pollAttempts","POLLING_RATE","MAX_POLL_ATTEMPTS","deleteDocumentResponseConverter","documentResponseConverter","getDocumentResponseConverter","getDocumentArrayRequestConverter","getDocumentArrayResponseConverter","updateDocumentRequestConverter","uploadDocumentRequestConverter","uploadDocumentResponseConverter","sendForm","fetchNow","pollAttempt","sortType","repoIdArray","start_date_prop","replace","end_date_prop","NUMBER","GetReferenceArrayRequestConverter","GetReferenceArrayResponseConverter","ReferenceProvider","getReferenceArrayRequestConverter","getReferenceArrayResponseConverter","sendGetAll","GetStatsRequestConverter","GetStatsResponseConverter","statInfo","toLowerCase","CUSTOM_SHARED_TAG","DATASTORE_SIZE","FILE_TYPE","PROJECT","UPLOAD_DATE","StatProvider","getStatsRequestConverter","getStatsResponseConverter","GetTagArrayRequestConverter","GetTagArrayResponseConverter","tagInfo","GetTagResponseConverter","TagProvider","getTagResponseConverter","getTagArrayRequestConverter","getTagArrayResponseConverter","GetSingleRoleResponseConverter","roleNames","role_name","rolesInfos","getAllReferences","roleName","roleNameUpper","RoleProvider","getSingleRoleResponseConverter","root","configureStore","middleware","thunk","AppDataStore","dynamicReducers","nextReducers","combiner","replaceReducer","combineReducers","dispatch","listener","subscribe","PermissionInfo","entity","NONE","operator","GetPermissionArrayResponseConverter","permissions","function_name","lookup","permission","params","rawEntity","rawOperator","rawLevel","permissionInfo","getEntity","getOperator","getLevel","existingLevel","param","DOCUMENT","TAG","USER","STAT","DELETE","DOWNLOAD","GET","MODIFY","POST","SELF","GROUP","ANY","GetPermissionArrayRequestConverter","PermissionProvider","getPermissionArrayResponseConverter","getPermissionArrayRequestConverter","AuthorizationService","permissionProvider","permissionInfoSelector","getAllPermissionsGroupedByEntitySelector","permissionInfos","permissionEntity","permissionLevel","entityOwnerId","getPermissionLevel","displayService","scenarioService","documentService","statService","tagService","configure","start","setStorage","setAppDataStore","setDataAppStore","setAuthenticationService","setHttpService","setRoleProvider","setUserService","setUserProvider","setPermissionProvider","setDocumentProvider","setReferenceProvider","setStatProvider","setTagProvider","setSelectionService","setReferenceService","setAuthorizationService","ArrowDownSVG","ArrowUpSVG","ComboBoxItem","multiSelect","ComboBox","_onClickHandler","selectedItemIds","onSelect","selectedItems","tmpArray","from","Graphic","lcn","comboBoxItems","itemTitle","_onSelectHandler","arrowSVG","_clear","tabIndex","PersonalSVG","GlobalSVG","GlobalSwitchButton","DocumentPanelView","isExpanded","tmpDocument","isDirty","setTmpDocument","refreshDirtyFlag","doc","nextDoc","nextTmpDocument","keysToDelete","onUpdateDocument","onRemoveDocument","editProperties","originalValue","trim","slice","onTmpDocumentChanged","editProperty","canModify","long","ARRAY","oldValue","newValue","tagsDivs","cbTitle","option","PdfRenderer","pdfRenderer","_getStatus","canDelete","cancelEdit","updateDocument","getCellRenderer","_formatType","toggleGlobal","addNewPublicTag","addNewPrivateTag","Presenter","_mapStateToProps","_mapDispatchToProps","_view","_id","_model","_displayOptions","_metadataId","view","dispatchActions","bindActionCreators","getClassNames","appear","appearActive","appearDone","enter","enterActive","enterDone","exit","exitActive","exitDone","createComponentWrapper","presenterTemplate","presenter","metadataId","View","mapStateToProps","mapDispatchToProps","displayOptions","connectedPresenter","connect","WrappedComponent","ViewModelWrapper","eventName","eventData","moduleName","onSendEvent","componentName","createEvent","category","selection","displayName","getDisplayName","setProperty","onPropertyChanged","createViewModelConnector","MetadataWrapper","metadataInfo","createMetadataConnector","metaDataInfo","viewId","DisplayWrapper","classNames","timeoutResult","CSSTransition","in","unmountOnExit","createDisplayConnector","addNodeInfo","componentId","ZoomInSVG","ZoomOutSVG","DownloadSVG","TextEditSVG","DocumentPdfPreview","toolbarPluginInstance","toolbarPlugin","Toolbar","workerUrl","alignItems","backgroundColor","borderBottom","display","padding","CurrentPageLabel","GoToNextPage","Download","GoToPreviousPage","ZoomIn","ZoomOut","canDownload","xhr","XMLHttpRequest","open","setRequestHeader","send","_download","marginLeft","currentPage","numberOfPages","fileUrl","plugins","theme","httpHeaders","_getEditProperties","STATUS","getSelectedDocumentId","makeGetContext","documentId","toLocaleString","getPermissions","documentInfoVM","permissionInfoLookup","uploadedBy","hasPermission","DocumentPanelPresenter","DocumentPanelId","SearchSVG","SearchBox","_setText","onTextChange","onSearch","focused","_onTextUpdate","_onKeyPress","onFocus","_setSelected","onBlur","am4core","am4themes_animated","XYChart","chart","divName","color","minimized","am4charts","xAxes","renderer","grid","template","location","yAxes","columnSeries","series","fill","dataFields","valueY","dateX","scrollbarX","dispose","background","WordCloud","am4plugins_wordCloud","word","entries","traceUpdate","PageWidth","CirclePieChart","hiddenState","properties","opacity","depth","colors","step","slices","tooltipText","tooltipX","tooltipY","labels","ticks","endAngle","legend","position","maxHeight","scrollable","itemContainers","paddingTop","paddingBottom","truncate","wrap","DonutPieChart","innerRadius","VariableRadiusDonutPieChart","radiusValue","SearchGraphsPanelView","isAlternate","departmentData","purposeData","totalUploadsData","customTagsData","docTypeData","getCustomSharedTagsStatsVMs","getStats","itemVMs","stat","getTotalUploadsStatsVMs","getDepartmentVMs","departments","getDepartmentStatsVMs","getPurposeVMs","purposes","getPurposeStatsVMs","getDocTypeStatsVMs","hasSearchResults","getSearchDocuments","SearchGraphsPanelPresenter","SearchGraphsPanelId","SearchBannerView","showAdvanced","onToolSelected","onSearchTextChanged","onSearchParamChanged","propertyId","propertyValue","nextValue","onClearSearch","_setShowAdvanced","searchText","tools","searchParamsBasic","searchParamsAdvanced","toolDivs","tool","basicDivs","cbOptions","_onTypeChanged","advancedDivs","_onTextChanged","_onDateChanged","maxWidth","_onSearch","_onSearchTextChanged","_onDone","_onClearSearch","VIEW_ID","getTools","getToolVMs","getSelectedNodeId","selectedId","getSearchParamsBasicVMs","getAllReferencesGroupedByType","getAllPublicTags","referenceTypes","publicTags","createItemVM","getSearchParamsAdvancedVMs","getSearchText","popNode","setSearchParam","setSearchText","clearSearch","nextId","pushNode","itemVM","SearchBannerPresenter","SortSVG","Size","SearchResultsPanelView","resizeObserver","FULL","ResizeObserver","entry","contentRect","ONE_HALF","ONE_THIRD","getElementById","observe","Element","resultViews","onResultViewSelected","sortTypes","selectedSort","onSortSelected","selectedResultView","ResultRenderer","resultViewDivs","resultView","sortTitle","getStatusVMs","statuses","getSearchResultVMs","departmentVMs","statusVMs","purposeVMs","getResultViews","getSelectedResultViewId","getResultViewVMs","getSortVMs","getSortTypes","getActiveSortId","getSelectedSort","getActiveUsers","showNode","setSortParam","SearchResultsPanelPresenter","SearchView","toolsVisible","SearchPresenter","FileInput","fileInputRef","isDragging","onSelected","files","setIsDragging","preventDefault","onDragOver","_dragOver","onDragLeave","_dragLeave","multiple","_onInputChanged","accept","RemoveSVG","ApproveSVG","Popup","onProceed","cancelText","proceedText","isVisible","_onCancel","_onProceed","FileSVG","RegistrationStatusVMType","UploadPanelView","_onApproved","onPendingDocumentApproved","_onSelected","onPendingDocumentAdded","_onDocumentSelected","pendingFiles","_setSelectedId","_onPendingDocumentRemoved","onPendingDocumentRemoved","_setPopupVisible","_onCancelUpload","onCancelUpload","stopPropagation","showPopup","pendingDocumentsDiv","pendingDocument","deleted","small","TransitionGroup","component","getPendingFilesVMs","statusReferenceInfos","statusReferenceInfo","startUpload","_removePendingDocument","_approvePendingDocument","_cancelUpload","approvePendingFile","removePendingFile","cancelUpload","UploadPanelPresenter","ProfileInfoView","tmpUser","setTmpUser","nextTmpUser","currentUser","now","onUserUpdated","onUserRemoved","accountStatuses","userLookUp","editDivs","renderDiv","departmentId","departmentTitle","onTmpUserChanged","roleId","roleTitle","accountStatusId","accountStatusTitle","toggleEdit","NewUserProfileInfoView","onUserAdded","addUser","UserRequestInfoView","userRequest","onAcceptUserRequest","onDeclineUserRequest","onDecline","onAccept","ProfilePanelView","interval","isAddingNewUser","setInterval","fetchUsers","clearInterval","newUser","toggleIsAddingNewUser","profileInfoViews","userRequestViews","userRequests","canModifySelf","canCreate","getManagedUserVMs","getCurrentUser","getCurrentUserVM","getRolesVMs","getUserRequestVMs","getPendingUsers","createUser","acceptUserRequest","declineUserRequest","ProfilePanelPresenter","AcceptSVG","TagsPanelView","nominatedTags","tags","nominatedTagsDiv","nominatedTag","tagDivs","getTagVMs","TagsPanelPresenter","StatsPanelView","StatsPanelPresenter","defaultHandler","buttonHandler","onToolClick","DocPreviewSVG","SystemToolbarView","documentPreviewTool","onDocumentPreviewSelected","toolbarDiv","docSelected","docTitle","SYSTEM_TOOLBAR_VIEW_ID","getSelectedNode","getDocumentNodeInfo","enabled","getDocumentPreviewToolVM","nodeInfo","toggleNode","SystemToolbarPresenter","AppView","loading","fetchData","fetchStats","fetchTags","fetchReferences","currentSystemTool","docPreviewTool","admin","docVisible","canSearch","large","AppPresenter","SystemBannerView","onReturnHome","onLogout","userName","_onReturnHome","_onLogout","formatUserName","clearDocuments","SystemBannerPresenter","LandingPanelView","phone","onLogin","onRegister","_onLogin","_onRegister","APPROVED","getRegistrationStatus","registerStatus","REJECTED","login","register","userVM","LandingPanelPresenter","LandingView","LandingPresenter","KnowledgeManagementView","cookie","getCookie","ca","i","c","charAt","indexOf","isAuthenticated","tmp","KnowledgeManagementPresenter","ReactDOM","render","StrictMode","fallback","getStorage","DndProvider","backend","HTML5Backend","href"],"mappings":"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","file":"static/js/main.ed543048.chunk.js","sourcesContent":["import { DocumentInfo, ReferenceType, ReferenceInfo, UserInfo, ParamType, SearchParamInfo } from \"../../../model\";\r\nimport { IRepoItem } from \"../../../framework/services/repoService/repoItem\";\r\n\r\nexport const convertArrayToObject = (array: any[], key: string | number) => {\r\n    const initialValue = {};\r\n    let result = {};\r\n    if (array && array.length > 0) {\r\n        result = array.reduce((obj, item) => {\r\n            return {\r\n                ...obj,\r\n                [item[key]]: {\r\n                    id: item[key],\r\n                    ...item\r\n                },\r\n            };\r\n        }, initialValue);\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const convertObjectToArray = (object: { [s: string]: unknown; } | ArrayLike<unknown>) => {\r\n    let result: unknown[] = [];\r\n\r\n    if (object) {\r\n        result = Object.values(object);\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport const convertObjectToKeyObject = (object: { [s: string]: any; } | ArrayLike<any>) => {\r\n    let result: any[] = [];\r\n\r\n    if (object) {\r\n        result = Object.values(object);\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport const forEach = (items: any, consumer: any) => {\r\n    let itemKeys = Object.keys(items), itemsLength = itemKeys.length;\r\n    for (let index = 0; index < itemsLength; index++) {\r\n        let key = itemKeys[index];\r\n        let value = items[key];\r\n\r\n        let result = consumer(value);\r\n        if (result) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n// Need to consolidate into other for each, but not right now\r\nexport const forEachKVP = (items: Record<string, any>, consumer: any) => {\r\n    let itemKeys = Object.keys(items), itemsLength = itemKeys.length;\r\n    for (let index = 0; index < itemsLength; index++) {\r\n        let key = itemKeys[index];\r\n        let value = items[key];\r\n\r\n        let result = consumer(key, value);\r\n        if (result) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nexport const sortByProperty = (items: { [s: string]: any; } | ArrayLike<any>, sortProperty: string) => {\r\n\r\n    let property = sortProperty;\r\n\r\n    let sortFunction = null;\r\n\r\n    if (property.startsWith('-')) {\r\n        property = property.substring(1);\r\n\r\n        sortFunction = (a: { [x: string]: any; }, b: { [x: string]: any; }) => {\r\n\r\n            let aElement: any = a[property];\r\n            let bElement: any = b[property];\r\n\r\n            let result;\r\n\r\n            if (aElement instanceof Date && bElement instanceof Date) {\r\n                const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n\r\n                // Discard the time and time-zone information.\r\n                const utc1 = Date.UTC(aElement.getFullYear(), aElement.getMonth(), aElement.getDate());\r\n                const utc2 = Date.UTC(bElement.getFullYear(), bElement.getMonth(), bElement.getDate());\r\n                result = Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n            }\r\n            else if (aElement && bElement) {\r\n                result = bElement.localeCompare(aElement);\r\n            }\r\n            else {\r\n                result = -1;\r\n            }\r\n\r\n            return result;\r\n        }\r\n    }\r\n    else sortFunction = (a: { [x: string]: any; }, b: { [x: string]: any; }) => {\r\n\r\n        let aElement: any = a[property];\r\n        let bElement: any = b[property];\r\n\r\n        let result;\r\n\r\n        if (aElement instanceof Date && bElement instanceof Date) {\r\n            const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n\r\n            // Discard the time and time-zone information.\r\n            const utc1 = Date.UTC(aElement.getFullYear(), aElement.getMonth(), aElement.getDate());\r\n            const utc2 = Date.UTC(bElement.getFullYear(), bElement.getMonth(), bElement.getDate());\r\n            result = Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n        }\r\n        else if (aElement && bElement) {\r\n            result = aElement.localeCompare(bElement);\r\n        }\r\n        else {\r\n            result = -1;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return Object.values(items).sort(sortFunction);\r\n}\r\n\r\nexport const findFirstByProperty = (items: any[], propertyName: string, propertyValue: any) => {\r\n    let result = null;\r\n\r\n    forEach(items, (item: { [x: string]: any; }) => {\r\n        if (item[propertyName] === propertyValue) {\r\n            result = item;\r\n            return true;\r\n        }\r\n    })\r\n\r\n    return result? result[0] : null; // or undefined\r\n}\r\n\r\nexport function arrayEquals(a: any[], b: string | any[]) {\r\n    return Array.isArray(a) &&\r\n        Array.isArray(b) &&\r\n        a.length === b.length &&\r\n        a.every((val, index) => val === b[index]);\r\n}\r\n\r\n","export enum LogLevel { ALL, TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF }\r\n","import {ILogger} from \"../../api\";\r\nimport {Appender, getLogger, Level, Logger} from \"log4javascript\";\r\nimport {LogLevel} from \"../../api\";\r\nimport exp from \"constants\";\r\n\r\nexport class DefaultLogger implements ILogger {\r\n    private log: Logger;\r\n\r\n    constructor(className: string) {\r\n        this.log = getLogger(className);\r\n    }\r\n\r\n    debug(...messages: any[]): void {\r\n        this.log.debug(...messages);\r\n    }\r\n\r\n    error(...messages: any[]): void {\r\n        this.log.error(...messages);\r\n    }\r\n\r\n    fatal(...messages: any[]): void {\r\n        this.log.fatal(...messages);\r\n    }\r\n\r\n    info(...messages: any[]): void {\r\n        this.log.info(...messages);\r\n    }\r\n\r\n    trace(...messages: any[]): void {\r\n        this.log.trace(...messages);\r\n    }\r\n\r\n    warn(...messages: any[]): void {\r\n        this.log.warn(...messages);\r\n    }\r\n\r\n    addAppender(appender: Appender) {\r\n        this.log.addAppender(appender);\r\n    }\r\n\r\n    assert(assertion: () => boolean): void {\r\n        this.log.assert(assertion());\r\n    }\r\n\r\n    group(name: string, expanded: boolean): void {\r\n        this.log.group(name, expanded);\r\n    }\r\n\r\n    groupEnd(): void {\r\n        this.log.groupEnd();\r\n    }\r\n\r\n    time(name: string, level: LogLevel): void {\r\n        this.log.time(name, this.getLog4JLevel(level));\r\n    }\r\n\r\n    timeEnd(name: string): void {\r\n        this.log.timeEnd(name);\r\n    }\r\n\r\n    getLog4JLevel(level: LogLevel): Level {\r\n        let log4JLevel: Level;\r\n        switch(level) {\r\n            case LogLevel.ALL:\r\n                log4JLevel = Level.ALL;\r\n                break;\r\n            case LogLevel.TRACE:\r\n                log4JLevel = Level.TRACE;\r\n                break;\r\n            case LogLevel.DEBUG:\r\n                log4JLevel = Level.DEBUG;\r\n                break;\r\n            case LogLevel.INFO:\r\n                log4JLevel = Level.INFO;\r\n                break;\r\n            case LogLevel.WARN:\r\n                log4JLevel = Level.WARN;\r\n                break;\r\n            case LogLevel.ERROR:\r\n                log4JLevel = Level.ERROR;\r\n                break;\r\n            case LogLevel.FATAL:\r\n                log4JLevel = Level.FATAL;\r\n                break;\r\n            case LogLevel.OFF:\r\n            default:\r\n                log4JLevel = Level.OFF;\r\n        }\r\n        return log4JLevel;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import {ILogger} from \"../api\";\r\nimport {DefaultLogger} from \"../services/logService/defaultLogger\";\r\nimport {Nullable} from \"./typeUtils\";\r\nimport {ILoggablePlugin} from \"../api\";\r\nimport {LogLevel} from \"../api\";\r\nimport {forEach} from \"../../framework.visual/extras/utils/collectionUtils\";\r\n\r\nexport abstract class LoggablePlugin implements ILoggablePlugin{\r\n\r\n    protected constructor() {\r\n    }\r\n\r\n    debug(...messages: any[]): void {\r\n        this.syncToLog(logger => logger.debug(...messages));\r\n    }\r\n\r\n    error(...messages: any[]): void {\r\n        this.syncToLog(logger => logger.error(...messages));\r\n    }\r\n\r\n    fatal(...messages: any[]): void {\r\n        this.syncToLog(logger => logger.fatal(...messages));\r\n    }\r\n\r\n    info(...messages: any[]): void {\r\n        this.syncToLog(logger => logger.info(...messages));\r\n    }\r\n\r\n    trace(...messages: any[]): void {\r\n        this.syncToLog(logger => logger.trace(...messages));\r\n    }\r\n\r\n    warn(...messages: any[]): void {\r\n        this.syncToLog(logger => logger.warn(...messages));\r\n    }\r\n\r\n    loopMessages(logFxn: (message: string) => void, ...messages: any[] ) {\r\n        forEach(messages, (message:string) => {\r\n            logFxn.call(this, message);\r\n        })\r\n    }\r\n\r\n    syncToLog( logFunction: (logger: ILogger) => void) {\r\n        const logger: Nullable<ILogger> = this.getLogger();\r\n\r\n        if (logger != null) {\r\n            logFunction.call(this, logger);\r\n        }\r\n        else {\r\n            logFunction.call(this, new DefaultLogger(this.getClassName()))\r\n        }\r\n    }\r\n\r\n    abstract getLogger(): Nullable<ILogger>;\r\n    abstract getClassName(): string;\r\n\r\n    assert(assertion: () => boolean): void {\r\n        this.getLogger()?.assert(assertion);\r\n    }\r\n\r\n    group(name: string, expanded: boolean = false): void {\r\n        this.getLogger()?.group(name, expanded);\r\n    }\r\n\r\n    groupEnd(): void {\r\n        this.getLogger()?.groupEnd();\r\n    }\r\n\r\n    time(name: string, level: LogLevel): void {\r\n        this.getLogger()?.time(name, level);\r\n    }\r\n\r\n    timeEnd(name: string): void {\r\n        this.getLogger()?.timeEnd(name);\r\n    }\r\n}\r\n","import {forEach, forEachKVP} from \"../../framework.visual/extras/utils/collectionUtils\";\r\n\r\nexport const nameOf = <T>(name: keyof T) => name;\r\n\r\nexport const getValueOrDefault = (object: any, propertyName: string, defaultValue: any) => {\r\n\r\n    let result = defaultValue;\r\n    if (object && object.hasOwnProperty(propertyName)) {\r\n        if (object[propertyName]) {\r\n            result = object[propertyName];\r\n        }\r\n    }\r\n    else {\r\n        console.log(`Property <${propertyName}> does not exist in object: ${JSON.stringify(object)}`);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const promiseFulfilled = <T extends {}>(v: PromiseSettledResult<T>): v is PromiseFulfilledResult<T> => v.status === 'fulfilled';\r\n\r\nexport const bindInstanceMethods = (o: object) => {\r\n    // Get all defined class methods\r\n    const propertyDescriptors = Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o));\r\n    const dictionary: Record<string, any> = o;\r\n\r\n    forEachKVP(propertyDescriptors, (key: string, value: PropertyDescriptor) => {\r\n        try {\r\n            if (key !== 'constructor') {\r\n                const element = dictionary[key];\r\n                if (element != null) {\r\n                    dictionary[key] = element.bind(o);\r\n                }\r\n            }\r\n            // if (value['get'] || value['set']) {\r\n            //     console.log(`binding: skipping property accessor: ${key}`)\r\n            // }\r\n            // if (key === 'constructor') {\r\n            //     console.log(`binding: skipping constructor: ${key}`)\r\n            // }\r\n            // else {\r\n            //     dictionary[key] = dictionary[key].bind(o);\r\n            // }\r\n        }\r\n        catch (ex) {\r\n            // debugger;\r\n        }\r\n\r\n    });\r\n}\r\n\r\nexport type Nullable<T> = T | null;\r\n","import {IBasePlugin} from \"../api\";\r\nimport {ILogger} from \"../api\";\r\nimport {LoggablePlugin} from \"./loggablePlugin\";\r\nimport {ILogService} from \"../api\";\r\nimport {bindInstanceMethods, Nullable} from \"./typeUtils\";\r\nimport {ILoggablePlugin} from \"../api\";\r\n\r\nexport abstract class BasePlugin extends LoggablePlugin implements IBasePlugin, ILoggablePlugin {\r\n    private className: string = ''\r\n    public static class: string = 'Plugin';\r\n\r\n    private logService: Nullable<ILogService> = null;\r\n    private logger: Nullable<ILogger> = null;\r\n\r\n    protected constructor()\r\n    {\r\n        super();\r\n        this.appendClassName(`${BasePlugin.class}/`);\r\n\r\n        bindInstanceMethods(this);\r\n    }\r\n\r\n    protected appendClassName(className: string) {\r\n        this.className = `/${className}${this.className}`;\r\n    }\r\n\r\n    start(): void {\r\n        if (this.logService != null) {\r\n            this.debug(`Activating Plugin`);\r\n        }\r\n        else {\r\n            throw new Error(`Log Service Not Available`);\r\n        }\r\n    }\r\n\r\n    stop(): void {\r\n    }\r\n\r\n    configure(): void {\r\n    }\r\n\r\n    getLogger(): Nullable<ILogger> {\r\n        return this.logger;\r\n    }\r\n\r\n    setLogService(logService: Nullable<ILogService>) {\r\n        this.logService = logService;\r\n\r\n        if (this.logService != null) {\r\n            this.logger = this.logService.getLogger(this.className);\r\n        } else {\r\n            this.logger = null;\r\n        }\r\n    }\r\n\r\n    getClassName(): string {\r\n        return this.className;\r\n    }\r\n}\r\n","import {createSlice, Dispatch, PayloadAction, Slice} from \"@reduxjs/toolkit\";\r\nimport {forEach, forEachKVP} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {IRepoItem} from \"./repoItem\";\r\nimport {BasePlugin} from \"../../extras/basePlugin\";\r\nimport {Nullable} from \"../../extras/typeUtils\";\r\nimport {IStorage} from \"../../api\";\r\nimport {IRepositoryService} from \"../../api\";\r\n\r\ninterface RepoState {\r\n    storage: Record<string, Record<string, IRepoItem>> // redux by class, then by id\r\n    classToFullClassNameMap: Record<string, string>,\r\n    storageByClass: Record<string, Record<string, IRepoItem>> // redux by class, then by id\r\n}\r\n\r\ninterface RepoAction {\r\n    items: IRepoItem[]\r\n}\r\n\r\ntype RepoSliceType = Slice<RepoState,\r\n    {\r\n        addOrUpdateHandler: (state: RepoState, action: PayloadAction<RepoAction>) => void;\r\n        removeByIdHandler: (state: RepoState, action: PayloadAction<{ className: string; ids: string[] }>) => void;\r\n        removeByTypeHandler: (state: RepoState, action: PayloadAction<{ className: string; includeSubTypes: boolean }>) => void;\r\n        removeHandler: (state: RepoState, action: PayloadAction<RepoAction>) => void;\r\n    }>;\r\n\r\nexport class RepositoryService extends BasePlugin implements IRepositoryService {\r\n    public static readonly class:string = 'RepositoryService';\r\n    private storage: Nullable<IStorage> = null;\r\n\r\n    private readonly initialState: RepoState;\r\n    private model: RepoSliceType;\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(RepositoryService.class);\r\n\r\n        this.initialState = {\r\n            storage: {},\r\n            classToFullClassNameMap: {},\r\n            storageByClass: {}\r\n        }\r\n\r\n        this.model = createSlice({\r\n            name: 'application/repository',\r\n            initialState: this.initialState,\r\n            reducers: {\r\n                addOrUpdateHandler: (state, action: PayloadAction<RepoAction>) => {\r\n                    forEach(action.payload.items, (item: IRepoItem) => {\r\n                        let id = item.id;\r\n                        let className = item.className;\r\n\r\n                        let classes = className ? className.split('/') : [];\r\n                        let shortName = classes[1];\r\n\r\n                        if (!state.classToFullClassNameMap[shortName]) {\r\n                            state.classToFullClassNameMap[shortName] = className;\r\n                        }\r\n\r\n                        if (!state.storageByClass[className]) {\r\n                            state.storageByClass[className] = {};\r\n                        }\r\n\r\n                        state.storageByClass[className][id] = item;\r\n                    })\r\n                },\r\n                removeHandler: (state, action: PayloadAction<RepoAction>) => {\r\n                    forEach(action.payload.items, (item: IRepoItem) => {\r\n                        let id = item.id;\r\n                        let className = item.className;\r\n\r\n                        this.removeSingle(state, className, id);\r\n                    })\r\n                },\r\n                removeByTypeHandler: (state, action: PayloadAction<{className: string, includeSubTypes: boolean}>) => {\r\n                    let className = action.payload.className;\r\n                    let includeSubTypes = action.payload.includeSubTypes;\r\n\r\n\r\n                    if (state.classToFullClassNameMap[className]) {\r\n                        let fullClassName = state.classToFullClassNameMap[className];\r\n\r\n                        if (state.storageByClass[fullClassName]) {\r\n                            delete state.storageByClass[fullClassName];\r\n                            delete state.classToFullClassNameMap[className];\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (includeSubTypes) {\r\n                        forEachKVP(Object.values(state.classToFullClassNameMap), (shortClassName: string, longClassName: string) => {\r\n                            if (longClassName.includes(`/${className}/`)) {\r\n                                if (state.storageByClass[longClassName]) {\r\n                                    delete state.storageByClass[longClassName];\r\n                                    delete state.classToFullClassNameMap[shortClassName];\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                removeByIdHandler: (state, action: PayloadAction<{className: string, ids: string[]}>) => {\r\n                    forEach(action.payload.ids, (itemId: string) => {\r\n                        let id = itemId;\r\n                        let className = action.payload.className;\r\n\r\n                        let longClassName = state.classToFullClassNameMap[className];\r\n\r\n                        if (longClassName) {\r\n                            this.removeSingle(state, longClassName, id);\r\n                        }\r\n                    })\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    getState() {\r\n        return this.getRepoState();\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        if (this.storage != null) {\r\n            this.storage.addEventHandlers(this.model.name, this.model.reducer);\r\n        }\r\n        else {\r\n            this.error(\"Data App Store not set for repository service\");\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    configure() {\r\n        super.configure();\r\n    }\r\n\r\n    setStorage(value: Nullable<IStorage>) {\r\n        this.storage = value;\r\n    }\r\n\r\n    removeSingle(state: RepoState, className:string, id: string) {\r\n        if (state.storageByClass[className]) {\r\n            if (state.storageByClass[className][id]) {\r\n                delete state.storageByClass[className][id];\r\n            }\r\n\r\n            if (Object.keys(state.storageByClass[className]).length === 0) {\r\n                delete state.storageByClass[className];\r\n\r\n                let classes = className.split('/');\r\n                if (classes[1]) {\r\n                    delete state.classToFullClassNameMap[classes[1]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getRepoItem<Type extends IRepoItem>(className: string, id: string): Nullable<Type> {\r\n        let result: Nullable<Type> = null;\r\n\r\n        let repoState: RepoState = this.getRepoState();\r\n\r\n        let fullClassName = '';\r\n        if (repoState.classToFullClassNameMap[className]) {\r\n            fullClassName = repoState.classToFullClassNameMap[className];\r\n        }\r\n\r\n        if (repoState.storageByClass[fullClassName]) {\r\n            if (repoState.storageByClass[fullClassName][id] != null) {\r\n                result = <Type>repoState.storageByClass[fullClassName][id];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    getAll<Type extends IRepoItem>(className: string, includeSubTypes: boolean = false, ...ids: string[]): Record<string, Type> {\r\n        let result: Record<string, Type>;\r\n\r\n        let repoState: RepoState = this.getRepoState();\r\n\r\n        let fullClassName = '';\r\n        if (repoState.classToFullClassNameMap[className]) {\r\n            fullClassName = repoState.classToFullClassNameMap[className];\r\n        }\r\n\r\n        if (includeSubTypes) {\r\n            result = {};\r\n            forEachKVP(Object.values(repoState.classToFullClassNameMap), (shortClassName: string, longClassName: string) => {\r\n\r\n                if (longClassName.includes(`/${className}/`)) {\r\n                    forEachKVP(repoState.storageByClass[longClassName], (itemKey: string, itemValue: Type) => {\r\n                        if (ids && ids.includes(itemKey)) {\r\n                            result[itemKey] = itemValue;\r\n                        } else {\r\n                            result[itemKey] = itemValue;\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n        } else if (repoState.storageByClass[fullClassName]) {\r\n            result = <Record<string, Type>>repoState.storageByClass[fullClassName];\r\n            // forEachKVP(repoState.storageByClass[fullClassName], (itemKey: string, itemValue: Type) => {\r\n            //     if (ids && ids.includes(itemKey)) {\r\n            //         result[itemKey] = itemValue;\r\n            //     }\r\n            //     else {\r\n            //         result[itemKey] = itemValue;\r\n            //     }\r\n            // })\r\n        } else {\r\n            result = {};\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    getRepoState(): RepoState {\r\n        return this.storage?.getState()[this.model.name];\r\n    }\r\n\r\n    getClassDictionary(): Record<string, string>{\r\n        return this.getRepoState().classToFullClassNameMap;\r\n    }\r\n\r\n    removeAllByType(className: string, includeSubTypes: boolean = false) {\r\n        this.storage?.sendEvent(this.model.actions.removeByTypeHandler({className, includeSubTypes}))\r\n    }\r\n\r\n    addOrUpdateRepoItem<Type extends IRepoItem>(item: Type) {\r\n        this.storage?.sendEvent(this.model.actions.addOrUpdateHandler({items: [item]}));\r\n    }\r\n\r\n    addOrUpdateAllRepoItems<Type extends IRepoItem>(items: Type[]) {\r\n        this.storage?.sendEvent(this.model.actions.addOrUpdateHandler({items: items}));\r\n    }\r\n\r\n    removeRepoItem<Type extends IRepoItem>(item: Type) {\r\n        this.storage?.sendEvent(this.model.actions.removeHandler({items: [item]}));\r\n    }\r\n\r\n    removeAllById(className: string, ...ids: string[]) {\r\n        this.storage?.sendEvent(this.model.actions.removeByIdHandler({className, ids}));\r\n    }\r\n}\r\n","import {BasePlugin} from \"../../extras/basePlugin\";\r\nimport {ILogService} from \"../../api\";\r\nimport {ILogger} from \"../../api\";\r\nimport {DefaultLogger} from \"./defaultLogger\";\r\nimport {LogLevel} from \"../../api\";\r\nimport {getRootLogger, JsonLayout, Level, PatternLayout, PopUpAppender} from \"log4javascript\";\r\nimport {Nullable} from \"../../extras/typeUtils\";\r\n\r\nexport class LogService extends BasePlugin implements ILogService {\r\n\r\n    private readonly loggers: Record<string, ILogger>;\r\n    private readonly globalLogger: string = 'globalLogger';\r\n\r\n    // Create a PopUpAppender with default options\r\n    private popUpAppender: PopUpAppender = new PopUpAppender();\r\n\r\n    public static class: string = 'LogService';\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(LogService.class);\r\n\r\n        this.loggers = {};\r\n        this.loggers[this.globalLogger] = new DefaultLogger(this.globalLogger);\r\n\r\n        // Change the desired configuration options\r\n        this.popUpAppender.setFocusPopUp(true);\r\n        this.popUpAppender.setShowCommandLine(false);\r\n        // this.popUpAppender.setLayout(new JsonLayout(true, false));\r\n        this.popUpAppender.setLayout(new PatternLayout(\r\n            '{ %n  timestamp: [%d{dd MMM yyyy HH:mm:ss,SSS}] %n  level: [%p] %n  logger: [%c] %n  message: %m %n}'\r\n            // `%d{HH:mm:ss} %-5p - %c - %m{1}%n%n`\r\n        ));\r\n\r\n\r\n        const ref: Nullable<ILogService> = <ILogService>this;\r\n        this.setLogService(ref);\r\n    }\r\n\r\n    getLogger(className?: string): Nullable<ILogger> {\r\n        let result;\r\n\r\n        if (className) {\r\n            let shortName = className.split('/')[1];\r\n\r\n            if (this.loggers[shortName]) {\r\n                result = this.loggers[shortName];\r\n            }\r\n            else {\r\n                result = new DefaultLogger(shortName);\r\n                // Add the appender to the logger\r\n                // result.addAppender(this.popUpAppender);\r\n                this.loggers[shortName] = result;\r\n            }\r\n        }\r\n        else {\r\n            result = this.loggers[this.globalLogger];\r\n        }\r\n\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    configure() {\r\n        super.configure();\r\n        this.setLogLevel(LogLevel.ALL);\r\n    }\r\n\r\n    setLogLevel(level: LogLevel): void {\r\n        let log4JLevel: Level;\r\n        switch(level) {\r\n            case LogLevel.ALL:\r\n                log4JLevel = Level.ALL;\r\n                break;\r\n            case LogLevel.TRACE:\r\n                log4JLevel = Level.TRACE;\r\n                break;\r\n            case LogLevel.DEBUG:\r\n                log4JLevel = Level.DEBUG;\r\n                break;\r\n            case LogLevel.INFO:\r\n                log4JLevel = Level.INFO;\r\n                break;\r\n            case LogLevel.WARN:\r\n                log4JLevel = Level.WARN;\r\n                break;\r\n            case LogLevel.ERROR:\r\n                log4JLevel = Level.ERROR;\r\n                break;\r\n            case LogLevel.FATAL:\r\n                log4JLevel = Level.FATAL;\r\n                break;\r\n            case LogLevel.OFF:\r\n            default:\r\n                log4JLevel = Level.OFF;\r\n        }\r\n\r\n        getRootLogger().setLevel(log4JLevel);\r\n    }\r\n}\r\n\r\n","import {createSelector, createSlice, PayloadAction, Slice} from \"@reduxjs/toolkit\";\r\nimport {BasePlugin} from \"../../extras/basePlugin\";\r\nimport {ISelectionService, IStorage} from \"../../api\";\r\nimport {Nullable} from \"../../extras/typeUtils\";\r\n\r\ninterface ContextHandlerAction {\r\n    key: string;\r\n    value: string;\r\n}\r\n\r\ninterface SelectionState {\r\n    contextMap: Record<string, string>\r\n}\r\n\r\ntype SelectionSliceType = Slice<SelectionState,\r\n    {\r\n        setContextHandler: (state: SelectionState, action: PayloadAction<ContextHandlerAction>) => void\r\n    }>;\r\n\r\nexport class SelectionService extends BasePlugin implements ISelectionService {\r\n    public static readonly class:string = 'SelectionService';\r\n    private storage: Nullable<IStorage> = null;\r\n    private model: SelectionSliceType;\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(SelectionService.class);\r\n\r\n        this.model = createSlice({\r\n            name: 'application/selection',\r\n            initialState: {\r\n                contextMap: {}\r\n            },\r\n            reducers: {\r\n                setContextHandler: (state, action: PayloadAction<ContextHandlerAction>) => {\r\n                    // \"mutate\" the array by calling push()\r\n                    let key = action.payload.key;\r\n                    let value = action.payload.value;\r\n\r\n                    state.contextMap[key] = value;\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        if (this.storage != null) {\r\n            this.storage.addEventHandlers(this.model.name, this.model.reducer);\r\n        }\r\n        else {\r\n            this.error(\"Data App Store not set for selection service\");\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    configure() {\r\n        super.configure();\r\n    }\r\n\r\n    setAppDataStore(appDataStore: IStorage) {\r\n        this.storage = appDataStore;\r\n    }\r\n\r\n    getContextMap = () => {\r\n        return this.getModelState().contextMap;\r\n    };\r\n\r\n    getModelState(): SelectionState {\r\n        return this.storage?.getState()[this.model.name];\r\n    }\r\n\r\n    getContext(key: string): string {\r\n        return this.getModelState().contextMap[key];\r\n    }\r\n\r\n    setContext(key: string, value: string) {\r\n        this.info(`Setting Selection: ${key} : ${value}`)\r\n        this.storage?.sendEvent(this.model.actions.setContextHandler({key, value}));\r\n    }\r\n\r\n    makeGetContext(key: string) {\r\n        return createSelector(\r\n            [this.getContextMap],\r\n            (contextMap) => {\r\n                let result = contextMap[key];\r\n\r\n                return result ? result : null;\r\n            }\r\n        );\r\n    }\r\n}\r\n","import {BasePlugin} from \"../../extras/basePlugin\";\r\nimport {createSlice, PayloadAction, Slice} from \"@reduxjs/toolkit\";\r\nimport {Nullable} from \"../../extras/typeUtils\";\r\nimport {IDisplayService, IStorage} from \"../../api\";\r\n\r\ntype NodeInfo = {\r\n    containerId?: string,\r\n    visible?: boolean,\r\n    appearClass?: string,\r\n    enterClass?: string,\r\n    exitClass?: string,\r\n    timeout?: number\r\n}\r\n\r\ntype ContainerInfo = {\r\n    currentNodeId: Nullable<string>\r\n}\r\n\r\ninterface DisplayState {\r\n    nodes: Record<string, NodeInfo> // redux by class, then by id\r\n    containers: Record<string, ContainerInfo>\r\n}\r\n\r\ntype DisplaySliceType = Slice<DisplayState,\r\n    {\r\n        containerUpdatedHandler: (state: DisplayState, action: PayloadAction<{ nodeId: string; containerId: string }>) => void;\r\n        nodeInfoUpdatedHandler: (state: DisplayState, action: PayloadAction<{ nodeId: string; options: any }>) => void;\r\n        visibilityUpdatedHandler: (state: DisplayState, action: PayloadAction<{ nodeId: string; visible: boolean }>) => void\r\n    }, string>;\r\n\r\nexport class DisplayService extends BasePlugin implements IDisplayService {\r\n    public static readonly class:string = 'DisplayService';\r\n    private appDataStore: Nullable<IStorage> = null;\r\n\r\n    private model: DisplaySliceType;\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(DisplayService.class);\r\n\r\n        this.model = createSlice({\r\n            name: 'application/display',\r\n            initialState: {\r\n                nodes: {},\r\n                containers: {}\r\n            },\r\n            reducers: {\r\n                nodeInfoUpdatedHandler: (state, action: PayloadAction<{nodeId: string, options: any}>) => {\r\n                    const { nodeId, options}  = action.payload;\r\n\r\n                    const { visible, containerId} = options;\r\n\r\n                    state.nodes[nodeId] = options;\r\n\r\n                    if (containerId) {\r\n                        if (state.containers[containerId] === undefined) {\r\n                            state.containers[containerId] = {\r\n                                currentNodeId: null\r\n                            };\r\n                        }\r\n                        if (visible) {\r\n                            state.containers[containerId].currentNodeId = nodeId;\r\n                        }\r\n                    }\r\n                },\r\n                containerUpdatedHandler: (state, action: PayloadAction<{nodeId: string, containerId: string}>) => {\r\n                    const { nodeId, containerId } = action.payload;\r\n\r\n                    state.containers[containerId].currentNodeId = nodeId;\r\n                },\r\n                visibilityUpdatedHandler: (state, action: PayloadAction<{nodeId: string, visible: boolean}>) => {\r\n                    const { nodeId, visible } = action.payload;\r\n\r\n                    let node = state.nodes[nodeId];\r\n                    if (node) {\r\n                        node.visible = visible;\r\n                    }\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    setStorage(value: Nullable<IStorage>) {\r\n        this.appDataStore = value;\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        this.appDataStore?.addEventHandlers(this.model.name, this.model.reducer);\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    configure() {\r\n        super.configure();\r\n    }\r\n\r\n    getSelectedNodeId(containerId: string): Nullable<string> {\r\n        let result = null;\r\n\r\n        let container = this.getContainer(containerId);\r\n        if (container != null) {\r\n            result = container.currentNodeId;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getContainer (containerId: string): ContainerInfo {\r\n        return this.appDataStore?.getState()[this.model.name].containers[containerId];\r\n    }\r\n\r\n    setVisibility(nodeId: string, visible: boolean) {\r\n        this.appDataStore?.sendEvent(this.model.actions.visibilityUpdatedHandler({ nodeId, visible }));\r\n    }\r\n\r\n    toggleNode(nodeId: string) {\r\n        let viewInfo = this.getNodeInfo(nodeId);\r\n\r\n        if (viewInfo && viewInfo.visible === true) {\r\n            this.setVisibility(nodeId, false);\r\n        } else {\r\n            this.setVisibility(nodeId, true);\r\n        }\r\n    }\r\n\r\n    hideNode(nodeId: string) {\r\n        let viewInfo = this.getNodeInfo(nodeId);\r\n\r\n        if (viewInfo && viewInfo.visible === true) {\r\n            this.setVisibility(nodeId, false);\r\n        }\r\n    }\r\n\r\n    showNode(nodeId: string) {\r\n\r\n        let viewInfo = this.getNodeInfo(nodeId);\r\n\r\n        if (viewInfo && viewInfo.visible === false) {\r\n            this.setVisibility(nodeId, true);\r\n        }\r\n    }\r\n\r\n    popNode(containerId: string) {\r\n        let container = this.getContainer(containerId);\r\n\r\n        let currentNodeId = container.currentNodeId;\r\n\r\n        if (currentNodeId != null) {\r\n            this.setVisibility(currentNodeId, false);\r\n        }\r\n\r\n        this.appDataStore?.sendEvent(this.model.actions.containerUpdatedHandler({ containerId, nodeId: '' }));\r\n    }\r\n\r\n    pushNode(nextNodeId: string) {\r\n\r\n        let viewInfo = this.getNodeInfo(nextNodeId);\r\n\r\n        let containerId = viewInfo.containerId;\r\n\r\n        let container = this.getContainer(containerId);\r\n\r\n        let currentNodeId = container.currentNodeId;\r\n\r\n        if (nextNodeId === currentNodeId) return;\r\n\r\n        if (currentNodeId != null) {\r\n            this.setVisibility(currentNodeId, false);\r\n        }\r\n\r\n        this.setVisibility(nextNodeId, true)\r\n\r\n        if (nextNodeId !== undefined) {\r\n            this.appDataStore?.sendEvent(this.model.actions.containerUpdatedHandler({ containerId, nodeId: nextNodeId }));\r\n        }\r\n    }\r\n\r\n    getNodeInfo(nodeId: string) {\r\n        return this.appDataStore?.getState()[this.model.name].nodes[nodeId];\r\n    }\r\n\r\n    addNodeInfo(nodeId: string, nodeOptions: NodeInfo) {\r\n        // set up some default options\r\n        let defaultOptions = {\r\n            containerId: '',\r\n            visible: true,\r\n            appearClass: '',\r\n            enterClass: '',\r\n            exitClass: '',\r\n            timeout: 300\r\n        }\r\n\r\n        let mergedOptions = Object.assign({}, defaultOptions, nodeOptions);\r\n\r\n        this.appDataStore?.sendEvent(this.model.actions.nodeInfoUpdatedHandler({ nodeId, options: mergedOptions }));\r\n    }\r\n}\r\n","export interface IRepoItem {\r\n    id: string;\r\n    className: string;\r\n}\r\n\r\nexport abstract class RepoItem implements IRepoItem {\r\n\r\n    public static class: string = 'RepoItem';\r\n    public className: string = '';\r\n\r\n    protected constructor(\r\n        public id: string)\r\n    {\r\n        this.id = id;\r\n        // add an enclosing '/' to the end for faster lookup\r\n        this.appendClassName(`${RepoItem.class}/`);\r\n    }\r\n\r\n    protected appendClassName(className: string) {\r\n        this.className = `/${className}${this.className}`;\r\n    }\r\n\r\n}\r\n","import {RepoItem} from \"../framework/services/repoService/repoItem\";\r\n\r\nexport class DocumentInfo extends RepoItem{\r\n\r\n  public static class: string = 'DocumentInfo';\r\n\r\n  author: string = '';\r\n  department: string = '';\r\n  file_name: string = '';\r\n  file_page_count: string = '';\r\n  file_size: string = '';\r\n  file_type: string = '';\r\n  primary_sme_email: string = '';\r\n  primary_sme_name: string = '';\r\n  primary_sme_phone: string = '';\r\n  private_tag: any = '';\r\n  project: string = '';\r\n  public_tag: any = '';\r\n  publication_date: string = '';\r\n  purpose: string = '';\r\n  secondary_sme_email: string = '';\r\n  secondary_sme_name: string = '';\r\n  secondary_sme_phone: string = '';\r\n  status: string = '';\r\n  title: string = '';\r\n  upload_date: string = '';\r\n  uploadedBy_id: string = '';\r\n\r\n  preview_url: string = '';\r\n  original_url: string = '';\r\n  isUpdating: boolean = false;\r\n  isUploading: boolean = false;\r\n  isPending: boolean = false;\r\n  isDeleted?: boolean = false;\r\n\r\n  constructor(id: string)\r\n  {\r\n    super(id);\r\n\r\n    this.appendClassName(DocumentInfo.class);\r\n  }\r\n}\r\n","import {RepoItem} from \"../framework/services/repoService/repoItem\";\r\n\r\nexport class MetadataInfo extends RepoItem {\r\n  public static class: string = 'MetadataInfo';\r\n\r\n  isLoading: boolean = false;\r\n  hasError: boolean = false;\r\n  errorMessage: string= '';\r\n\r\n  constructor(id: string)\r\n  {\r\n    super(id);\r\n\r\n    this.appendClassName(MetadataInfo.class);\r\n  }\r\n}\r\n\r\nexport enum MetadataType {\r\n  DOCUMENTS_GET_ARRAY='DOCUMENTS_GET_ARRAY',\r\n  REFERENCE_GET_SINGLE='REFERENCE_GET_SINGLE'\r\n}\r\n","export enum ParamType {\r\n    STRING= 'string',\r\n    DATE_RANGE='date_range',\r\n    NUMBER='number',\r\n    OPTIONS='options',\r\n    ARRAY='array'\r\n}\r\n","import {RepoItem} from \"../framework/services/repoService/repoItem\";\r\nimport {ReferenceType} from \"./referenceType\";\r\n\r\nexport class ReferenceInfo extends RepoItem{\r\n\r\n  public static class: string = 'ReferenceInfo';\r\n\r\n  constructor(\r\n      public id: string,\r\n      public title: string,\r\n      public type: ReferenceType\r\n      )\r\n  {\r\n    super(id);\r\n    this.appendClassName(ReferenceInfo.class);\r\n\r\n    this.title = title;\r\n  }\r\n}\r\n","export enum ReferenceType {\r\n    DEPARTMENT='DEPARTMENT',\r\n    PURPOSE='PURPOSE',\r\n    ROLE='ROLE',\r\n    STATUS='STATUS'\r\n}\r\n","import {RepoItem} from \"../framework/services/repoService/repoItem\";\r\n\r\nexport class RoleInfo extends RepoItem {\r\n    public static class: string = 'RoleInfo';\r\n\r\n    id: string = '';\r\n    title: string = '';\r\n\r\n    constructor(id: string)\r\n    {\r\n        super(id);\r\n\r\n        this.appendClassName(RoleInfo.class);\r\n    }\r\n}\r\n\r\n\r\n","import {RepoItem} from \"../framework/services/repoService/repoItem\";\r\nimport {ParamType} from \"./paramType\";\r\nimport {Nullable} from \"../framework/extras/typeUtils\";\r\n\r\nexport class SearchParamInfo extends RepoItem {\r\n    title?: Nullable<string> = '';\r\n    type: Nullable<ParamType> = null;\r\n    value: Nullable<any> = null;\r\n    options?: Nullable<any> = null;\r\n    optionsId?: Nullable<string> = null;\r\n    visible: boolean = false;\r\n    advanced: boolean = true;\r\n    dirty: boolean = false;\r\n\r\n    public static class: string = 'SearchParamInfo';\r\n\r\n    constructor(public id: string)\r\n    {\r\n        super(id);\r\n        this.appendClassName(SearchParamInfo.class);\r\n    }\r\n}\r\n\r\n","import {RepoItem} from \"../framework/services/repoService/repoItem\";\r\nimport {Nullable} from \"../framework/extras/typeUtils\";\r\n\r\nexport class SortPropertyInfo extends RepoItem {\r\n    title?: Nullable<string> = '';\r\n    value: Nullable<any> = null;\r\n\r\n    public static class: string = 'SortPropertyInfo';\r\n\r\n    constructor(public id: string)\r\n    {\r\n        super(id);\r\n        this.appendClassName(SortPropertyInfo.class);\r\n    }\r\n}\r\n","import {RepoItem} from \"../framework/services/repoService/repoItem\";\r\nimport {StatType} from \"./statType\";\r\n\r\nexport class StatInfo extends RepoItem {\r\n    public static class: string = 'StatInfo';\r\n\r\n    type: StatType = -1;\r\n    item: string = '';\r\n    count: number = 0;\r\n\r\n    constructor(id: string)\r\n    {\r\n        super(id);\r\n        this.appendClassName(StatInfo.class);\r\n\r\n    }\r\n}\r\n","export enum StatType {\r\n    CUSTOM_SHARED_TAG=1,\r\n    DATASTORE_SIZE,\r\n    DEPARTMENT,\r\n    FILE_TYPE,\r\n    PROJECT,\r\n    PURPOSE,\r\n    UPLOAD_DATE,\r\n}\r\n","import {RepoItem} from \"../framework/services/repoService/repoItem\";\r\nimport {TagType} from \"./tagType\";\r\n\r\nexport class TagInfo extends RepoItem {\r\n    public static class: string = 'TagInfo';\r\n\r\n    constructor(\r\n        public id: string,\r\n        public title: string,\r\n        public user_id?: string,\r\n        public type?: TagType\r\n    )\r\n    {\r\n        super(id);\r\n        this.appendClassName(TagInfo.class);\r\n\r\n        this.title = title;\r\n        this.user_id = user_id;\r\n        this.type = type;\r\n    }\r\n}\r\n","export enum TagType {\r\n    PRIVATE=1,\r\n    PUBLIC\r\n}\r\n","import {RepoItem} from \"../framework/services/repoService/repoItem\";\r\n\r\nexport class UserInfo extends RepoItem  {\r\n    public static class: string = 'UserInfo';\r\n\r\n    dod_id: string = '';\r\n    first_name: string = '';\r\n    last_name: string = '';\r\n    email_address: string = '';\r\n    phone_number: string = '';\r\n    department: string = '';\r\n    preferred_results_view?: string = '';\r\n    account_status: string = '';\r\n    role: string = '';\r\n\r\n    approved_by?: string = '';\r\n    date_approved?: string = '';\r\n    isUpdating?: boolean = false;\r\n\r\n    constructor(id: string)\r\n    {\r\n        super(id);\r\n\r\n        this.appendClassName(UserInfo.class);\r\n    }\r\n}\r\n\r\n\r\n","import {RepoItem} from \"../services/repoService/repoItem\";\r\n\r\nexport class MenuItem extends RepoItem {\r\n    public static class: string = 'MetadataInfo';\r\n\r\n    title: string = '';\r\n    selected: boolean = false;\r\n    graphic: any = null;\r\n    context: any = null;\r\n\r\n    constructor(id: string)\r\n    {\r\n        super(id);\r\n\r\n        this.appendClassName(MenuItem.class);\r\n    }\r\n}\r\n","import {MenuItem} from \"../../framework/model/menuItem\";\r\n\r\nexport class SearchBannerMenuItem extends MenuItem {\r\n    public static class: string = 'SearchBannerMenuItem';\r\n\r\n    constructor(id: string) {\r\n        super(id);\r\n\r\n        this.appendClassName(SearchBannerMenuItem.class);\r\n    }\r\n}\r\n","import {Nullable} from \"./typeUtils\";\r\nimport {IRepositoryService} from \"../api\";\r\nimport {IRepoItem} from \"../services/repoService/repoItem\";\r\nimport {BasePlugin} from \"./basePlugin\";\r\nimport {IBasePlugin} from \"../api\";\r\n\r\n\r\nexport abstract class Plugin extends BasePlugin implements IBasePlugin {\r\n    public static class: string = 'SimplePlugin';\r\n\r\n    private repoService: Nullable<IRepositoryService> = null;\r\n\r\n    protected constructor()\r\n    {\r\n        super();\r\n\r\n        super.appendClassName(`${Plugin.class}`);\r\n    }\r\n\r\n    start(): void {\r\n        super.start();\r\n    }\r\n\r\n    stop(): void {\r\n    }\r\n\r\n    configure(): void {\r\n    }\r\n\r\n    setRepositoryService(repoService: Nullable<IRepositoryService>) {\r\n        this.repoService = repoService;\r\n    }\r\n\r\n    protected addOrUpdateRepoItem<T extends IRepoItem>(item: T) {\r\n        this.repoService?.addOrUpdateRepoItem(item);\r\n    }\r\n\r\n    protected addOrUpdateAllRepoItems<T extends IRepoItem>(items: T[]) {\r\n        this.repoService?.addOrUpdateAllRepoItems(items);\r\n    }\r\n\r\n    protected getRepoItem<T extends IRepoItem>(className: string, id: string): Nullable<T> {\r\n        let result: Nullable<T> = null;\r\n\r\n        if (this.repoService != null) {\r\n            result = this.repoService.getRepoItem<T>(className, id);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected getAll<T extends IRepoItem>(className: string, includeSubTypes?: boolean, ...ids: string[]): Record<string, T> {\r\n        let result: Record<string, T> = {};\r\n\r\n        if (this.repoService != null) {\r\n            result = this.repoService.getAll<T>(className, false, ...ids);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected removeRepoItem<T extends IRepoItem>(item: T) {\r\n        this.repoService?.removeRepoItem(item);\r\n    }\r\n\r\n    protected removeAllByType<T extends IRepoItem>(className: string) {\r\n        this.repoService?.removeAllByType(className, false);\r\n    }\r\n\r\n    protected removeAllById<T extends IRepoItem>(className: string, ...ids: string[]) {\r\n        this.repoService?.removeAllById(className, ...ids);\r\n    }\r\n\r\n    protected getRepoState() : any {\r\n        return this.repoService?.getState();\r\n    }\r\n}\r\n","export const getFormattedTime = (isoDateTime: string) => {\r\n    let result = \"\";\r\n\r\n    if (isoDateTime) {\r\n        let date = new Date(isoDateTime);\r\n\r\n        // result = `${date.getMonth()}/${date.getDay()}/${date.getFullYear()} - ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n\r\n        result = isoDateTime.replace('T', ' - ');\r\n\r\n        result = result.split('+')[0];\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport const convertTimeStamp = (timeStamp: string | number | Date) => {\r\n    let dateString = '';\r\n    if(timeStamp) {\r\n        const date = new Date(timeStamp);\r\n\r\n        let minutes = date.getMinutes();\r\n        // minutes.toLocaleString('en-US',\r\n        // {\r\n        //     style: 'decimal',\r\n        //     minimumIntegerDigits: 2,\r\n        //     useGrouping: false\r\n        // });\r\n\r\n        let hours = date.getHours();\r\n        // hours.toLocaleString('en-US',\r\n        // {\r\n        //     style: 'decimal',\r\n        //     minimumIntegerDigits: 2,\r\n        //     useGrouping: false\r\n        // });\r\n\r\n        let hoursStr: string = '';\r\n        if (hours < 10) {\r\n            hoursStr = \"0\" + hours;\r\n        }\r\n        let minutesStr: string = '';\r\n        if (minutes < 10) {\r\n            minutesStr = \"0\" + minutes;\r\n        }\r\n\r\n        dateString = date.getMonth()+'/'+date.getDate()+'/'+date.getFullYear() + ' ' + hoursStr + ':' + minutesStr\r\n    }\r\n    return dateString;\r\n    // timestamp:\"4/1/2020 2330\",\r\n};\r\n\r\nexport function getDateWithoutTime(dateTime: Date) {\r\n\r\n    let year = dateTime.getUTCFullYear();\r\n\r\n    let month = dateTime.getUTCMonth() + 1;\r\n    let monthStr = month < 10 ? `0${month}` : month;\r\n\r\n    let day = dateTime.getUTCDay();\r\n    let dayStr = day < 10 ? `0${day}` : day;\r\n\r\n    const date = year+'-'+monthStr+'-'+ dayStr;\r\n\r\n    return date;\r\n}\r\n","import {createSelector, OutputSelector} from \"@reduxjs/toolkit\";\r\nimport {forEach} from \"../../framework.visual/extras/utils/collectionUtils\";\r\nimport {DocumentInfo, MetadataInfo, MetadataType, ParamType, SearchParamInfo, SortPropertyInfo} from \"../../model\";\r\nimport {Nullable} from \"../../framework/extras/typeUtils\";\r\n\r\nimport {IDocumentService, IEntityProvider, IUserService} from \"../../api\";\r\nimport {Plugin} from \"../../framework/extras/plugin\";\r\nimport {getDateWithoutTime} from \"../../framework.visual/extras/utils/timeUtils\";\r\n\r\nexport class DocumentService extends Plugin implements IDocumentService {\r\n    public static readonly class:string = 'DocumentService';\r\n    private userService: Nullable<IUserService> = null;\r\n    private documentProvider?: Nullable<IEntityProvider<DocumentInfo>> = null;\r\n\r\n    private readonly pendingFilesRaw: Record<string, any>;\r\n\r\n    private pendingFilesQueue: any[];\r\n\r\n    getAllDocumentsSelector: OutputSelector<unknown, Record<string, DocumentInfo>, (res1: Record<string, DocumentInfo>, res2: any) => Record<string, DocumentInfo>>;\r\n    getSearchDocumentsSelector: OutputSelector<unknown, Record<string, DocumentInfo>, (res: Record<string, DocumentInfo>) => Record<string, DocumentInfo>>;\r\n    getPendingDocumentsSelector: OutputSelector<unknown, Record<string, DocumentInfo>, (res: Record<string, DocumentInfo>) => Record<string, DocumentInfo>>;\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(DocumentService.class);\r\n\r\n        this.pendingFilesRaw = {};\r\n\r\n        this.pendingFilesQueue = [];\r\n\r\n        this.getAllDocumentsSelector = createSelector(\r\n            [() => this.getAll<DocumentInfo>(DocumentInfo.class), () => this.userService?.getCurrentUserId()],\r\n            (documents, currentUserId) => {\r\n                let result: Record<string, DocumentInfo> = {};\r\n\r\n                if (documents) {\r\n                    forEach(documents, (document: DocumentInfo) => {\r\n                        if (document) {\r\n                            let private_tag: any = [];\r\n                            if (document.private_tag) {\r\n                                forEach(document.private_tag, (item:{user_id:string, tag_id: string}) => {\r\n                                    let user_id = item.user_id;\r\n                                    if (user_id === currentUserId) {\r\n                                        private_tag = item['tag_id'];\r\n                                    }\r\n                                })\r\n                            }\r\n\r\n                            let userDoc = document;\r\n                            Object.assign(userDoc.private_tag, private_tag);\r\n\r\n                            result[document.id] = userDoc;\r\n                        }\r\n                    });\r\n\r\n                    return result;\r\n                }\r\n                return result;\r\n            }\r\n        );\r\n\r\n        this.getSearchDocumentsSelector = createSelector(\r\n            [this.getAllDocuments],\r\n            (items) => {\r\n                let result:Record<string, DocumentInfo> = {};\r\n\r\n                forEach(items, (item:DocumentInfo) => {\r\n                    const { id, isPending } = item;\r\n\r\n                    if (!isPending) {\r\n                        result[id] = item;\r\n                    }\r\n                });\r\n\r\n                return result;\r\n            }\r\n        );\r\n\r\n        this.getPendingDocumentsSelector = createSelector(\r\n            [this.getAllDocuments],\r\n            (items) => {\r\n                let result: Record<string, DocumentInfo> = {};\r\n\r\n                forEach(items, (item:DocumentInfo) => {\r\n                    const { id, isPending } = item;\r\n\r\n                    if (isPending) {\r\n                        result[id] = item;\r\n                    }\r\n                })\r\n\r\n                return result;\r\n            }\r\n        );\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    configure() {\r\n        super.configure();\r\n    }\r\n\r\n    setUserService(userService: IUserService) {\r\n        this.userService = userService;\r\n    }\r\n\r\n    getAllDocuments(): Record<string, DocumentInfo> {\r\n        return this.getAllDocumentsSelector(super.getRepoState());\r\n    }\r\n\r\n    getSearchDocuments(): Record<string, DocumentInfo> {\r\n        return this.getSearchDocumentsSelector(super.getRepoState());\r\n    }\r\n\r\n    getPendingDocuments(): Record<string, DocumentInfo> {\r\n        return this.getPendingDocumentsSelector(super.getRepoState());\r\n    }\r\n\r\n    fetchDocument(id: string) {\r\n        this.documentProvider?.getSingle(id)\r\n            .then(document => {\r\n                if (document != null) {\r\n                    const {id} = document;\r\n\r\n                    let localDocument = this.getDocument(id);\r\n\r\n                    let nextDocument = {\r\n                        ...localDocument,\r\n                        ...document,\r\n                        isPending: localDocument?.isPending ? localDocument.isPending : document.isPending\r\n                    }\r\n\r\n                    this.addOrUpdateRepoItem(nextDocument);\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    clearSearch() {\r\n        this.clearAllParams()\r\n\r\n        this.setGetDocumentArrayMetadata(false)\r\n\r\n        let documents = Object.assign({}, this.getPendingDocuments());\r\n\r\n        this.removeAllByType(DocumentInfo.class);\r\n\r\n        this.addOrUpdateAllRepoItems(<DocumentInfo[]>Object.values(documents));\r\n    }\r\n\r\n    fetchDocuments() {\r\n        this.setGetDocumentArrayMetadata(true);\r\n\r\n        this.documentProvider?.getAll(this.getSearchParams())\r\n            .then(responseData => {\r\n\r\n                let documents: Record<string, DocumentInfo> = Object.assign({}, this.getPendingDocuments(), responseData);\r\n\r\n                this.setGetDocumentArrayMetadata(false)\r\n\r\n                let values: DocumentInfo[] = Object.values(documents) as unknown as DocumentInfo[];\r\n                if (values && values.length === 0) {\r\n                    this.setGetDocumentArrayMetadata(false, 'No Results')\r\n                }\r\n\r\n                this.removeAllByType(DocumentInfo.class);\r\n                this.addOrUpdateAllRepoItems(values);\r\n                this.clearDirtyFlags();\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setGetDocumentArrayMetadata(false,\r\n                    `${error}\\n\\nSearch Data: \\n\\n${JSON.stringify(error)}`)\r\n            });\r\n    }\r\n\r\n    updateDocument(modifiedDocument: any) {\r\n        const {id} = modifiedDocument;\r\n\r\n        // tell the ui we are going to be updating\r\n        let document = this.getDocument(id);\r\n\r\n        if (modifiedDocument.hasOwnProperty('private_tag')) {\r\n            let total_private_tag: any = [];\r\n\r\n            let currentUserId = this.userService?.getCurrentUserId();\r\n\r\n            if (document != null && document.private_tag && document.private_tag.length > 0) {\r\n                forEach(document.private_tag, (item: { user_id: string, tag_id: any }) => {\r\n                    let tagUserId = item['user_id'];\r\n                    let tagArray = item['tag_id'];\r\n\r\n                    total_private_tag.push({\r\n                        tag_id: currentUserId === tagUserId ?\r\n                            modifiedDocument['private_tag'] :\r\n                            tagArray,\r\n                        user_id: tagUserId\r\n                    })\r\n                })\r\n                modifiedDocument = {\r\n                    ...modifiedDocument,\r\n                    private_tag: total_private_tag\r\n                }\r\n            } else {\r\n                modifiedDocument = {\r\n                    ...modifiedDocument,\r\n                    private_tag: [\r\n                        {\r\n                            tag_id: modifiedDocument['private_tag'],\r\n                            user_id: currentUserId\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        let mergedDocumentInfo = {\r\n            ...document,\r\n            ...modifiedDocument,\r\n            isUpdating: true\r\n        }\r\n\r\n        this.addOrUpdateRepoItem(mergedDocumentInfo)\r\n\r\n        // get the latest from the server\r\n        this.documentProvider?.update(id, {id, modifiedDocument: mergedDocumentInfo})\r\n            .then(document => {\r\n                if (document != null) {\r\n                    this.addOrUpdateRepoItem(document)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    removeDocument(id: string) {\r\n        this.documentProvider?.remove(id)\r\n            .then(document => {\r\n                if (document != null) {\r\n                    this.removeRepoItem(document)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    enqueueFile(file: any) {\r\n        const {name} = file;\r\n\r\n        // since we are posting and don't have an id yet, use a placeholder\r\n        let tmpId = name;\r\n\r\n        this.pendingFilesQueue.push(file);\r\n\r\n        // redux raw file\r\n        this.pendingFilesRaw[tmpId] = file;\r\n\r\n        // put the file in the pending documents list\r\n        // id will be auto generated client side\r\n        let tmpFileInfo = new DocumentInfo(tmpId);\r\n        tmpFileInfo.file_name = name;\r\n        tmpFileInfo.status = 'Uploading';\r\n        tmpFileInfo.isPending = true;\r\n\r\n        this.addOrUpdateRepoItem(tmpFileInfo)\r\n    }\r\n\r\n    dequeueFile() {\r\n        const file = this.pendingFilesQueue.shift();\r\n\r\n        if (file) {\r\n                const {name} = file;\r\n\r\n            // since we are posting and don't have an id yet, use a placeholder\r\n            let tmpId = name;\r\n\r\n            // redux raw file\r\n            this.pendingFilesRaw[tmpId] = file;\r\n\r\n            let requestData = {\r\n                id: tmpId,\r\n                pendingFilesRaw: this.pendingFilesRaw,\r\n                file\r\n            };\r\n\r\n            this.documentProvider?.create(requestData,\r\n                (updatedDocument) => {\r\n                    const {id, status} = updatedDocument;\r\n\r\n                    if (this.pendingFilesRaw[tmpId]) {\r\n                        delete this.pendingFilesRaw[tmpId];\r\n\r\n                        // put the document back in with the new id\r\n                        this.pendingFilesRaw[id] = file;\r\n\r\n                        updatedDocument.file_name = name;\r\n                        updatedDocument.status = 'Processing';\r\n                        updatedDocument.isPending = true;\r\n                    } else if (status === \"failed\") {\r\n                        updatedDocument.file_name = name;\r\n                        updatedDocument.status = 'Processing';\r\n                        updatedDocument.isPending = true;\r\n                    } else if (status === \"error\") {\r\n                        updatedDocument.file_name = name;\r\n                        updatedDocument.status = 'failed';\r\n                        updatedDocument.isPending = true;\r\n                    }\r\n\r\n                    this.addOrUpdateRepoItem(updatedDocument);\r\n                })\r\n                .then(document => {\r\n                    if (document != null) {\r\n                        const { id, file_name } = document;\r\n\r\n                        let localFile = this.getDocument(file_name);\r\n\r\n                        if (localFile) {\r\n                            if (localFile.isDeleted) {\r\n                                this.removeDocument(id);\r\n                            } else {\r\n                                this.addOrUpdateRepoItem(document);\r\n                            }\r\n                        } else {\r\n                            this.removeDocument(id);\r\n                        }\r\n                    }\r\n\r\n                    this.processQueue();\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    this.processQueue();\r\n                })\r\n        }\r\n    }\r\n\r\n    processQueue() {\r\n        if (this.pendingFilesQueue.length !== 0) {\r\n            this.dequeueFile();\r\n        }\r\n    }\r\n\r\n    startUpload(fileList: any) {\r\n        let length = this.pendingFilesQueue.length;\r\n\r\n        forEach(fileList, (file: any) => {\r\n            this.enqueueFile(file)\r\n        });\r\n\r\n        if (length === 0) {\r\n            this.processQueue();\r\n        }\r\n    }\r\n\r\n    cancelUpload(id: string) {\r\n        let pendingFile = this.getDocument(id);\r\n\r\n        if (pendingFile) {\r\n\r\n            const { file_name } = pendingFile;\r\n\r\n            let localFile = this.getDocument(file_name);\r\n\r\n            let rawFile: any;\r\n\r\n            // delete raw file\r\n            if (this.pendingFilesRaw[id]) {\r\n                rawFile = this.pendingFilesRaw[id];\r\n\r\n\r\n                delete this.pendingFilesRaw[id];\r\n            } else if (this.pendingFilesRaw[file_name]) {\r\n                rawFile = this.pendingFilesRaw[file_name];\r\n\r\n\r\n                delete this.pendingFilesRaw[file_name];\r\n            }\r\n\r\n            this.pendingFilesQueue = this.pendingFilesQueue.filter(file => {\r\n                const {name} = file;\r\n                return name !== file_name;\r\n            });\r\n\r\n            if (rawFile) {\r\n\r\n                let cancelledFile = {\r\n                    ...pendingFile,\r\n                    isPending: true,\r\n                    isDeleted: true,\r\n                    status: \"Cancelled\",\r\n                }\r\n\r\n                this.addOrUpdateRepoItem(cancelledFile);\r\n\r\n                setTimeout(() => {\r\n                    this.removeAllById(DocumentInfo.class, id);\r\n                    this.removeAllById(DocumentInfo.class, file_name);\r\n                }, 3000);\r\n\r\n            } else {\r\n                this.documentProvider?.remove(id)\r\n                    .then(document => {\r\n                        if (document != null) {\r\n                            let approvedFile = {\r\n                                ...document,\r\n                                isPending: true,\r\n                                isDeleted: true,\r\n                                status: \"Cancelled\",\r\n                            }\r\n                            this.addOrUpdateRepoItem(approvedFile);\r\n\r\n                            let { file_name } = document;\r\n\r\n                            setTimeout(() => {\r\n                                this.removeAllById(DocumentInfo.class, id);\r\n                                this.removeAllById(DocumentInfo.class, file_name);\r\n                            }, 3000);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        this.error(error);\r\n                    });\r\n\r\n                this.processQueue();\r\n            }\r\n        }\r\n    }\r\n\r\n    clearDocuments() {\r\n        this.removeAllByType(DocumentInfo.class);\r\n    }\r\n\r\n    getDocument(id: string): Nullable<DocumentInfo> {\r\n        return super.getRepoItem<DocumentInfo>(DocumentInfo.class, id);\r\n    }\r\n\r\n    approvePendingFile(id: string) {\r\n        let pendingFile = this.getDocument(id);\r\n\r\n        if (pendingFile) {\r\n            let { file_name } = pendingFile;\r\n            this.removeAllById(DocumentInfo.class, file_name);\r\n\r\n            let approvedFile = {\r\n                ...pendingFile,\r\n                isPending: false,\r\n            }\r\n            this.addOrUpdateRepoItem(approvedFile);\r\n        }\r\n    }\r\n\r\n    removePendingFile(id: string) {\r\n        // delete raw file\r\n        if (this.pendingFilesRaw[id]) {\r\n            delete this.pendingFilesRaw[id];\r\n        }\r\n\r\n        this.documentProvider?.remove(id)\r\n            .then(document => {\r\n                if (document != null) {\r\n                    let approvedFile = {\r\n                        ...document,\r\n                        isPending: true,\r\n                        isDeleted: true,\r\n                    }\r\n                    this.addOrUpdateRepoItem(approvedFile);\r\n\r\n                    let { file_name } = document;\r\n\r\n                    setTimeout(() => {\r\n                        this.removeRepoItem(approvedFile);\r\n                        this.removeAllById(DocumentInfo.class, file_name);\r\n                    }, 3000)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.error(error);\r\n            });\r\n    }\r\n\r\n    setGetDocumentArrayMetadata(isLoading: boolean, errorMessage?: string) {\r\n        let repoItem: Nullable<MetadataInfo> = super.getRepoItem(MetadataInfo.class, MetadataType.DOCUMENTS_GET_ARRAY);\r\n\r\n        if (repoItem == null) {\r\n            repoItem = new MetadataInfo(MetadataType.DOCUMENTS_GET_ARRAY);\r\n        }\r\n\r\n        repoItem.isLoading = isLoading;\r\n\r\n        if (errorMessage) {\r\n            repoItem.hasError = true;\r\n            repoItem.errorMessage = errorMessage;\r\n        }\r\n        else {\r\n            repoItem.hasError = false;\r\n            repoItem.errorMessage = '';\r\n        }\r\n\r\n        this.addOrUpdateRepoItem(repoItem);\r\n    }\r\n\r\n    setDocumentProvider(provider: IEntityProvider<DocumentInfo>): void {\r\n        this.documentProvider = provider;\r\n    }\r\n\r\n    clearAllParams() {\r\n        let items = this.getSearchParams();\r\n\r\n        let nextItems: any = {};\r\n\r\n        forEach(items, (searchInfo: { id: string; type: ParamType; }) => {\r\n\r\n            let next: SearchParamInfo = new SearchParamInfo(searchInfo.id);\r\n            next = Object.assign(next, searchInfo);\r\n\r\n            if (searchInfo.type === ParamType.DATE_RANGE) {\r\n                next.value = {\r\n                    start_date: getDateWithoutTime(new Date()),\r\n                    end_date: getDateWithoutTime(new Date())\r\n                }\r\n            } else {\r\n                next.value = '';\r\n            }\r\n\r\n            nextItems[searchInfo.id] = next;\r\n        });\r\n\r\n        this.addOrUpdateAllRepoItems((<any>Object).values(nextItems));\r\n    }\r\n\r\n    getSearchParams() {\r\n        return super.getAll<SearchParamInfo>(SearchParamInfo.class);\r\n    }\r\n\r\n    clearDirtyFlags() {\r\n        let items = this.getSearchParams();\r\n\r\n        let nextParams: any = {};\r\n\r\n        forEach(items, (item: { id: string | number; }) => {\r\n            let nextParam: any = Object.assign({}, item);\r\n            nextParam.dirty = false;\r\n\r\n            nextParams[item.id] = nextParam;\r\n        });\r\n\r\n        this.addOrUpdateAllRepoItems((<any>Object).values(nextParams));\r\n    }\r\n\r\n    setSearchText(value: string) {\r\n        let repoItem = super.getRepoItem(SearchParamInfo.class, 'search_request');\r\n\r\n        if (repoItem != null) {\r\n            let next = Object.assign(new SearchParamInfo('search_request'), repoItem);\r\n            next.value = value;\r\n            this.addOrUpdateRepoItem(next);\r\n        }\r\n    }\r\n\r\n    setSearchParam(id: string, value: string | string[]) {\r\n        let repoItem = super.getRepoItem(SearchParamInfo.class, id);\r\n\r\n        if (repoItem != null) {\r\n            let next = Object.assign(new SearchParamInfo(id), repoItem);\r\n            next.value = value;\r\n            next.dirty = true;\r\n            this.addOrUpdateRepoItem(next)\r\n        }\r\n\r\n        // now perform a new search\r\n        this.fetchDocuments();\r\n    }\r\n\r\n    setVisibility(id: string, visible: boolean) {\r\n        let repoItem = super.getRepoItem(SearchParamInfo.class, id);\r\n\r\n        if (repoItem != null) {\r\n            let next = Object.assign(new SearchParamInfo(id), repoItem);\r\n            next.visible = visible;\r\n            this.addOrUpdateRepoItem(next);\r\n        }\r\n    }\r\n\r\n    getSearchText() {\r\n        let result = '';\r\n\r\n        let repoItem: any = super.getRepoItem(SearchParamInfo.class, 'search_request');\r\n        if (repoItem != null) {\r\n            result = repoItem.value;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setSortParam(value: string) {\r\n        let repoItem = super.getRepoItem(SearchParamInfo.class, 'sort');\r\n        if (repoItem != null) {\r\n            let next = Object.assign(new SearchParamInfo(repoItem.id), repoItem);\r\n            next.value = value;\r\n\r\n            this.addOrUpdateRepoItem(next);\r\n        }\r\n    }\r\n\r\n    getActiveSortId() {\r\n        let result = null;\r\n\r\n        let repoItem: any = super.getRepoItem(SearchParamInfo.class, 'sort');\r\n        if (repoItem != null) {\r\n            result = repoItem.value;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getSortTypes() {\r\n        return super.getAll<SortPropertyInfo>(SortPropertyInfo.class);\r\n    }\r\n}\r\n","import {createSelector, Selector} from \"@reduxjs/toolkit\";\r\nimport {forEach,} from \"../../framework.visual/extras/utils/collectionUtils\";\r\nimport {MetadataInfo, MetadataType, ReferenceInfo, ReferenceType} from \"../../model\";\r\nimport {IEntityProvider, IReferenceService} from \"../../api\";\r\nimport {Plugin} from \"../../framework/extras/plugin\";\r\nimport {Nullable} from \"../../framework/extras/typeUtils\";\r\n\r\nexport class ReferenceService extends Plugin implements IReferenceService {\r\n    public static readonly class: string = 'ReferenceService';\r\n\r\n    private readonly getAllReferenceSelectors!: Record<string, Selector<any, Record<string, ReferenceInfo>>>;\r\n    private readonly getAllReferencesGroupedByTypeSelector: Selector<any, Record<ReferenceType, Record<string, ReferenceInfo>>>;\r\n    private referenceProvider: Nullable<IEntityProvider<ReferenceInfo>> = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(ReferenceService.class);\r\n\r\n        this.getAllReferenceSelectors = {};\r\n\r\n\r\n        this.getAllReferencesGroupedByTypeSelector = createSelector(\r\n            [() => this.getAll<ReferenceInfo>(ReferenceInfo.class)],\r\n            (references) => {\r\n                let result: Record<string, Record<string, ReferenceInfo>> = {};\r\n\r\n                if (references) {\r\n                    forEach(references, (reference: ReferenceInfo) => {\r\n\r\n                        if (!result[reference.type]) {\r\n                            result[reference.type] = {};\r\n                        }\r\n\r\n                        result[reference.type][reference.id] = reference;\r\n                    });\r\n                }\r\n                return result;\r\n            }\r\n        );\r\n    }\r\n\r\n    getAllReferencesGroupedByType(): Record<ReferenceType, Record<string, ReferenceInfo>> {\r\n        return this.getAllReferencesGroupedByTypeSelector(super.getRepoState());\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    configure() {\r\n        super.configure();\r\n    }\r\n\r\n    fetchReferences(referenceType: ReferenceType) {\r\n        this.setReferencesLoading(true)\r\n\r\n        let referenceOrdinal = ReferenceType[referenceType];\r\n\r\n        this.referenceProvider?.getAll({id: referenceOrdinal})\r\n            .then(responseData => {\r\n                this.addOrUpdateAllRepoItems(responseData)\r\n                this.setReferencesLoading(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setReferencesLoading(false)\r\n            });\r\n    }\r\n\r\n    getAllReferences(referenceType: ReferenceType) {\r\n        let selector = this.getAllReferenceSelectors[referenceType];\r\n\r\n        if (!selector) {\r\n            selector = createSelector(\r\n                [() => this.getAll<ReferenceInfo>(ReferenceInfo.class)],\r\n                (references) => {\r\n                    let result: any = {};\r\n\r\n                    if (references) {\r\n                        forEach(references, (reference: { type: ReferenceType; id: string; }) => {\r\n                            if (reference.type === referenceType) {\r\n                                result[reference.id] = reference;\r\n                            }\r\n                        });\r\n                    }\r\n                    return result;\r\n                }\r\n            );\r\n            this.getAllReferenceSelectors[referenceType] = selector;\r\n        }\r\n\r\n        return selector(super.getRepoState());\r\n    }\r\n\r\n    setReferencesLoading(isLoading: boolean) {\r\n        let next = super.getRepoItem<MetadataInfo>(MetadataInfo.class, MetadataType.REFERENCE_GET_SINGLE);\r\n        if (!next) {\r\n            next = new MetadataInfo(MetadataType.REFERENCE_GET_SINGLE);\r\n        }\r\n        next.isLoading = isLoading;\r\n\r\n        this.addOrUpdateRepoItem(next);\r\n    }\r\n\r\n    setReferenceProvider(provider: IEntityProvider<ReferenceInfo>): void {\r\n        this.referenceProvider = provider;\r\n    }\r\n}\r\n","export const makeGuid = () => {\r\n    let s4 = () => {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    }\r\n    //return id of format 'aaaaaaaa'-'aaaa'-'aaaa'-'aaaa'-'aaaaaaaaaaaa'\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n}\r\n","import {RepoItem} from \"../framework/services/repoService/repoItem\";\r\n\r\nexport class UserRequestInfo extends RepoItem {\r\n    public static class: string = 'UserRequestInfo';\r\n\r\n    user_id: string = \"\";\r\n    role: string = \"\";\r\n    duration: string = \"\";\r\n    comment: string = \"\";\r\n\r\n    constructor(id: string)\r\n    {\r\n        super(id);\r\n\r\n        this.appendClassName(UserRequestInfo.class);\r\n    }\r\n}\r\n","import {makeGuid} from \"../../framework.visual/extras/utils/uniqueIdUtils\";\r\nimport {forEach, forEachKVP} from \"../../framework.visual/extras/utils/collectionUtils\";\r\nimport {DocumentInfo, ReferenceType} from \"../../model\";\r\nimport {UserInfo} from \"../../model\";\r\nimport {IAuthorizationService, IUserService} from \"../../api\";\r\nimport {nameOf, Nullable} from \"../../framework/extras/typeUtils\";\r\nimport {ISelectionService} from \"../../framework/api\";\r\nimport {IReferenceService} from \"../../api\";\r\nimport {Plugin} from \"../../framework/extras/plugin\";\r\nimport {IEntityProvider} from \"../../api\";\r\nimport {UserRequestInfo} from \"../../model/userRequestInfo\";\r\nimport {createSelector, OutputSelector} from \"@reduxjs/toolkit\";\r\nimport {getDateWithoutTime} from \"../../framework.visual/extras/utils/timeUtils\";\r\n\r\nexport class UserService extends Plugin implements IUserService {\r\n    public static readonly class: string = 'UserService';\r\n    private selectionService: Nullable<ISelectionService> = null;\r\n    private authorizationService: Nullable<IAuthorizationService> = null;\r\n    private referenceService: Nullable<IReferenceService> = null;\r\n    private userProvider: Nullable<IEntityProvider<UserInfo>> = null;\r\n\r\n    getActiveUsersSelector: OutputSelector<any, Record<string, UserInfo>, (res1: Record<string, UserInfo>) => Record<string, UserInfo>>;\r\n    getPendingUsersSelector: OutputSelector<any, Record<string, UserInfo>, (res1: Record<string, UserInfo>) => Record<string, UserInfo>>;\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(UserService.class);\r\n\r\n        this.getActiveUsersSelector = createSelector<any, Record<string, UserInfo>, Record<string, UserInfo>>(\r\n            [() => this.getAll<UserInfo>(UserInfo.class)],\r\n            (users) => {\r\n\r\n                let result:Record<string, UserInfo> = {};\r\n                forEach(users, (user: UserInfo) => {\r\n                    let accountStatus = user.account_status || '';\r\n                    accountStatus = accountStatus.toUpperCase();\r\n                    if (accountStatus === 'ACTIVE') {\r\n                        result[user.id] = user;\r\n                    }\r\n                    // else if (accountStatus !== 'INACTIVE') {\r\n                    //     this.warn(`User with the id ${user.id} is has an account status of '${user.account_status}'. User will not appear in active or inactive lists `)\r\n                    // }\r\n                })\r\n\r\n                return result;\r\n            }\r\n        )\r\n\r\n        this.getPendingUsersSelector = createSelector<any, Record<string, UserInfo>, Record<string, UserInfo>>(\r\n            [() => this.getAll<UserInfo>(UserInfo.class)],\r\n            (users) => {\r\n\r\n                let result:Record<string, UserInfo> = {};\r\n                forEach(users, (user: UserInfo) => {\r\n                    let accountStatus = user.account_status || '';\r\n                    if (accountStatus.toUpperCase() !== 'ACTIVE') {\r\n                        result[user.id] = user;\r\n                    }\r\n                })\r\n\r\n                return result;\r\n            }\r\n        )\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    configure() {\r\n        super.configure();\r\n    }\r\n\r\n    setSelectionService(selectionService: ISelectionService) {\r\n        this.selectionService = selectionService;\r\n    }\r\n\r\n    setAuthorizationService(authorizationService: IAuthorizationService): void {\r\n        this.authorizationService = authorizationService;\r\n    }\r\n\r\n    setReferenceService(referenceService: IReferenceService) {\r\n        this.referenceService = referenceService;\r\n    }\r\n\r\n    fetchUser(id: string) {\r\n        this.userProvider?.getSingle(id)\r\n            .then(latestUser => {\r\n                let localUser: any = this.getUser(id) || {};\r\n\r\n                let nextUser = {\r\n                    ...latestUser,\r\n                    ...localUser,\r\n                }\r\n\r\n                this.addOrUpdateRepoItem(nextUser);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    fetchUsers() {\r\n        this.userProvider?.getAll('NULL')\r\n            .then(users => {\r\n                this.addOrUpdateAllRepoItems(users);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    getUser(id: string): Nullable<UserInfo> {\r\n        return super.getRepoItem<UserInfo>(UserInfo.class, id);\r\n    }\r\n\r\n    getActiveUsers(): Record<string, UserInfo> {\r\n        return this.getActiveUsersSelector(this.getRepoState());\r\n    }\r\n\r\n    createUser(userData: Record<string, string>) {\r\n        // since we are posting and don't have an id yet, use a placeholder\r\n        let tmpId = makeGuid();\r\n        const userInfo: any = new UserInfo(tmpId);\r\n        forEachKVP(userData, (key: string, value: string) => {\r\n            userInfo[key] = value;\r\n        })\r\n\r\n        userInfo[nameOf<UserInfo>('account_status')] = 'active';\r\n\r\n        this.addOrUpdateRepoItem(userInfo);\r\n\r\n        this.userProvider?.create({user: userInfo},\r\n            (updatedUserInfo => {\r\n                // we have the real id now, so remove the temp one and add the real one\r\n                this.removeRepoItem(userInfo);\r\n                this.addOrUpdateRepoItem(updatedUserInfo);\r\n            }))\r\n            .then(latestUser => {\r\n                if (latestUser != null) {\r\n                    this.addOrUpdateRepoItem(latestUser);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    updateUser(modifiedUser: UserInfo) {\r\n        const { id } = modifiedUser;\r\n\r\n        this.userProvider?.update(id, {id, modifiedUser})\r\n            .then(user => {\r\n                if (user != null) {\r\n                    this.addOrUpdateRepoItem(user);\r\n                }\r\n            })\r\n    }\r\n\r\n    removeUser(id: string) {\r\n        this.userProvider?.remove(id)\r\n            .then(user => {\r\n                if (user != null) {\r\n                    this.removeRepoItem(user);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    setCurrentUser(id: string) {\r\n        this.fetchUser(id);\r\n\r\n        this.authorizationService?.fetchPermissions(id);\r\n\r\n        this.selectionService?.setContext('current-user', id);\r\n    }\r\n\r\n    getCurrentUser(): Nullable<UserInfo> {\r\n        let result = null;\r\n\r\n        const id = this.getCurrentUserId();\r\n\r\n        if (id != null) {\r\n            result = super.getRepoItem<UserInfo>(UserInfo.class, id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getCurrentUserId() {\r\n        let result = '';\r\n\r\n        if (this.selectionService != null) {\r\n            result = this.selectionService.getContext('current-user');\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setUserProvider(provider: IEntityProvider<UserInfo>): void {\r\n        this.userProvider = provider;\r\n    }\r\n\r\n    getUserRequests(): Record<string, UserRequestInfo> {\r\n        let result: Record<string, UserRequestInfo> = {};\r\n\r\n        result = this.getAll<UserRequestInfo>(UserRequestInfo.class);\r\n\r\n        return result;\r\n    }\r\n\r\n    getPendingUsers(): Record<string, UserInfo> {\r\n        return this.getPendingUsersSelector(this.getRepoState());\r\n    }\r\n\r\n    acceptUserRequest(id: string, role: string) {\r\n\r\n        let repoItem = this.getRepoItem<UserInfo>(UserInfo.class, id);\r\n\r\n        if (repoItem != null) {\r\n            repoItem.account_status = 'active';\r\n            repoItem.role = role;\r\n            repoItem.approved_by = this.getCurrentUserId();\r\n            repoItem.date_approved = getDateWithoutTime(new Date());\r\n\r\n            this.updateUser(repoItem);\r\n        }\r\n    }\r\n\r\n    declineUserRequest(id: string) {\r\n        this.removeUser(id);\r\n    }\r\n}\r\n","import {IPlugin} from \"../../framework/api\";\r\nimport {IStorage} from \"../../framework/api\";\r\nimport {IUserService} from \"../users/iUserService\";\r\nimport {IUserProvider} from \"../users/IUserProvider\";\r\nimport {UserInfo} from \"../../model\";\r\n\r\nexport interface IAuthenticationService extends IPlugin {\r\n    login(): any;\r\n    logout(): any;\r\n    register(user: UserInfo): void;\r\n    securedFetch(successCallback: any): any;\r\n\r\n    isLoggedIn(): boolean;\r\n    getToken(): string;\r\n    getUserProfile(): {firstName: string, lastName: string, username: string, id: string, email: string };\r\n    getUserId(): any;\r\n    getRegistrationStatus(): RegistrationStatus;\r\n\r\n    getAuthenticationState(): any;\r\n\r\n    setAppDataStore(appDataStore: IStorage): void;\r\n    setUserService(userService: IUserService): void;\r\n    setUserProvider(userProvider: IUserProvider): void;\r\n}\r\n\r\nexport type AuthenticationProfile = {\r\n    id: string,\r\n    username: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    email: string\r\n}\r\n\r\nexport enum RegistrationStatus {\r\n    NONE,\r\n    SUBMITTED,\r\n    APPROVED,\r\n    REJECTED\r\n}\r\n","import {IPlugin} from \"../../framework/api\";\r\nimport {IEntityProvider} from \"../common/iEntityProvider\";\r\nimport {PermissionInfo} from \"../../model/permissionInfo\";\r\nimport {Nullable} from \"../../framework/extras/typeUtils\";\r\n\r\nexport enum PERMISSION_ENTITY {\r\n    NONE='NONE',\r\n    DOCUMENT='DOCUMENT',\r\n    OPTIONS='OPTIONS',\r\n    STAT='STAT',\r\n    TAG='TAG',\r\n    USER='USER'\r\n}\r\n\r\nexport enum PERMISSION_OPERATOR {\r\n    NONE='NONE',\r\n    GET='GET',\r\n    DOWNLOAD='DOWNLOAD',\r\n    MODIFY='MODIFY',\r\n    POST='POST',\r\n    DELETE='DELETE',\r\n}\r\n\r\nexport enum PERMISSION_LEVEL {\r\n    NONE,\r\n    SELF,\r\n    GROUP,\r\n    ANY\r\n}\r\n\r\nexport interface IAuthorizationService extends IPlugin {\r\n    fetchPermissions(userId: string): void;\r\n    getPermissionLevel(entity: PERMISSION_ENTITY, operator: PERMISSION_OPERATOR): PERMISSION_LEVEL;\r\n    getPermissions(): Record<string, PermissionInfo>;\r\n    hasPermission(entity: PERMISSION_ENTITY, operator: PERMISSION_OPERATOR, currentUserId?: string, entityOwnerId?: Nullable<string>) : boolean;\r\n\r\n    setPermissionProvider(provider: IEntityProvider<PermissionInfo>): void;\r\n}\r\n","\r\n\r\nexport const KM_API_SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\nexport const keycloakEnabled = process.env.REACT_APP_USE_KEYCLOAK === 'true';\r\n\r\n\r\n\r\n// export default {\r\n//     protocol:LocalService.initValue(CONFIGURATION.protocol, window.location.protocol.replace(':','')),\r\n//     ip:LocalService.initValue(CONFIGURATION.ip, window.location.hostname),\r\n//     port:LocalService.initValue(CONFIGURATION.port, 4567),\r\n//     webservice:LocalService.initValue(CONFIGURATION.webservice, \"\"),\r\n//     user: \"\",\r\n//     loginOpen: true,\r\n//     debug:true,\r\n// }\r\n\r\nexport const keycloakConfig = {\r\n    \"realm\": \"navyanalytics\",\r\n    \"auth-server-url\": \"https://auth.navyanalytics.com/auth/\",\r\n    \"always-refresh-token\": true,\r\n    \"ssl-required\": \"external\",\r\n    \"resource\": \"navyanalytics-www\",\r\n    \"public-client\": true,\r\n    \"confidential-port\": 0,\r\n    \"clientId\": 'navyanalytics-www'\r\n}\r\n\r\nexport default {\r\n    // protocol:LocalService.initValue(CONFIGURATION.protocol, 'https'),//window.location.protocol),\r\n    // ip:LocalService.initValue(CONFIGURATION.ip, window.location.hostname),\r\n    // port:LocalService.initValue(CONFIGURATION.port, 44312),\r\n    // webservice:LocalService.initValue(CONFIGURATION.webservice, \"\"),\r\n    // user: \"\",\r\n    // loginOpen: true,\r\n    // debug:true,\r\n}\r\n\r\n\r\n\r\n//44312\r\n//4567\r\n","import Keycloak, {KeycloakError, KeycloakLoginOptions, KeycloakLogoutOptions, KeycloakProfile} from \"keycloak-js\";\r\nimport {keycloakConfig} from \"../../config/config\";\r\nimport {\r\n    AuthenticationProfile,\r\n    IAuthenticationService,\r\n    IUserProvider,\r\n    IUserService,\r\n    RegistrationStatus\r\n} from \"../../api\";\r\nimport {Nullable} from \"../../framework/extras/typeUtils\";\r\nimport {IStorage} from \"../../framework/api\";\r\nimport {Plugin} from \"../../framework/extras/plugin\";\r\nimport {createSlice, PayloadAction, Slice} from \"@reduxjs/toolkit\";\r\nimport {UserInfo} from \"../../model\";\r\n\r\n\r\ntype AuthenticationState = {\r\n    hasError: boolean;\r\n    profile: AuthenticationProfile,\r\n    userId: string\r\n    registrationStatus: RegistrationStatus\r\n}\r\n\r\ntype AuthenticationSliceType = Slice<AuthenticationState,\r\n    {\r\n        setHasError: (state: AuthenticationState, action: PayloadAction<boolean>) => void;\r\n        setProfile: (state:AuthenticationState, action:PayloadAction<AuthenticationProfile>) => void;\r\n        setRegistrationStatus: (state:AuthenticationState, action:PayloadAction<RegistrationStatus>) => void;\r\n    }>;\r\n\r\nexport class AuthenticationService extends Plugin implements IAuthenticationService {\r\n    public static readonly class:string = 'AuthenticationService';\r\n    private appDataStore: Nullable<IStorage> = null;\r\n    private userService: Nullable<IUserService> = null;\r\n\r\n    private _kc!: Keycloak.KeycloakInstance;\r\n    private readonly REDIRECT_URI: string;\r\n    private readonly loginOptions: KeycloakLoginOptions;\r\n    private readonly logoutOptions: KeycloakLogoutOptions;\r\n    private userProvider!: IUserProvider;\r\n\r\n    private model: AuthenticationSliceType;\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(AuthenticationService.class);\r\n\r\n        this.REDIRECT_URI = '';\r\n        this.loginOptions = {\r\n            prompt:\"login\"\r\n        };\r\n        this.logoutOptions = { redirectUri : this.REDIRECT_URI };\r\n\r\n        this.model = createSlice({\r\n            name: 'application/authentication',\r\n            initialState: {\r\n                hasError: false,\r\n                profile: {\r\n                    id: '',\r\n                    username: '',\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: ''\r\n                },\r\n            } as AuthenticationState,\r\n            reducers: {\r\n                setHasError: (state, action) => {\r\n                    state.hasError = action.payload;\r\n                },\r\n                setProfile: (state, action) => {\r\n                    state.profile = {\r\n                        id: action.payload.id,\r\n                        username: action.payload.username,\r\n                        firstName: action.payload.firstName,\r\n                        lastName: action.payload.lastName,\r\n                        email: action.payload.email,\r\n                    };\r\n                },\r\n                setRegistrationStatus: (state, action) => {\r\n                    state.registrationStatus = action.payload;\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        this.appDataStore?.addEventHandlers(this.model.name, this.model.reducer);\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    configure() {\r\n        super.configure();\r\n    }\r\n\r\n    setAppDataStore(appDataStore: IStorage) {\r\n        this.appDataStore = appDataStore;\r\n    }\r\n\r\n    setUserService(userService: IUserService) {\r\n        this.userService = userService;\r\n    }\r\n\r\n    setUserProvider(userProvider: IUserProvider) {\r\n        this.userProvider = userProvider;\r\n    }\r\n\r\n    private updateProfile(kcProfile: KeycloakProfile | undefined) {\r\n        if (kcProfile != null) {\r\n            let authenticationProfile: AuthenticationProfile = {\r\n                email: kcProfile.email || '',\r\n                firstName: kcProfile.firstName || \"\",\r\n                id: kcProfile.id || '',\r\n                lastName: kcProfile.lastName || \"\",\r\n                username: kcProfile.username || \"\"\r\n            }\r\n\r\n            this.appDataStore?.sendEvent(this.model.actions.setProfile(authenticationProfile));\r\n        }\r\n        else {\r\n            let authenticationProfile: AuthenticationProfile = {\r\n                email: '',\r\n                firstName: '',\r\n                id: '',\r\n                lastName: '',\r\n                username: '',\r\n            }\r\n\r\n            this.appDataStore?.sendEvent(this.model.actions.setProfile(authenticationProfile));\r\n        }\r\n\r\n    }\r\n\r\n    login() {\r\n        const s = document.createElement(\"script\");\r\n        s.type = \"text/javascript\";\r\n        s.src = \"https://auth.navyanalytics.com/auth/js/keycloak.js\";\r\n        document.head.append(s)\r\n\r\n        s.onload = this.keyCloakLoadedHandler;\r\n    }\r\n\r\n    private keyCloakLoadedHandler(ev: any) {\r\n        this._kc = Keycloak(keycloakConfig);\r\n        this._kc.init({\r\n            // checkLoginIframe: true,\r\n            // checkLoginIframeInterval: 1000,\r\n            // silentCheckSsoRedirectUri: window.location.origin,\r\n            onLoad: \"login-required\",\r\n            // messageReceiveTimeout: 60000\r\n        })\r\n            .then((authenticated: any) => {\r\n                if (authenticated) {\r\n                    //Authentication was successful, retrieve the user info\r\n                    this._kc.loadUserProfile()\r\n                        .then(() => {\r\n\r\n                            let kcProfile = this._kc.profile;\r\n                            const userId = kcProfile?.id;\r\n                            // debugger\r\n                            this.updateProfile(kcProfile);\r\n\r\n                            if (this.userService && userId != null) {\r\n                                this.userService.setCurrentUser(userId);\r\n                            }\r\n\r\n                            // // check if user exists\r\n                            // if (userId != null) {\r\n                            //     this.userProvider?.getSingle(userId)\r\n                            //         .then(user => {\r\n                            //             debugger\r\n                            //             if (user != null) {\r\n                            //\r\n                            //             }\r\n                            //             else {\r\n                            //                 this.userService?.createUser({\r\n                            //\r\n                            //                 })\r\n                            //             }\r\n                            //         })\r\n                            //         .catch(ex => {\r\n                            //             debugger; // create the user\r\n                            //         })\r\n                            // }\r\n                        })\r\n                        .catch((ex) => {\r\n                            debugger\r\n                            this.onError('No longer authenticated: Invalid Certificate\\n')\r\n                        })\r\n                } else {\r\n                    this.onError('Not authenticated');\r\n                }\r\n\r\n            })\r\n            .catch((ex: KeycloakError) => {\r\n                debugger\r\n                this.onError('Failed to authenticate with keycloak: \\n' + JSON.stringify(ex));\r\n            })\r\n    }\r\n\r\n    logout() {\r\n        this._kc.logout(this.logoutOptions).then(this._kc.clearToken);\r\n    }\r\n\r\n    getToken() {\r\n        return this._kc?.token || '';\r\n    }\r\n\r\n    isLoggedIn() {\r\n        return !!this._kc?.token;\r\n    }\r\n\r\n    getRegistrationStatus(): RegistrationStatus {\r\n        return this.getAuthenticationState().registrationStatus;\r\n    }\r\n\r\n    setRegistrationStatus(status: RegistrationStatus) {\r\n        this.appDataStore?.sendEvent(this.model.actions.setRegistrationStatus(status))\r\n    }\r\n\r\n    getAuthenticationState(): AuthenticationState {\r\n        return this.appDataStore?.getState()[this.model.name];\r\n    }\r\n\r\n    private onError(message: string) {\r\n        if (!this.getAuthenticationState().hasError) {\r\n            alert(message);\r\n\r\n            this.appDataStore?.sendEvent(this.model.actions.setHasError(true))\r\n\r\n            this.logout();\r\n        }\r\n    }\r\n\r\n    securedFetch(successCallback: () => void) {\r\n        let prevToken = this.getToken();\r\n        return this._kc?.updateToken(5)\r\n            .then(successCallback)\r\n            .catch((reason: any) => {\r\n                // debugger;\r\n                // this.onError('Access Denied\\n');\r\n            })\r\n            .finally(() => {\r\n                if (this.getToken() !== prevToken) {\r\n                    this.updateProfile(this._kc.profile);\r\n                }\r\n            })\r\n    }\r\n\r\n    register(userInfo: UserInfo) {\r\n        this.setRegistrationStatus(RegistrationStatus.SUBMITTED);\r\n\r\n        this.userProvider?.create({user: userInfo},\r\n            (updatedUserInfo => {\r\n                this.addOrUpdateRepoItem(updatedUserInfo);\r\n\r\n                // need to set a temporary id\r\n            }))\r\n            .then(latestUser => {\r\n\r\n                if (latestUser != null) {\r\n                    this.addOrUpdateRepoItem(latestUser);\r\n                }\r\n\r\n                const fetchUser = () => {\r\n                    if (latestUser != null) {\r\n                        this.userProvider.getSingle(latestUser.id)\r\n                            .then(userInfo => {\r\n                                if (userInfo != null) {\r\n                                    if (userInfo.account_status === 'active') {\r\n                                        this.setRegistrationStatus(RegistrationStatus.APPROVED);\r\n\r\n                                        if (interval != null) {\r\n                                            clearInterval(interval);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            })\r\n                    }\r\n\r\n                    let interval = setInterval(fetchUser, 5000);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    getUsername() {\r\n        return this.getAuthenticationState().profile.username;\r\n    }\r\n\r\n    getUserProfile() {\r\n        return this.getAuthenticationState().profile;\r\n    }\r\n\r\n    getUserId() {\r\n        return this.getAuthenticationState().profile.id;\r\n    }\r\n}\r\n","import {StatInfo} from \"../../model\";\r\nimport {createSelector, Selector} from \"@reduxjs/toolkit\";\r\nimport {StatType} from \"../../model\";\r\nimport {forEachKVP} from \"../../framework.visual/extras/utils/collectionUtils\";\r\nimport {IStatService} from \"../../api\";\r\nimport {Plugin} from \"../../framework/extras/plugin\";\r\nimport { IEntityProvider } from \"../../api\";\r\nimport {Nullable} from \"../../framework/extras/typeUtils\";\r\n\r\nexport class StatService extends Plugin implements IStatService {\r\n    public static readonly class: string = 'StatService';\r\n    private statProvider: Nullable<IEntityProvider<StatInfo>> = null;\r\n\r\n    private readonly statSelectors: Record<string, Selector<any, Record<string,StatInfo>>>;\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(StatService.class);\r\n\r\n        this.statSelectors = {};\r\n    }\r\n\r\n    getStats(statType: StatType): Record<string, StatInfo> {\r\n\r\n        let selector: Nullable<Selector<any, Record<string, StatInfo>>> = null;\r\n\r\n        if (this.statSelectors[statType] == null) {\r\n            selector = this.makeGetAllStats(statType);\r\n            this.statSelectors[statType] = selector;\r\n        }\r\n        else {\r\n            selector = this.statSelectors[statType];\r\n        }\r\n\r\n        return selector(super.getRepoState());\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    configure() {\r\n        super.configure();\r\n    }\r\n\r\n    setStatProvider(provider: IEntityProvider<StatInfo>): void {\r\n        this.statProvider = provider;\r\n    }\r\n\r\n    fetchStats() {\r\n        this.statProvider?.getAll()\r\n            .then(statInfos => {\r\n                this.removeAllByType(StatInfo.class)\r\n                this.addOrUpdateAllRepoItems(statInfos)\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    makeGetAllStats(statType: StatType) {\r\n        return createSelector(\r\n            [() => super.getAll(StatInfo.class)],\r\n            (stats) => {\r\n                let result: Record<string, StatInfo> = {};\r\n\r\n                if (stats) {\r\n                    forEachKVP(stats, (statKey: string, statValue: StatInfo) => {\r\n                        if (statValue.type === statType) {\r\n                            result[statKey] = statValue;\r\n                        }\r\n                    });\r\n                }\r\n                return result;\r\n            }\r\n        );\r\n    }\r\n}\r\n","import {createSelector, Selector} from \"@reduxjs/toolkit\";\r\nimport {MetadataInfo, TagInfo} from \"../../model\";\r\nimport {IEntityProvider, ITagService} from \"../../api\";\r\nimport {Plugin} from \"../../framework/extras/plugin\";\r\nimport {Nullable} from \"../../framework/extras/typeUtils\";\r\n\r\nexport class TagService extends Plugin implements ITagService {\r\n    public static readonly class: string = 'TagService';\r\n\r\n    private readonly getAllPublicTagsSelector: Selector<any, Record<string, TagInfo>>;\r\n    private tagProvider: Nullable<IEntityProvider<TagInfo>> = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(TagService.class);\r\n\r\n        this.getAllPublicTagsSelector = createSelector(\r\n            [() => super.getAll<TagInfo>(TagInfo.class)],\r\n            (items) => {\r\n                return items;\r\n            }\r\n        );\r\n    }\r\n\r\n    setTagProvider(provider: IEntityProvider<TagInfo>): void {\r\n        this.tagProvider = provider;\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    configure() {\r\n        super.configure();\r\n    }\r\n\r\n    getAllPublicTags() {\r\n        return this.getAllPublicTagsSelector(super.getRepoState());\r\n    }\r\n\r\n    fetchTags() {\r\n        this.setLoading(true);\r\n\r\n        this.tagProvider?.getAll()\r\n            .then(responseData => {\r\n                this.removeAllByType(TagInfo.class)\r\n                this.addOrUpdateAllRepoItems(responseData)\r\n\r\n                this.setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setLoading(false);\r\n            });\r\n    }\r\n\r\n    setLoading(isLoading: boolean) {\r\n        let repoItem = super.getRepoItem<MetadataInfo>(MetadataInfo.class, 'tags-loading-info');\r\n\r\n        if (repoItem == null) {\r\n            repoItem = new MetadataInfo('tags-loading-info');\r\n        }\r\n        repoItem.isLoading = isLoading;\r\n\r\n        this.addOrUpdateRepoItem(repoItem);\r\n    }\r\n\r\n    getTagsLoading() {\r\n        let result = false;\r\n\r\n        let repoItem = super.getRepoItem<MetadataInfo>(MetadataInfo.class, 'tags-loading-info');\r\n\r\n        if (repoItem != null) {\r\n            result = repoItem.isLoading;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const GraphSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"M 0.50196642,27.916484 C -0.00732539,27.732403 5.7409988e-6,27.907173 5.7409988e-6,15.951217 5.7409988e-6,4.9679652 0.01034613,4.4401949 0.22949463,4.2418703 0.41721412,4.071988 0.74383994,4.0341865 2.0240042,4.0341865 c 1.049918,0 1.6145843,0.049564 1.7156087,0.1505883 0.1145598,0.1145599 0.1505882,2.5014372 0.1505882,9.9764682 v 9.82588 H 17.69412 c 13.6366,0 13.806961,0.003 14.0549,0.250981 0.222642,0.222642 0.25098,0.4183 0.25098,1.732877 0,1.081708 -0.0481,1.547681 -0.178107,1.72549 -0.174485,0.23864 -0.492779,0.244045 -15.654899,0.265821 -8.5122358,0.01222 -15.56149819,-0.0084 -15.66502758,-0.04581 z M 6.023534,18.726853 V 15.474425 L 8.7484389,10.931753 C 10.247135,8.433282 11.589578,6.312919 11.731644,6.219834 c 0.142065,-0.09309 0.382032,-0.136889 0.53326,-0.09734 0.174627,0.04567 1.266493,1.394952 2.99223,3.697681 1.494496,1.994177 2.739261,3.625776 2.766142,3.625776 0.02688,0 1.299746,-0.819814 2.828589,-1.821808 2.734271,-1.792024 3.018602,-1.924693 3.393244,-1.583293 0.08238,0.07507 4.59099,9.423905 5.379237,11.154119 l 0.357314,0.784314 H 18.002598 6.023534 Z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import {MenuItem} from \"../../framework/model/menuItem\";\r\n\r\nexport class SystemToolMenuItem extends MenuItem {\r\n    public static class: string = 'SystemToolMenuItem';\r\n\r\n    constructor(id: string) {\r\n        super(id);\r\n\r\n        this.appendClassName(SystemToolMenuItem.class);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const UploadSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d={\"M 4.1174834,31.954885 C 3.1544555,31.811523 2.2574642,31.33349 1.4506126,30.533633 0.76925724,29.858183 0.42611129,29.306936 0.16580053,28.469644 6.9262222e-4,27.938574 0,27.920154 0,24.061047 0,20.220624 0.00138667,20.183155 0.15429547,19.89756 0.81984853,18.654461 2.4099164,18.483102 3.2994489,19.558614 c 0.4221838,0.510453 0.4338844,0.627296 0.4338844,4.332944 0,2.201125 0.026087,3.42906 0.075635,3.56019 0.102927,0.272402 0.4097977,0.588279 0.6865252,0.706674 0.1910905,0.08176 2.0861347,0.0979 11.4910385,0.0979 h 11.26221 l 0.312485,-0.165234 c 0.61716,-0.326341 0.593973,-0.172532 0.634329,-4.207809 0.03418,-3.418193 0.04129,-3.567661 0.184308,-3.875299 0.219441,-0.472035 0.486301,-0.751896 0.918656,-0.963414 0.945081,-0.462354 2.031269,-0.08132 2.502291,0.877795 L 32,20.327961 l -4.98e-4,3.697533 c -5.69e-4,4.150831 0.0037,4.109275 -0.529667,5.190767 -0.605895,1.228575 -1.686374,2.159581 -3.0254,2.606871 l -0.497778,0.166278 -11.733333,0.0097 C 9.76,32.004479 4.3168676,31.984567 4.1174834,31.954885 Z M 15.673099,22.560548 c -0.413974,-0.06198 -0.706832,-0.213417 -1.02184,-0.528403 -0.542412,-0.542377 -0.497935,0.157675 -0.519211,-8.1722 L 14.112988,6.3964393 11.678717,8.8217982 C 10.051886,10.442675 9.1383049,11.301024 8.9244474,11.409553 8.6876147,11.529743 8.4843166,11.571676 8.1422252,11.570897 7.5820019,11.569625 7.2610647,11.441369 6.8347024,11.048388 6.4492602,10.693124 6.2579756,10.239329 6.2652965,9.6975545 6.2761735,8.8925825 6.2159605,8.9634386 10.719564,4.4560246 c 4.513317,-4.51713496 4.429974,-4.44636205 5.244883,-4.45385382 0.796526,-0.00732254 0.61043,-0.16483459 5.142779,4.35286712 2.300527,2.2930938 4.263561,4.3052393 4.362296,4.4714355 0.236141,0.3974862 0.296559,1.0203904 0.142751,1.4717636 -0.263343,0.772814 -0.98565,1.288448 -1.790048,1.277863 -0.80361,-0.01058 -0.894118,-0.08006 -3.536806,-2.7151158 L 17.884447,6.4669448 v 7.1225512 c 0,7.270837 -0.0122,7.632984 -0.271398,8.053244 -0.426235,0.691103 -1.154093,1.03546 -1.939947,0.917808 z\"} />\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const TagsSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d={\"M 12.303297,28.723654 C 12.163027,28.677907 11.917912,28.565298 11.758599,28.473411 11.417771,28.276832 0.92086004,17.840917 0.507689,17.287878 0.35322269,17.081121 0.19280948,16.770362 0.12169117,16.540107 0.00361317,16.157816 0,15.984764 0,10.711879 0,5.4623377 0.00407919,5.2645672 0.12004558,4.8930015 0.33101835,4.2170223 0.85934054,3.6600472 1.5564885,3.3786545 L 1.906446,3.2373996 7.2008428,3.2197556 c 3.5445012,-0.011812 5.4322602,0.00375 5.7115112,0.047073 0.894218,0.1387427 0.555079,-0.1636093 6.6793,5.9547989 6.085899,6.0801235 5.800993,5.7633395 5.961999,6.6291065 0.09432,0.507184 -0.0165,1.096601 -0.293398,1.560494 -0.153625,0.257371 -1.622862,1.766004 -5.487505,5.63465 -5.010982,5.016172 -5.300157,5.294348 -5.721909,5.504261 -0.39188,0.195045 -0.50594,0.223183 -0.968354,0.238888 -0.32782,0.01113 -0.619682,-0.01335 -0.77919,-0.06537 z M 6.4561226,11.064633 C 7.7278747,10.593865 8.3487013,9.0374085 7.7581412,7.8003785 7.5238069,7.3095245 7.1007859,6.8855425 6.5988223,6.6384267 6.2363034,6.4599591 6.1593598,6.4450707 5.5995667,6.4450707 c -0.5571422,0 -0.6398608,0.015805 -1.0165467,0.1942324 -0.4962582,0.2350664 -0.9355106,0.6659504 -1.1738169,1.1514544 -0.156486,0.31881 -0.1712709,0.406403 -0.1712709,1.014675 0,0.59562 0.017085,0.702195 0.1622028,1.011813 0.430579,0.9186665 1.418871,1.4908855 2.4099863,1.3953775 0.1830793,-0.01764 0.4737797,-0.08424 0.6460013,-0.14799 z M 18.731589,28.726797 c -0.450485,-0.148928 -0.998615,-0.483632 -0.998615,-0.609784 0,-0.03464 2.064019,-2.133421 4.586709,-4.66395 4.40135,-4.415028 4.596807,-4.620529 4.836584,-5.085139 0.412326,-0.798951 0.530668,-1.272951 0.528864,-2.118273 -0.0019,-0.875168 -0.09773,-1.285647 -0.487611,-2.088012 l -0.279384,-0.57496 -5.13728,-5.1455315 C 18.955352,5.6111053 16.643577,3.2757088 16.643577,3.2513778 c 0,-0.067714 2.278536,-0.051692 2.714742,0.019089 0.863834,0.1401692 0.605276,-0.09149 6.673517,5.9792567 6.025788,6.0282795 5.757084,5.7295355 5.925233,6.5876285 0.05529,0.282163 0.05688,0.468157 0.0065,0.75442 -0.1472,0.835664 0.07632,0.586167 -5.750304,6.418517 -5.12869,5.133728 -5.381854,5.377232 -5.78597,5.565197 -0.354452,0.164866 -0.505743,0.199372 -0.938093,0.213956 -0.312091,0.01053 -0.611005,-0.01419 -0.757573,-0.06264 z\"} />\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const ProfileSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d={\"M 13.389828,31.968485 C 10.231734,31.884858 7.6002671,31.688095 4.999796,31.341134 3.9871823,31.20603 1.9416172,30.820879 1.2312034,30.631563 L 0.897205,30.542557 1.180898,30.103629 c 0.1560308,-0.24141 0.5097833,-0.664531 0.7861157,-0.940269 1.2381086,-1.235439 2.9183658,-2.124777 5.9817418,-3.166055 0.7775387,-0.264294 1.620435,-0.581332 1.8731029,-0.704527 0.9298796,-0.453392 1.6705066,-1.260808 2.0328306,-2.21615 0.144185,-0.380171 0.454713,-1.527521 0.456524,-1.686779 2.78e-4,-0.02357 -0.195141,-0.113027 -0.434242,-0.198802 C 10.682903,20.762688 9.1704251,19.798231 8.1841852,18.83628 4.842904,15.577284 3.9939752,10.401614 6.0886931,6.0606821 7.4880743,3.160712 10.048296,1.1163488 13.285279,0.3141335 c 1.716794,-0.42546883 3.785962,-0.41835736 5.529966,0.0190064 3.971134,0.9958881 7.031536,4.1256288 7.932292,8.112013 0.847559,3.7509521 -0.213146,7.4316861 -2.938001,10.1951061 -0.93384,0.947056 -1.904799,1.644402 -3.097355,2.224532 l -1.024444,0.498349 0.04244,0.243448 c 0.261375,1.499478 0.830376,2.57225 1.722206,3.246982 0.53432,0.404252 0.87465,0.555489 2.510056,1.115436 3.161861,1.082588 4.785533,1.938388 6.047442,3.187465 0.272205,0.269438 0.629467,0.691375 0.793915,0.93764 l 0.298999,0.447752 -0.614022,0.154691 c -3.633475,0.915379 -10.703403,1.441287 -17.098941,1.271931 z\"} />\r\n    </svg>\r\n);\r\n\r\n\r\n","import {MenuItem} from \"../../framework/model/menuItem\";\r\n\r\nexport class SearchResultsMenuItem extends MenuItem {\r\n    public static class: string = 'SearchResultsMenuItem';\r\n\r\n    constructor(id: string) {\r\n        super(id);\r\n\r\n        this.appendClassName(SearchResultsMenuItem.class);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const CardsSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"M 3.8553742,23.706331 3.8442953,21.161364 1.9221477,21.150183 0,21.139003 v -7.69515 -7.6951505 l 1.9399375,0.02848 c 1.0669655,0.01566 7.4068313,0.02848 14.0885905,0.02848 h 12.148653 v 2.555705 2.5557055 H 30.088591 32 v 7.66711 7.667114 H 17.933227 3.866453 Z M 30.754362,18.584183 v -6.421477 h -1.28859 -1.288591 v 4.488591 4.488592 H 17.288591 6.4 v 1.932886 1.932884 H 18.577181 30.754362 Z M 26.888591,13.472775 V 7.0512975 H 14.711409 2.5342282 v 6.3928415 c 0,3.516062 0.012886,6.405726 0.028636,6.421476 0.015749,0.01575 5.4954807,0.02863 12.1771818,0.02863 h 12.148545 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport enum Justify_Content {\r\n    justify_content_start = 'justify-content-start',\r\n    justify_content_between = 'justify-content-between',\r\n    justify_content_around = 'justify-content-around',\r\n    justify_content_center = 'justify-content-center',\r\n    justify_content_end = 'justify-content-end',\r\n}\r\n\r\nexport type ButtonProps = {\r\n    text?: string;\r\n    justifyContent?: Justify_Content;\r\n    orientation?: 'vertical' | 'horizontal';\r\n    onClick?: React.MouseEventHandler<HTMLDivElement>;\r\n    selected?: boolean;\r\n    disabled?: boolean;\r\n    className?: string;\r\n    tooltip?: string;\r\n    light?: boolean;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport type ButtonState = {\r\n\r\n}\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const TableSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"M 1.6445662,31.941943 C 1.0423176,31.758084 0.45946277,31.250816 0.18716659,30.673544 L 0.014564,30.307625 V 24.619251 18.930876 L 0.19293946,18.550297 C 0.40340334,18.101255 0.8540038,17.64055 1.2952786,17.423238 l 0.3160222,-0.15563 5.6653872,-0.01808 5.665386,-0.01808 0.387226,0.14488 c 0.518547,0.194013 1.014866,0.66804 1.263859,1.207093 l 0.19122,0.413978 0.01964,5.286188 c 0.02105,5.664872 0.0068,5.973727 -0.302399,6.541777 -0.236406,0.434355 -0.736848,0.873864 -1.186632,1.04215 -0.358176,0.134011 -0.472262,0.136527 -5.9346465,0.130919 -3.0631979,-0.0031 -5.6442976,-0.02857 -5.7357773,-0.0565 z M 12.94701,30.365461 c 0.345516,-0.242009 0.340429,-0.155328 0.340429,-5.800766 V 19.316472 L 13.135312,19.090408 C 12.861713,18.683834 12.994067,18.69231 7.2386796,18.712732 1.561959,18.732875 1.848836,18.712998 1.619051,19.101998 1.5224025,19.265611 1.5115048,19.82808 1.5115048,24.652801 v 5.368742 l 0.2262043,0.226205 0.2262044,0.226204 h 5.4141014 c 4.8977091,0 5.4288751,-0.01035 5.5689951,-0.108491 z m 5.865619,1.560768 c -0.346598,-0.09947 -0.905635,-0.497152 -1.132466,-0.805594 -0.110987,-0.150918 -0.262212,-0.435878 -0.336055,-0.633243 -0.13133,-0.35101 -0.133867,-0.481824 -0.116177,-5.990946 l 0.01808,-5.632101 0.145499,-0.314994 c 0.186524,-0.403811 0.732433,-0.94972 1.136245,-1.136244 l 0.314993,-0.145499 5.665387,-0.01808 c 5.593668,-0.01785 5.670059,-0.01633 6.034443,0.120004 0.462196,0.17293 0.992536,0.643224 1.227438,1.088466 l 0.17928,0.339812 0.01807,5.698673 0.01807,5.698674 -0.145114,0.388885 c -0.193702,0.519096 -0.76097,1.084087 -1.285499,1.280338 -0.369133,0.13811 -0.439881,0.139703 -5.94303,0.133774 -3.461225,-0.0037 -5.656406,-0.03096 -5.799166,-0.07193 z m 11.425905,-1.64787 c 0.107576,-0.107577 0.214665,-0.290953 0.237975,-0.407501 0.02331,-0.116549 0.04238,-2.514415 0.04238,-5.328591 0,-5.571944 0.0088,-5.438503 -0.374025,-5.68938 -0.174899,-0.114624 -0.475916,-0.122765 -5.24485,-0.141831 -2.782617,-0.01112 -5.216312,-0.0015 -5.408211,0.02137 -0.266154,0.03173 -0.396337,0.08903 -0.548878,0.24157 l -0.19997,0.19997 v 5.423787 5.423787 l 0.226204,0.226205 0.226205,0.226204 h 5.423787 5.423787 z M 1.6445662,14.710492 C 1.0423176,14.526632 0.45946277,14.019364 0.18716659,13.442093 L 0.014564,13.076174 V 7.3877994 1.6994245 L 0.18663767,1.3335057 C 0.39161477,0.89761645 0.88090682,0.39604416 1.3049888,0.18708587 L 1.6113008,0.03615699 7.276688,0.0180806 c 5.593668,-0.017848193 5.670059,-0.0163293 6.034443,0.12000475 0.740216,0.27695 1.303529,0.98172305 1.435672,1.79620315 0.09511,0.58624 0.09511,10.3207815 0,10.9070215 -0.131876,0.812829 -0.695437,1.519246 -1.431813,1.794759 -0.358176,0.134011 -0.472262,0.136528 -5.9346465,0.130919 -3.0631979,-0.0031 -5.6442976,-0.02857 -5.7357773,-0.0565 z M 12.91341,13.154163 c 0.383147,-0.251103 0.374029,-0.110528 0.374029,-5.7663636 0,-5.6559338 0.0091,-5.5152939 -0.374079,-5.7663635 C 12.737453,1.5061841 12.446723,1.4998324 7.3473715,1.4998324 H 1.9669846 L 1.7392447,1.7483459 1.5115048,1.9968587 v 5.3848591 5.3848592 l 0.1718428,0.204224 c 0.094514,0.112323 0.2666623,0.232033 0.3825515,0.266024 0.1233406,0.03618 2.3774646,0.05706 5.4363353,0.05037 4.9385296,-0.0108 5.2358206,-0.01811 5.4111756,-0.133032 z m 5.899219,1.540615 c -0.346598,-0.09947 -0.905635,-0.497153 -1.132466,-0.805594 -0.110987,-0.150918 -0.262055,-0.435461 -0.335708,-0.632316 -0.130848,-0.349721 -0.133509,-0.486164 -0.116177,-5.9576809 l 0.01774,-5.5997626 0.178376,-0.3805782 C 17.634944,0.86961235 18.124073,0.36964811 18.543364,0.17508307 18.83855,0.038107 18.922274,0.03590351 24.508139,0.0180806 L 30.173526,3.541399e-6 30.561942,0.14532854 c 0.529302,0.19803728 1.079526,0.74722093 1.276742,1.27432646 0.143291,0.3829773 0.143881,0.4074972 0.143881,5.9681444 0,5.5578896 -6.65e-4,5.5853586 -0.143677,5.9686346 -0.192203,0.515091 -0.761416,1.080951 -1.284063,1.276498 -0.369133,0.138111 -0.439881,0.139704 -5.94303,0.133774 -3.461225,-0.0037 -5.656406,-0.03096 -5.799166,-0.07193 z m 11.35464,-1.571574 c 0.132328,-0.09438 0.240007,-0.246604 0.282384,-0.399184 0.09394,-0.338244 0.09394,-10.3341971 0,-10.6724418 C 30.407273,1.898998 30.299597,1.7467798 30.167269,1.652394 l -0.21389,-0.1525616 h -5.377472 -5.377471 l -0.22774,0.2485135 -0.22774,0.2485128 v 5.3848591 5.3848592 l 0.171843,0.204224 c 0.09451,0.112323 0.266662,0.232033 0.382551,0.266024 0.123337,0.03617 2.376324,0.05706 5.433369,0.05037 l 5.22266,-0.01143 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const ListSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d={\"M 0.4532274,28.885223 C 0.34097346,28.816781 0.19313202,28.668939 0.12468989,28.556685 0.00643853,28.362738 2.5010838e-4,28.23736 2.5010838e-4,26.03553 c 0,-2.20183 0.006187172,-2.327208 0.12443978162,-2.521156 0.0684421,-0.112254 0.21628357,-0.260095 0.32853751,-0.328537 0.19395461,-0.118256 0.31956482,-0.124452 2.5275505,-0.124674 3.2459569,-3.13e-4 2.9775458,-0.277326 2.953635,3.048143 -0.016124,2.242381 -0.021522,2.334725 -0.146438,2.504927 C 5.5018777,29.004048 5.4594292,29.00995 2.9430713,29.0098 0.77261688,29.009674 0.64703047,29.0034 0.4532274,28.885223 Z M 10.521724,27.898472 c -0.119862,-0.06022 -0.2819,-0.205247 -0.360083,-0.322279 -0.136593,-0.204468 -0.142141,-0.264448 -0.141916,-1.534268 2.51e-4,-1.475021 0.02983,-1.595977 0.453212,-1.854117 0.201479,-0.122844 0.336641,-0.12444 10.536923,-0.12444 10.200281,0 10.335443,0.0016 10.536923,0.12444 0.42312,0.257979 0.452977,0.379769 0.452977,1.847722 0,1.467953 -0.02986,1.589743 -0.452977,1.847722 -0.201471,0.122838 -0.336697,0.124442 -10.505612,0.124577 -9.682792,1.25e-4 -10.314603,-0.0064 -10.519447,-0.109357 z M 0.4532274,18.865513 C 0.34097346,18.797071 0.19313202,18.64923 0.12468989,18.536976 0.00643853,18.343028 2.5010838e-4,18.21765 2.5010838e-4,16.01582 c 0,-2.20183 0.006187172,-2.327208 0.12443978162,-2.521155 0.0684421,-0.112254 0.21628357,-0.260096 0.32853751,-0.328538 0.19395461,-0.118256 0.31956482,-0.124452 2.5275505,-0.124674 3.2459569,-3.13e-4 2.9775458,-0.277326 2.953635,3.048143 -0.016124,2.242381 -0.021522,2.334725 -0.146438,2.504927 C 5.5018777,18.984338 5.4594292,18.99024 2.9430713,18.99009 0.77261688,18.989965 0.64703047,18.98369 0.4532274,18.865513 Z M 10.472937,17.863542 c -0.423121,-0.257979 -0.452978,-0.379769 -0.452978,-1.847722 0,-1.467953 0.02986,-1.589743 0.452978,-1.847722 0.201479,-0.122843 0.336641,-0.12444 10.536923,-0.12444 10.200281,0 10.335443,0.0016 10.536923,0.12444 0.42312,0.257979 0.452977,0.379769 0.452977,1.847722 0,1.467953 -0.02986,1.589743 -0.452977,1.847722 -0.20148,0.122844 -0.336642,0.12444 -10.536923,0.12444 -10.200282,0 -10.335444,-0.0016 -10.536923,-0.12444 z M 0.4532274,8.8470239 C 0.34097346,8.7779109 0.19313202,8.6295199 0.12468989,8.5172659 0.00643415,8.3233119 2.3820998e-4,8.1977009 1.5897602e-5,5.9897155 -2.3459507e-4,3.6826837 7.7990052e-4,3.6647834 0.14089677,3.4568626 0.21851007,3.3416923 0.38054756,3.1895774 0.50098008,3.1188301 0.71091175,2.9955063 0.81298503,2.9901977 2.9743829,2.9901977 c 2.1613978,0 2.2634711,0.00531 2.4734028,0.1286324 0.1204325,0.070747 0.28247,0.2228622 0.3600833,0.3380325 0.1400255,0.2077831 0.1411145,0.2271042 0.141018,2.5015413 -1.252e-4,2.523366 -0.00591,2.565145 -0.3958029,2.851299 -0.1703244,0.125004 -0.2620924,0.1303 -2.536239,0.146339 -2.26813274,0.016 -2.36742493,0.01177 -2.5636177,-0.109018 z M 10.472937,7.8438329 c -0.423385,-0.258141 -0.452951,-0.379097 -0.453212,-1.8541174 -2.5e-4,-1.2675152 0.0055,-1.3300331 0.140881,-1.530882 0.07761,-0.1151703 0.239651,-0.2672851 0.360083,-0.3380324 0.218484,-0.1283481 0.241676,-0.1286324 10.489171,-0.1286324 10.247494,0 10.270686,3.131e-4 10.48917,0.1286324 0.120433,0.070747 0.28247,0.2228621 0.360083,0.3380324 0.135353,0.2008489 0.141106,0.2633668 0.140881,1.530882 -2.5e-4,1.4750204 -0.02983,1.5959764 -0.453211,1.8541174 -0.20148,0.122843 -0.336642,0.12444 -10.536923,0.12444 -10.200282,0 -10.335444,-0.0016 -10.536923,-0.12444 z\"} />\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from \"react\";\r\nimport './card.css';\r\nimport {CardProps, CardState} from \"./cardModel\";\r\n\r\nclass Card extends React.Component<CardProps, CardState> {\r\n\r\n    constructor(props: CardProps) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { selected } = this.props;\r\n        if (selected !== undefined) {\r\n            this.setState({\r\n                ...this.state,\r\n                expanded: selected,\r\n            });\r\n        }\r\n    }\r\n\r\n    _toggleExpanded() {\r\n        const { body, children, onClick } = this.props;\r\n        const { expanded } = this.state;\r\n        if (body || children) {\r\n            this.setState({\r\n                ...this.state,\r\n                expanded: !expanded\r\n            });\r\n        }\r\n\r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {className, header, body, children, onClick, ...rest} = this.props;\r\n        const {expanded} = this.state;\r\n\r\n        let cn = \"card d-flex\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        if (expanded) {\r\n            cn += ` selected`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn} {...rest}>\r\n                <div onClick={() => this._toggleExpanded()} className={\"cursor-pointer card-header w-100\"}>{header}</div>\r\n                <div className={`card-body ${this.state.expanded ? 'expanded': 'collapsed'}`}>\r\n                    <React.Fragment>\r\n                        {body}\r\n                        {children}\r\n                    </React.Fragment>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import './scrollBar.css';\r\nimport {Scrollbars} from \"react-custom-scrollbars\";\r\nimport {ScrollBarProps} from \"./scrollBarModel\";\r\n\r\nimport React from \"react\";\r\n\r\nclass ScrollBar extends React.Component<ScrollBarProps> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        const {children, renderTrackHorizontal=true, renderTrackVertical=true, ...rest} = this.props;\r\n\r\n        let cnh = 'track-horizontal';\r\n        if (!renderTrackHorizontal) {\r\n            cnh = 'd-none';\r\n        }\r\n\r\n        let cnv = 'track-vertical'\r\n        if (!renderTrackVertical) {\r\n            cnv = 'd-none'\r\n        }\r\n\r\n        return (\r\n            <Scrollbars renderTrackHorizontal={props => <div {...props} className={cnh}/>}\r\n                        renderTrackVertical={props => <div {...props} className={cnv}/>}\r\n                        renderThumbHorizontal={props => <div {...props} className=\"thumb-horizontal\"/>}\r\n                        renderThumbVertical={props => <div {...props} className=\"thumb-vertical\"/>}\r\n                        renderView={props => <div {...props} className=\"view\"/>} {...rest}\r\n                        autoHide\r\n                        autoHideTimeout={1000}\r\n                        autoHideDuration={200}>\r\n                {children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScrollBar;\r\n","import React, {Component} from 'react';\r\nimport './loadingIndicator.css';\r\nimport {LoadingIndicatorProps, LoadingIndicatorState} from \"./loadingIndicatorModel\";\r\n\r\n\r\nexport class LoadingIndicator extends Component<LoadingIndicatorProps, LoadingIndicatorState> {\r\n    render () {\r\n        const { className, size=\"medium\", ...rest } = this.props;\r\n\r\n        let cn = 'loader-container w-100 h-100 d-flex align-items-center justify-content-center'\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n        if (size) {\r\n            cn += ` ${size}`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={\"loader\"}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const CheckMarkSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 11.556828,27.878955 c -0.44417,-0.14708 -0.26339,0.0249 -5.9006599,-5.6124 -4.37137,-4.37137 -5.38823996,-5.40554 -5.46294996,-5.55589 -0.1932099964795,-0.38882 -0.24184,-0.77594 -0.14445,-1.14984 0.11432,-0.43891 0.16069,-0.49527 1.54833996,-1.88194 1.1669,-1.16607 1.3369,-1.32273 1.54429,-1.42309 0.47203,-0.22843 0.97548,-0.22782 1.44043,0.002 0.21253,0.10494 0.54434,0.4259 3.82463,3.69955 l 3.5919199,3.58464 7.59815,-7.5914 c 7.02299,-7.0167602 7.61551,-7.5998502 7.82759,-7.7030502 0.4535,-0.22066 0.98386,-0.22148 1.42426,-0.002 0.18364,0.0914 0.42051,0.3107 1.53357,1.41959 1.15897,1.15464 1.33054,1.33964 1.4348,1.54714 0.24022,0.47807 0.24432,0.97433 0.012,1.45109 -0.097,0.19912 -0.97432,1.08708 -9.48342,9.5987402 l -9.37651,9.37932 -0.2824,0.13337 c -0.26046,0.123 -0.30981,0.13406 -0.63539,0.14237 -0.22209,0.006 -0.40537,-0.008 -0.4942,-0.0378 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './checkBox.css';\r\nimport {CheckProp, CheckState} from \"./checkBoxModel\";\r\nimport {CheckMarkSVG} from \"../../svgs/checkMarkSVG\";\r\n\r\nclass CheckBox extends Component<CheckProp, CheckState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: this.props.selected ? this.props.selected : false,\r\n        }\r\n    }\r\n\r\n    toggleHandler = () => {\r\n        const { disabled, onClick } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (!disabled) {\r\n            this.setState({\r\n                ...this.state,\r\n                selected: !selected}, () => {\r\n                if (onClick) {\r\n                    onClick(this.state.selected);\r\n                }\r\n                });\r\n\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps: Readonly<CheckProp>, prevState: Readonly<CheckState>, snapshot?: any) {\r\n        const { selected } = this.props;\r\n        if (prevProps.selected !== selected) {\r\n            this.setSelected(selected);\r\n        }\r\n    }\r\n\r\n    setSelected(selected: boolean | undefined) {\r\n        this.setState({\r\n            ...this.state,\r\n            selected\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {className, onClick, disabled, text, ...rest} = this.props;\r\n        const { selected } = this.state;\r\n\r\n        let cn = \"check-box\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n        if (selected) {\r\n            cn += ` selected`;\r\n        }\r\n        if (disabled) {\r\n            cn += ` disabled`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn} {...rest} onClick={this.toggleHandler}>\r\n                <label>\r\n                    <input type={\"checkbox\"} checked={selected} onChange={this.toggleHandler}/>\r\n                </label>\r\n                <CheckMarkSVG className=\"small-image-container checkmark\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CheckBox;\r\n","import React, {Component} from \"react\";\r\nimport {PositioningPortal} from \"@codastic/react-positioning-portal/lib\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport {PortalProps, PortalState} from \"./portalModel\";\r\n\r\nclass Portal extends Component<PortalProps, PortalState> {\r\n\r\n    timeout = null;\r\n    private didChangeTimeout: NodeJS.Timeout | undefined;\r\n\r\n    constructor(props: PortalProps | Readonly<PortalProps>) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            willChangeTo: null,\r\n        }\r\n\r\n        bindInstanceMethods(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { isOpen } = this.props;\r\n\r\n        if (isOpen) {\r\n            this._open();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PortalProps>, prevState: Readonly<PortalState>, snapshot?: any) {\r\n        const { isOpen } = this.props;\r\n\r\n        if (isOpen && !prevProps.isOpen) {\r\n            this._open();\r\n        } else if (!isOpen && prevProps.isOpen) {\r\n            this._close();\r\n        }\r\n    }\r\n\r\n    _onShouldClose = () => {\r\n\r\n        const { onShouldClose } = this.props;\r\n        const { isOpen }  = this.state;\r\n\r\n        if (isOpen) {\r\n            this._close();\r\n        }\r\n\r\n        if (onShouldClose) {\r\n            onShouldClose();\r\n        }\r\n    };\r\n\r\n    _open() {\r\n        this._cancelQueue();\r\n\r\n        const { enterClass='', timeout=0 } = this.props;\r\n\r\n        // Force a reflow, so that a transition will be rendered\r\n        // between the initial state, and the state that results\r\n        // from setting `willChangeTo = \"open\"`.\r\n        // this.node && this.node.scrollTop;\r\n\r\n        this.setState({\r\n            willChangeTo: enterClass,\r\n            isOpen: true\r\n        }, () => {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    willChangeTo: `${enterClass}-active`,\r\n                    isOpen: true\r\n                });\r\n            }, 1)\r\n        });\r\n\r\n\r\n        this.didChangeTimeout = setTimeout(() => {\r\n            this.setState({\r\n                isOpen: true,\r\n                willChangeTo: null,\r\n            });\r\n            delete this.didChangeTimeout;\r\n        }, timeout);\r\n    }\r\n\r\n    _close() {\r\n        this._cancelQueue();\r\n\r\n        const { exitClass='', timeout=0 } = this.props;\r\n\r\n        this.setState({\r\n            isOpen: true,\r\n            willChangeTo: exitClass\r\n        }, () => {\r\n            this.setState({\r\n                isOpen: true,\r\n                willChangeTo: `${exitClass}-active`,\r\n            });\r\n        });\r\n\r\n        this.didChangeTimeout = setTimeout(() => {\r\n            this.setState({\r\n                isOpen: false,\r\n                willChangeTo: null,\r\n            });\r\n            delete this.didChangeTimeout;\r\n        }, timeout);\r\n    }\r\n\r\n    _cancelQueue() {\r\n        if (this.didChangeTimeout) {\r\n            clearTimeout(this.didChangeTimeout);\r\n            delete this.didChangeTimeout;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { className, children,\r\n                onShouldClose, portalContent, zIndex=99,\r\n                autoLayout = true, ...rest\r\n        } = this.props;\r\n\r\n        const { isOpen, willChangeTo=null } = this.state;\r\n\r\n        let cn = `portal position-absolute ${willChangeTo ? willChangeTo : ''}`;\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        return (\r\n            <PositioningPortal\r\n                isOpen={isOpen}\r\n                onShouldClose={this._onShouldClose}\r\n                portalContent={({ relatedWidth }) => {\r\n                    return (\r\n                        autoLayout ?\r\n                            <div {...rest} className={cn} style={{minWidth: relatedWidth, zIndex: zIndex}}>\r\n                                {portalContent}\r\n                            </div> :\r\n                            <div {...rest} className={cn} style={{zIndex: zIndex}}>\r\n                                {portalContent({relatedWidth})}\r\n                            </div>\r\n                    );\r\n                }}\r\n            >\r\n                {children}\r\n            </PositioningPortal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portal;\r\n","import React from \"react\";\r\nimport Portal from \"../portal/portal\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport {TooltipPortalProps, TooltipPortalState} from './tooltipPortalModel';\r\nimport './tooltipPortal.css';\r\n\r\nexport class TooltipPortal extends  React.Component<TooltipPortalProps, TooltipPortalState> {\r\n\r\n    constructor(props: TooltipPortalProps, context: any) {\r\n        super(props, context);\r\n\r\n        bindInstanceMethods(this);\r\n\r\n        this.state = {\r\n            willShow: false,\r\n            isShowing: false,\r\n        }\r\n    }\r\n\r\n    _onMouseLeave() {\r\n        this.setState({\r\n            ...this.state,\r\n            willShow: false,\r\n            isShowing: false\r\n        })\r\n    }\r\n\r\n    _onMouseEnter() {\r\n        this.setState({\r\n            ...this.state,\r\n            willShow: true\r\n        })\r\n\r\n        setTimeout(() => {\r\n            if (this.state.willShow) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    isShowing: true\r\n                })\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    render() {\r\n        const { className, portalContent, children, light, ...rest } = this.props;\r\n\r\n        const { isShowing } = this.state;\r\n\r\n        let cn = \"tooltip-portal shadow-lg text-wrap p-4 header-3\";\r\n\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n        if (light) {\r\n            cn += ` light`;\r\n        }\r\n\r\n        return (\r\n            <div {...rest} onMouseEnter={this._onMouseEnter} onMouseLeave={this._onMouseLeave}>\r\n                <Portal\r\n                    className={cn}\r\n                    isOpen={isShowing}\r\n                    portalContent={portalContent}>\r\n                    {children}\r\n                </Portal>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, {Component, createRef} from 'react';\r\nimport './textEdit.css';\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport {TextEditProps, TextEditState} from \"./textEditModel\";\r\n\r\nlet tooltip = 0;\r\n\r\nclass TextEdit extends Component<TextEditProps, TextEditState> {\r\n\tprivate readonly inputRef: { current: any };\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tbindInstanceMethods(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\ttmpValue: props.value ? props.value : '',\r\n\t\t\ttooltipId: `textedit-${tooltip}`,\r\n\t\t\tisHover: false,\r\n\t\t\tcancelHover: true\r\n\t\t}\r\n\r\n\t\tthis.inputRef = createRef();\r\n\r\n\t\ttooltip++;\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<TextEditProps>, prevState: Readonly<TextEditState>, snapshot?: any) {\r\n\t\tconst { value } = this.props;\r\n\r\n\t\tif (this.inputRef.current) {\r\n\t\t\t// this.inputRef.current.focus();//TODO this line was causing a bug where last text edit in a panel was always getting focused\r\n\t\t\tthis.inputRef.current.addEventListener(\"focusout\",  this.submit);\r\n\t\t}\r\n\r\n\t\tif (prevProps.value !== value) {\r\n\t\t\tthis.setTmpValue(value ? value : \"\");\r\n\t\t}\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tconst {tmpValue } = this.state;\r\n\t\tconst { value, onSubmit, name } = this.props;\r\n\r\n\t\tif (value !== tmpValue) {\r\n\t\t\tif (onSubmit) onSubmit(name ? name : \"\", tmpValue);\r\n\t\t}\r\n\t};\r\n\r\n\tcancel() {\r\n\t\tconst { value, onCancel } = this.props;\r\n\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\ttmpValue: value ? value : \"\",\r\n\t\t});\r\n\r\n\t\t// revert the value\r\n\t\tif (onCancel) onCancel();\r\n\t};\r\n\r\n\tsetTmpValue(tmpValue: string) {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\ttmpValue\r\n\t\t})\r\n\t}\r\n\r\n\thandleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n\r\n\t\tconst { onChange } = this.props;\r\n\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\ttmpValue: e.target.value\r\n\t\t});\r\n\r\n\t\tif (onChange) {\r\n\t\t\tonChange(e.target.value);\r\n\t\t}\r\n\t};\r\n\r\n\tonKeyPress(e: { key: string; }) {\r\n\t\tswitch (e.key.toUpperCase()) {\r\n\t\t\tcase 'ENTER':\r\n\t\t\t\tthis.submit();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ESCAPE':\r\n\t\t\t\tthis.cancel();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { placeholder, dirty, className, disable, value, type='text', autoFocus=false, edit, readonly } = this.props;\r\n\r\n\t\tconst { tmpValue } = this.state;\r\n\r\n\t\tlet cn = 'text-edit position-relative';\r\n\r\n\t\tif (className) {\r\n\t\t\tcn += ` ${className}`;\r\n\t\t}\r\n\r\n\t\tif (edit) {\r\n\t\t\tcn += ` edit`;\r\n\t\t}\r\n\r\n\t\tif (dirty) {\r\n\t\t\tcn += ` dirty`;\r\n\t\t}\r\n\r\n\t\tif (disable) {\r\n\t\t\tcn += ` disabled`;\r\n\t\t}\r\n\r\n\t\tif (readonly) {\r\n\t\t\tcn += ` readonly`;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={cn}>\r\n\t\t\t\t<input  type={type} className={'position-absolute h-100 w-100'}\r\n\t\t\t\t\t\tref={this.inputRef}\r\n\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\tvalue={tmpValue}\r\n\t\t\t\t\t\tonKeyUp={this.onKeyPress}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tdisabled={disable || readonly}\r\n\t\t\t\t\t\tautoFocus={autoFocus}\r\n\t\t\t\t>\r\n\t\t\t\t</input>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TextEdit;\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const DeleteSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"M 2.9137266,28.936119 0,26.019515 4.9974376,21.020407 9.9948758,16.021299 8.7894108,14.702052 C 8.1264063,13.976466 5.88665,11.708183 3.812175,9.6614236 L 0.04040231,5.9400419 2.9339278,3.0436598 c 1.591439,-1.5930101 2.9611008,-2.89638203 3.0436927,-2.89638203 0.082592,0 2.3874608,2.23654543 5.1219295,4.97010203 L 16.071313,10.08748 21.00798,5.1548835 c 2.715166,-2.7129287 4.987782,-4.94963561 5.050257,-4.970461 0.06248,-0.0208254 1.424931,1.2747697 3.027678,2.8790996 L 32,5.9804843 26.991917,10.990242 21.983833,16 26.991917,21.009758 32,26.019515 29.085915,28.936478 c -1.602747,1.60433 -2.964061,2.899977 -3.02514,2.879214 -0.06108,-0.02076 -2.333829,-2.257334 -5.050554,-4.970164 l -4.9395,-4.932416 -4.971467,4.969804 c -2.7343061,2.733394 -5.0390414,4.969806 -5.1216335,4.969806 -0.082592,0 -1.4613443,-1.312472 -3.0638939,-2.916603 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from \"react\";\r\nimport './tag.css';\r\nimport TextEdit from \"../textEdit/textEdit\";\r\nimport {DeleteSVG} from \"../../svgs/deleteSVG\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport {TagProps, TagState} from \"./tagModel\";\r\n\r\nclass Tag extends React.Component<TagProps, TagState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isSelected: false,\r\n            tmpText: \"\",\r\n        }\r\n\r\n        bindInstanceMethods(this);\r\n    }\r\n\r\n    delete() {\r\n        const { onDelete, name, text } = this.props\r\n        if (onDelete) {\r\n            onDelete(name, text);\r\n        }\r\n    }\r\n\r\n    submit(name:string, tmpValue:string) {\r\n        const { onSubmit, text } = this.props;\r\n        if (onSubmit) {\r\n            onSubmit(name, text, tmpValue);\r\n        }\r\n    }\r\n\r\n    toggleSelected() {\r\n        const { isSelected } = this.state;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            isSelected: !isSelected,\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const {className, onDelete, text, name, isEdit=false, onSubmit, isGlobal=false, readonly=true} = this.props;\r\n        const {tmpText, isSelected} = this.state;\r\n\r\n        let cn = 'tag d-flex rounded-pill h-gap-2 cursor-pointer';\r\n\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        if (isGlobal) {\r\n            cn += ` global`\r\n        }\r\n\r\n        if (isEdit) {\r\n            cn += ` edit`;\r\n        }\r\n\r\n        let editValue = tmpText ? tmpText : '';\r\n\r\n        let dirty = !!editValue\r\n        let value = editValue ? editValue : '';\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={\"d-grid\"} onClick={this.toggleSelected}>\r\n                    {\r\n                        !isEdit &&\r\n                        <div className={`tag-text display-4 text-nowrap align-self-center ${readonly ? 'px-4' : 'pl-4'}`}>\r\n                            {text}\r\n                        </div>\r\n                    }\r\n                    {\r\n                        isEdit &&\r\n                        <TextEdit\r\n                            className={\"pl-4 mr-4 align-self-center\"}\r\n                            placeholder={'Enter New Tag'}\r\n                            name={name}\r\n                            dirty={dirty}\r\n                            value={value}\r\n                            onSubmit={this.submit}/>\r\n                    }\r\n                </div>\r\n                {\r\n                    !readonly &&\r\n                    <div className={'delete-btn align-self-center pr-2'} onClick={this.delete}>\r\n                        <DeleteSVG className={\"tiny-image-container\"}/>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tag;\r\n","import React, {Component} from 'react';\r\nimport Card from \"../../../theme/widgets/card/card\";\r\nimport ScrollBar from \"../../../theme/widgets/scrollBar/scrollBar\";\r\nimport {LoadingIndicator} from \"../../../theme/widgets/loadingIndicator/loadingIndicator\";\r\nimport CheckBox from \"../../../theme/widgets/checkBox/checkBox\";\r\nimport {TooltipPortal} from \"../../../theme/widgets/tooltipPortal/tooltipPortal\";\r\nimport {DocumentInfoVM, SearchResultsProps, SearchResultsState} from \"../searchResultsModel\";\r\nimport Tag from \"../../../theme/widgets/tag/tag\";\r\n\r\nclass CardCollectionView extends Component<SearchResultsProps, SearchResultsState> {\r\n\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n    }\r\n\r\n    render() {\r\n        const { className, searchResults, onDocumentSelected, ...rest } = this.props;\r\n\r\n        let cn = \"cards pr-4\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        let itemDivs: {} | null | undefined = [];\r\n        if (searchResults) {\r\n            itemDivs = searchResults.map((item: DocumentInfoVM) => {\r\n                const {id, author, title, timestamp, private_tag=[], public_tag=[], selected, status, isUpdating=true, publication_date } = item;\r\n\r\n                let cn = 'position-relative result-item';\r\n                if (selected) {\r\n                    cn += ' selected shadow-lg'\r\n                }\r\n\r\n                return (\r\n                    <div key={id} className={cn}>\r\n                        <Card className={'position-absolute w-100 h-100'} selected={selected} onClick={() => onDocumentSelected(id)}\r\n                              header={\r\n                                  <div className={\"h-100 flex-fill align-self-stretch d-flex flex-column v-gap-2 p-4\"}>\r\n                                      <div className={'d-flex w-100 justify-content-between align-items-center'}>\r\n                                          <div className={'d-flex h-gap-3 align-items-start'}>\r\n                                              <TooltipPortal portalContent={\r\n                                                  <div>{title}</div>\r\n                                              }>\r\n                                                  <div className={\"font-weight-semi-bold overflow-hidden title text-break\"}>{title}</div>\r\n                                              </TooltipPortal>\r\n                                              {/*<div className={\"d-flex header-2 text datetime\"}>{status === \"\" ? timestamp.split(\",\")[0] : status}</div>*/}\r\n                                              <div className={\"d-flex text pt-2 header-2 datetime\"}>{publication_date !== \"No Publication Date\" ? publication_date: timestamp?.split(',')[0]}</div>\r\n                                          </div>\r\n                                          <CheckBox selected={selected} disabled={true}/>\r\n                                      </div>\r\n                                      <TooltipPortal className={'flex-fill'} portalContent={\r\n                                          <div>\r\n                                              {\r\n                                                  author &&\r\n                                                  <div>{author}</div>\r\n                                              }\r\n                                          </div>\r\n                                      }>\r\n                                          <div className={'flex-fill d-flex'}>\r\n                                              <div className={\"overflow-hidden text-break text header-2\"}>{author}</div>\r\n                                          </div>\r\n                                      </TooltipPortal>\r\n                                      <div className={'d-flex justify-content-start align-items-center overflow-hidden'}>\r\n                                          <div className={'d-flex align-items-center h-gap-2'}>\r\n                                              {\r\n                                                  private_tag && private_tag.map((tag: string) => {\r\n                                                      return tag.length > 0 && <Tag name={tag} text={tag} isEdit={false}/>\r\n                                                  })\r\n                                              }\r\n                                          </div>\r\n                                          <div className={'d-flex align-items-center h-gap-2'}>\r\n                                              {\r\n                                                  public_tag && public_tag.map((tag: string) => {\r\n                                                      return tag.length > 0 && <Tag name={tag} text={tag} isEdit={false} isGlobal={true}/>\r\n                                                  })\r\n                                              }\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                              }/>\r\n                        {\r\n                            isUpdating &&\r\n                            <div className={\"position-absolute\"} style={{top: '0', right: '0', bottom: '0', left:'0'}}>\r\n                                <LoadingIndicator/>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )\r\n            });\r\n        }\r\n\r\n        return (\r\n            <ScrollBar className={\"p-0\"} renderTrackHorizontal={false}>\r\n                <ul className={cn} {...rest}>\r\n                    {itemDivs}\r\n                </ul>\r\n            </ScrollBar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardCollectionView;\r\n","import React, {Component} from \"react\";\r\nimport './button.css';\r\nimport {TooltipPortal} from \"../tooltipPortal/tooltipPortal\";\r\nimport {ButtonProps, ButtonState, Justify_Content} from \"./buttonModel\";\r\n\r\nclass Button extends Component<ButtonProps, ButtonState> {\r\n\r\n    render() {\r\n\r\n        const {\r\n            className,\r\n            selected,\r\n            disabled,\r\n            text,\r\n            onClick,\r\n            orientation,\r\n            children,\r\n            justifyContent = Justify_Content['justify_content_center'],\r\n            tooltip,\r\n            light,\r\n            highlight,\r\n        } = this.props;\r\n\r\n        let cn = 'button user-select-none d-flex align-items-center rounded h-gap-2 p-2 header-3';\r\n\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        if (light) {\r\n            cn += ` light`;\r\n        }\r\n\r\n        if (highlight) {\r\n            cn += ` highlight`;\r\n        }\r\n\r\n        if (justifyContent) {\r\n            cn += ` ${justifyContent}`\r\n        }\r\n\r\n        if (orientation === 'vertical') {\r\n            cn += ` flex-column`;\r\n        }\r\n\r\n        if (selected) {\r\n            cn += ` selected`;\r\n        }\r\n\r\n        if (disabled) {\r\n            cn += ` disabled`;\r\n        }\r\n\r\n        const buttonDiv = (\r\n            <div className={cn} onClick={!disabled ? onClick : undefined}>\r\n                {children && children}\r\n                {text && <div>{text}</div>}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            tooltip ?\r\n                (\r\n                    <TooltipPortal light={true} portalContent={\r\n                        tooltip &&\r\n                        <div>{tooltip}</div>\r\n                    }>\r\n                        {buttonDiv}\r\n                    </TooltipPortal>\r\n                )\r\n                :\r\n                buttonDiv\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const ArrowRightSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"M 8,16 V 0 l 8,8 8,8 -8,8 -8,8 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const ArrowLeftSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"M 15.987395,24.00604 7.993555,16.01209 16.000005,8.00604 24.006445,0 v 16 c 0,8.8 -0.006,16 -0.0126,16 -0.007,0 -3.60984,-3.59728 -8.00645,-7.99396 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport GridTable from '@nadavshaar/react-grid-table';\r\nimport '../searchResultsPanel.css'\r\nimport CheckBox from \"../../../theme/widgets/checkBox/checkBox\";\r\nimport Button from \"../../../theme/widgets/button/button\";\r\nimport {ArrowRightSVG} from \"../../../theme/svgs/arrowRightSVG\";\r\nimport {ArrowLeftSVG} from \"../../../theme/svgs/arrowLeftSVG\";\r\nimport {LoadingIndicator} from \"../../../theme/widgets/loadingIndicator/loadingIndicator\";\r\nimport {TooltipPortal} from \"../../../theme/widgets/tooltipPortal/tooltipPortal\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport Tag from \"../../../theme/widgets/tag/tag\";\r\n\r\nclass TableCollectionView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        bindInstanceMethods(this);\r\n\r\n        this.state = {\r\n            columns: [],\r\n        }\r\n    }\r\n\r\n    _onRowClick({ rowIndex, data, column, isEdit, event }, tableManager) {\r\n\r\n        const { onDocumentSelected } = this.props;\r\n\r\n        if (onDocumentSelected && data) {\r\n            onDocumentSelected(data.id);\r\n        }\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { pageWidth } = this.props;\r\n\r\n        this._updateColumns(pageWidth);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { pageWidth } = this.props;\r\n\r\n        if (pageWidth !== prevProps.pageWidth) {\r\n            this._updateColumns(pageWidth);\r\n        }\r\n    }\r\n\r\n    _updateColumns(pageWidth) {\r\n        if (pageWidth === 'FULL') {\r\n            this.setState({\r\n                ...this.state,\r\n                columns: [\r\n                    {\r\n                        id: 1,\r\n                        field: 'selected',\r\n                        label: '',\r\n                        width: '3.13%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: CheckBoxCellRenderer,\r\n                        headerCellRenderer: CheckBoxHeaderCellRenderer,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        field: 'title',\r\n                        label: 'Title',\r\n                        width: '12.93%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: TitleCellRender\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        field: 'timestamp',\r\n                        label: 'Date',\r\n                        width: '6.13%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: DateCellRender\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        field: 'page_count',\r\n                        label: 'Pg. Count',\r\n                        width: '5.43%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: PageCountCellRender\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        field: 'author',\r\n                        label: 'Author',\r\n                        width: '26.07%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: AuthorCellRender\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        field: 'department',\r\n                        label: 'Dept',\r\n                        width: '6.74%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: CellRenderer\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        field: 'project',\r\n                        label: 'Project',\r\n                        width: '7.08%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: CellRenderer\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        field: 'public_tag',\r\n                        label: 'Public Tags',\r\n                        width: '16.23%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: PublicTagCellRender\r\n                    },\r\n                    {\r\n                        id: 9,\r\n                        field: 'private_tag',\r\n                        label: 'Private Tags',\r\n                        width: '16.23%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: PrivateTagCellRender\r\n                    },\r\n                ],\r\n            });\r\n        } else if (pageWidth === 'ONE_HALF') {\r\n            this.setState({\r\n                ...this.state,\r\n                columns: [\r\n                    {\r\n                        id: 0,\r\n                        field: 'selected',\r\n                        label: '',\r\n                        width: '4.91%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: CheckBoxCellRenderer,\r\n                        headerCellRenderer: CheckBoxHeaderCellRenderer,\r\n                    },\r\n                    {\r\n                        id: 1,\r\n                        field: 'title',\r\n                        label: 'Title',\r\n                        width: '20.32%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: TitleCellRender\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        field: 'timestamp',\r\n                        label: 'Date',\r\n                        width: '9.79%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: DateCellRender\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        field: 'page_count',\r\n                        label: 'Pg. Count',\r\n                        width: '7.73%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: PageCountCellRender\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        field: 'author',\r\n                        label: 'Author',\r\n                        width: '35.23%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: AuthorCellRender\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        field: 'public_tag',\r\n                        label: 'Public Tags',\r\n                        width: '22.01%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: PublicTagCellRender\r\n                    },\r\n                ],\r\n            });\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                columns: [\r\n                    {\r\n                        id: 0,\r\n                        field: 'selected',\r\n                        label: '',\r\n                        width: '11.58%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: CheckBoxCellRenderer,\r\n                        headerCellRenderer: CheckBoxHeaderCellRenderer,\r\n                    },\r\n                    {\r\n                        id: 1,\r\n                        field: 'title',\r\n                        label: 'Title',\r\n                        width: '36.35%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: TitleCellRender\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        field: 'page_count',\r\n                        label: 'Pg. Count',\r\n                        width: '18.24%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: PageCountCellRender\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        field: 'author',\r\n                        label: 'Author',\r\n                        width: '33.82%',\r\n                        sortable: false,\r\n                        resizable: false,\r\n                        cellRenderer: AuthorCellRender\r\n                    },\r\n\r\n                ],\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { searchResults, onDocumentSelected, pageWidth, ...rest } = this.props;\r\n\r\n        return (\r\n            <div className={'table h-100 w-100 position-relative'}>\r\n                <GridTable showSearch={false} className={'position-absolute h-100'}\r\n                           onRowClick={this._onRowClick} isPaginated={false} enableColumnsReorder={false}\r\n                           columns={this.state.columns}\r\n                           onColumnsChange={columns => undefined}//this is a very important function that makes everything work\r\n                           rows={searchResults} showColumnVisibilityManager={false} showRowsInformation={false}\r\n                components={{PageSize, Pagination}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst CellRenderer = ({ tableManager, value, field, data, column, colIndex, rowIndex }) => {\r\n\r\n    const { selected } = data;\r\n\r\n    let cn = 'rgt-cell-inner cursor-pointer d-flex align-items-center';\r\n\r\n    if (selected) {\r\n        cn += ` selected`;\r\n    }\r\n\r\n    return (\r\n        <div className={cn}>\r\n            <div className={\"cell-text text-nowrap overflow-hidden header-2\"}>{value}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PageCountCellRender = ({ tableManager, value, field, data, column, colIndex, rowIndex }) => {\r\n\r\n    const { selected } = data;\r\n\r\n    let cn = 'rgt-cell-inner cursor-pointer d-flex align-items-center';\r\n\r\n    if (selected) {\r\n        cn += ` selected`;\r\n    }\r\n\r\n    return (\r\n        <div className={cn}>\r\n            <div className={\"cell-text text-nowrap overflow-hidden header-2\"}>{value ? \"Pgs. \" + value : \"\"}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DateCellRender = ({ tableManager, value, field, data, column, colIndex, rowIndex }) => {\r\n\r\n    const { selected } = data;\r\n\r\n    let cn = 'rgt-cell-inner cursor-pointer d-flex align-items-center';\r\n\r\n    if (selected) {\r\n        cn += ` selected`;\r\n    }\r\n\r\n    return (\r\n        <div className={cn}>\r\n            <div className={\"cell-text text-nowrap overflow-hidden header-2\"}>{value.split(\",\")[0]}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TitleCellRender = ({ tableManager, value, field, data, column, colIndex, rowIndex }) => {\r\n\r\n    const { selected } = data;\r\n\r\n    let cn = 'rgt-cell-inner cursor-pointer d-flex align-items-center';\r\n\r\n    if (selected) {\r\n        cn += ` selected`;\r\n    }\r\n\r\n    return (\r\n        <div className={cn}>\r\n            <TooltipPortal portalContent={\r\n                <div>{value}</div>\r\n            }>\r\n                <div className={\"cell-text text-break overflow-hidden display-3 title\"}>{value}</div>\r\n            </TooltipPortal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AuthorCellRender = ({ tableManager, value, field, data, column, colIndex, rowIndex }) => {\r\n\r\n    const { selected } = data;\r\n\r\n    let cn = 'rgt-cell-inner cursor-pointer d-flex align-items-center';\r\n\r\n    if (selected) {\r\n        cn += ` selected`;\r\n    }\r\n\r\n    return (\r\n        <div className={cn}>\r\n            <TooltipPortal portalContent={\r\n                <div>\r\n                    {\r\n                        value &&\r\n                        <div>{value}</div>\r\n                    }\r\n                </div>\r\n            }>\r\n                <div className={\"cell-text text-break overflow-hidden header-2 author\"}>{value}</div>\r\n            </TooltipPortal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PublicTagCellRender = ({ tableManager, value, field, data, column, colIndex, rowIndex }) => {\r\n\r\n    const { selected } = data;\r\n\r\n    let cn = 'rgt-cell-inner cursor-pointer d-flex align-items-center h-gap-2 overflow-hidden';\r\n\r\n    if (selected) {\r\n        cn += ` selected`;\r\n    }\r\n\r\n    return (\r\n        <div className={cn}>\r\n            {\r\n                value && value.split(\",\").map(tag => {\r\n                    return tag.length > 0 && <Tag name={tag} text={tag} isEdit={false} isGlobal={true}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PrivateTagCellRender = ({ tableManager, value, field, data, column, colIndex, rowIndex }) => {\r\n\r\n    const { selected } = data;\r\n\r\n    let cn = 'rgt-cell-inner cursor-pointer d-flex align-items-center h-gap-2 overflow-hidden';\r\n\r\n    if (selected) {\r\n        cn += ` selected`;\r\n    }\r\n\r\n    return (\r\n        <div className={cn}>\r\n            {\r\n                value && value.split(\",\").map(tag => {\r\n                    return tag.length > 0 && <Tag name={tag} text={tag} isEdit={false}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CheckBoxCellRenderer = ({ tableManager, value, field, data, column, colIndex, rowIndex }) => {\r\n\r\n    const { selected, isUpdating=false } = data;\r\n\r\n    let cn = 'rgt-cell-inner cursor-pointer d-flex align-items-center';\r\n\r\n    if (selected) {\r\n        cn += ` selected`;\r\n    }\r\n\r\n    return (\r\n        isUpdating ?\r\n            <div className={'rgt-cell-inner d-flex align-items-center position-relative'}>\r\n                <div className={\"position-absolute\"} style={{top: '0', right: '0', bottom: '0', left:'0'}}>\r\n                    <LoadingIndicator/>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className={cn}>\r\n                <CheckBox selected={selected} disabled={true}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst CheckBoxHeaderCellRenderer = ({ tableManager, column }) => {\r\n\r\n    let cn = 'd-flex align-items-center';\r\n\r\n    return (\r\n        <div className={cn}>\r\n            <CheckBox/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PageSize = ({ tableManager }) => {\r\n    return (\r\n        <div/>\r\n    )\r\n}\r\n\r\nconst Pagination = ({ tableManager, page = tableManager.paginationApi.page,\r\n                        onChange = tableManager.paginationApi.setPage, }) => {\r\n    const {\r\n        config: {\r\n            additionalProps: { pagination: additionalProps = {} },\r\n        },\r\n        paginationApi: { totalPages },\r\n    } = tableManager;\r\n\r\n    return (\r\n        <div {...additionalProps} className={'d-flex flex-row'}>\r\n            <Button\r\n                className={'arrow-button'}\r\n                disabled={page - 1 < 1}\r\n                onClick={() => onChange(page - 1)}\r\n                orientation={'horizontal'} selected={false} text={''}\r\n            >\r\n                <ArrowLeftSVG className={\"nano-image-container\"}/>\r\n            </Button>\r\n\r\n            <div className=\"d-flex flex-row text-accent h-gap-2 pagination justify-content-center pt-1\">\r\n                {\r\n                    (page - 3 > 0 && totalPages === page || page - 3 > 0) &&\r\n                        <div onClick={() => onChange(1)}>...</div>\r\n                }\r\n                {\r\n                    totalPages === page && page - 2 > 0 &&\r\n                    <div onClick={() => onChange(page - 2)}>{page - 2}</div>\r\n                }\r\n                {\r\n                    page - 1 > 0 &&\r\n                    <div onClick={() => onChange(page - 1)}>{page - 1}</div>\r\n                }\r\n                <div className={'selected-page'}>{page}</div>\r\n                {\r\n                    totalPages > page &&\r\n                    <div onClick={() => onChange(page + 1)}>{page + 1}</div>\r\n                }\r\n                {\r\n                    page - 1 === 0 && totalPages > page + 1 &&\r\n                    <div onClick={() => onChange(page + 2)}>{page + 2}</div>\r\n                }\r\n                {\r\n                    (page - 1 === 0 && totalPages > page + 2 || totalPages > page + 2) &&\r\n                    <div onClick={() => onChange(totalPages)}>...</div>\r\n                }\r\n            </div>\r\n\r\n            <Button\r\n                className={'arrow-button'}\r\n                disabled={page + 1 > totalPages}\r\n                onClick={() => onChange(page + 1)}\r\n                orientation={'horizontal'} selected={false} text={''}>\r\n                <ArrowRightSVG className={\"nano-image-container\"}/>\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableCollectionView;\r\n","import './listItem.css';\r\nimport {ListItemProps} from './listSystemModel';\r\nimport React from \"react\";\r\n\r\n\r\nclass ListItem extends React.Component<ListItemProps> {\r\n    render() {\r\n        const {className, children, onClick, selected, ...rest} = this.props;\r\n\r\n        let cn = \"listItem d-flex\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        if (selected) {\r\n            cn += ` selected`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn} {...rest} onClick={onClick}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const InfoSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d={\"m 14.575183,31.952222 c -4.7662395,-0.39259 -9.2566095,-3.06504 -11.9271195,-7.09845 -1.38922,-2.09822 -2.21251003,-4.31984 -2.55919003,-6.90589 -0.0969,-0.72319 -0.1201,-2.62548 -0.0419,-3.44111 C 0.58587347,8.8872118 3.9934435,3.9930518 9.0593035,1.5627218 10.683333,0.78360175 12.360583,0.30251175 14.231433,0.07920175 c 0.82034,-0.0979 2.66456,-0.097 3.50924,0.002 3.3033,0.38615 6.26062,1.67523005 8.72082,3.80135005 0.58883,0.50887 1.51609,1.47441 2.02329,2.10681 3.25822,4.0625102 4.32985,9.4383802 2.88498,14.4726902 -0.68377,2.38242 -1.94158,4.58794 -3.6963,6.48131 -2.43122,2.62332 -5.80803,4.38832 -9.38511,4.90546 -0.96015,0.1388 -2.69775,0.18732 -3.71319,0.10368 z m 2.55697,-3.00362 c 3.03943,-0.23525 6.03566,-1.65752 8.17986,-3.88289 2.00373,-2.07958 3.18581,-4.5264 3.59108,-7.43327 0.0903,-0.64765 0.10229,-2.48698 0.0204,-3.12383 -0.31587,-2.45563 -1.18973,-4.5734502 -2.6926,-6.5256102 -0.41721,-0.54193 -1.6217,-1.75658 -2.17291,-2.19122 -1.84569,-1.45539 -4.06278,-2.38854 -6.42849,-2.70569 -0.74378,-0.0997 -2.13196,-0.12006 -2.8627,-0.042 -1.47672,0.15782 -2.72331,0.47629 -3.90256,0.997 -1.6115095,0.71158 -2.8715295,1.57024 -4.0772195,2.77849 -1.82134,1.82522 -3.051,4.1077602 -3.54417,6.5787902 -0.20687,1.03655 -0.22861,1.28485 -0.22859,2.61128 2e-5,1.09569 0.011,1.30935 0.0958,1.86618 0.45721,3.00193 1.86518,5.66115 4.0777,7.70145 1.92904,1.7789 4.2872495,2.90285 6.9186895,3.29754 0.90731,0.13609 1.90584,0.16043 3.02575,0.0738 z m -1.68799,-5.48664 c -0.28765,-0.12075 -0.44543,-0.23312 -0.59597,-0.42443 -0.18321,-0.23282 -0.28482,-0.46164 -0.33078,-0.74487 -0.0569,-0.35065 -0.057,-6.61644 -4e-5,-6.96706 0.0811,-0.49991 0.39754,-0.92627 0.84206,-1.13464 0.19961,-0.0936 0.28359,-0.10832 0.61649,-0.10832 0.34827,0 0.41083,0.0122 0.64911,0.12669 0.2838,0.13636 0.48024,0.30806 0.63822,0.55786 0.22094,0.34937 0.21635,0.25646 0.20445,4.13064 l -0.011,3.58264 -0.12147,0.23974 c -0.15983,0.31544 -0.4149,0.57218 -0.70126,0.70584 -0.33461,0.15618 -0.86517,0.1722 -1.18981,0.0359 z m 0.31246,-11.79663 c -0.46603,-0.0754 -0.94425,-0.43141 -1.12735,-0.83919 -0.33372,-0.74323 -0.002,-1.6470602 0.73014,-1.9903102 0.19963,-0.0936 0.28361,-0.10833 0.61651,-0.10833 0.34827,0 0.41083,0.0122 0.64911,0.1267 0.54596,0.2623 0.85045,0.74025 0.85152,1.3365702 0.002,0.92506 -0.81089,1.62167 -1.71993,1.47456 z\"}/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport ListItem from \"../../../theme/widgets/listItem/listItem\";\r\nimport ScrollBar from \"../../../theme/widgets/scrollBar/scrollBar\";\r\nimport CheckBox from \"../../../theme/widgets/checkBox/checkBox\";\r\nimport {LoadingIndicator} from \"../../../theme/widgets/loadingIndicator/loadingIndicator\";\r\nimport {TooltipPortal} from \"../../../theme/widgets/tooltipPortal/tooltipPortal\";\r\nimport {InfoSVG} from \"../../../theme/svgs/infoSVG\";\r\nimport {DocumentInfoVM, SearchResultsProps, SearchResultsState} from \"../searchResultsModel\";\r\nimport Tag from \"../../../theme/widgets/tag/tag\";\r\nimport Card from \"../../../theme/widgets/card/card\";\r\n\r\nclass ListCollectionView extends Component<SearchResultsProps, SearchResultsState> {\r\n\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n    }\r\n\r\n    render() {\r\n        const { className, searchResults, onDocumentSelected, pageWidth, userLookup, ...rest } = this.props;\r\n\r\n        let cn = \"list v-gap-2\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        let itemDivs: {} | null | undefined = [];\r\n        if (searchResults) {\r\n            itemDivs = searchResults.map((item: DocumentInfoVM) => {\r\n                const {id, author, title, timestamp, selected, status, publication_date, public_tag, private_tag, type,\r\n                    department, purpose, project, page_count, isUpdating, file_name, uploadedBy_id, primary_sme_email,\r\n                    primary_sme_name, primary_sme_phone, secondary_sme_email, secondary_sme_name, secondary_sme_phone} = item;\r\n\r\n                let user = null;\r\n                if (userLookup) {\r\n                    user = userLookup[uploadedBy_id || \"\"]\r\n                }\r\n                let uploaded_by=\"Unknown\";\r\n                if (user) {\r\n                    if (user.first_name) {\r\n                        uploaded_by = user.first_name;\r\n                    }\r\n                    if (user.last_name) {\r\n                        uploaded_by += ` ${user.last_name}`;\r\n                    }\r\n                }\r\n\r\n                let cn = 'result-item d-flex flex-row h-gap-3 justify-content-start align-items-start mr-4 overflow-hidden';\r\n                if (selected) {\r\n                    cn += ' selected shadow-lg'\r\n                }\r\n\r\n                return (\r\n                    <div key={id}>\r\n                        <ListItem key={id} selected={selected} className={cn} onClick={() => onDocumentSelected(id)}>\r\n                            <CheckBox className={'mt-1'} selected={selected} disabled={true}/>\r\n                            <div className={\"flex-fill align-self-stretch d-flex flex-column v-gap-3\"}>\r\n                                <div className={\"d-flex w-100 flex-nowrap h-gap-2 justify-content-between\"}>\r\n                                    <TooltipPortal portalContent={\r\n                                        <div>{title}</div>\r\n                                    }>\r\n                                        <div className={\"font-weight-semi-bold title text-left text-break overflow-hidden\"}>{title}</div>\r\n                                    </TooltipPortal>\r\n                                    {\r\n                                        pageWidth === 'FULL' &&\r\n                                        <div className={\"d-flex flex-nowrap h-gap-2 justify-content-end\"}>\r\n                                            {\r\n                                                public_tag && public_tag.map((tag: string) => {\r\n                                                    return tag.length > 0 && <Tag name={tag} text={tag} isEdit={false} isGlobal={true}/>\r\n                                                })\r\n                                            }\r\n                                            {\r\n                                                private_tag && private_tag.map((tag: string) => {\r\n                                                    return tag.length > 0 && <Tag name={tag} text={tag} isEdit={false}/>\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n\r\n                                {\r\n                                    file_name &&\r\n                                    <div className={\"header-2 text\"}>{file_name}</div>\r\n                                }\r\n\r\n                                {\r\n                                    pageWidth !== 'FULL' &&\r\n                                    <div className={\"d-flex flex-nowrap h-gap-2\"}>\r\n                                        {\r\n                                            public_tag && public_tag.map((tag: string) => {\r\n                                                return tag.length > 0 && <Tag name={tag} text={tag} isEdit={false} isGlobal={true}/>\r\n                                            })\r\n                                        }\r\n                                        {\r\n                                            private_tag && private_tag.map((tag: string) => {\r\n                                                return tag.length > 0 && <Tag name={tag} text={tag} isEdit={false}/>\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                }\r\n\r\n                                <div className={`d-flex flex-nowrap h-gap-2 header-2 text-center text-nowrap justify-content-start text ${pageWidth !== 'FULL' ? 'collapsed' : ''}`}>\r\n                                    {\r\n                                        publication_date &&\r\n                                        <div className={'d-flex h-gap-2 pt-2'}>\r\n                                            <div>Publication: {publication_date.split(\",\")[0]}</div>\r\n                                            <div>|</div>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        timestamp &&\r\n                                        <div className={'d-flex h-gap-2 pt-2'}>\r\n                                            <div>Upload: {timestamp.split(\",\")[0]}</div>\r\n                                            <div>|</div>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        type &&\r\n                                        <div className={'d-flex h-gap-2 pt-2'}>\r\n                                            <div>{type}</div>\r\n                                            <div>|</div>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        page_count &&\r\n                                        <div className={\"d-flex pt-2 h-gap-1\"}>\r\n                                            <div className={\"font-weight-semi-bold\"}>Page Count:</div>\r\n                                            <div>{page_count}</div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <TooltipPortal portalContent={\r\n                                    <div>\r\n                                        {\r\n                                            author &&\r\n                                            <div>{author}</div>\r\n                                        }\r\n                                    </div>\r\n                                }>\r\n                                    {\r\n                                        author &&\r\n                                        <div className={`header-2 overflow-hidden text ${pageWidth !== 'FULL' ? 'collapsed' : ''}`}>Author: {author}</div>\r\n                                    }\r\n                                </TooltipPortal>\r\n\r\n                                <Card className={`d-flex flex-column overflow-hidden ${pageWidth !== \"ONE_THIRD\" ? \"collapsed\" : \"\"}`}\r\n                                    header={\r\n                                        <div className={\"d-flex info-button justify-content-start\"}>\r\n                                            <div className={'d-flex h-gap-3 align-items-center'}>\r\n                                                <InfoSVG className={'small-image-container'}/>\r\n                                                <div className={'header-2'}>More Info</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    body={\r\n                                        <div className={'d-flex pt-5 text-info'}>\r\n                                            <div className={'property-grid'}>\r\n                                                <div className={'align-self-center justify-self-end header-3'}>UPLOADED BY</div>\r\n                                                <div className={'align-self-center justify-self-end header-3'}>PRIMARY SME</div>\r\n                                                {\r\n                                                    pageWidth === \"ONE_THIRD\" &&\r\n                                                    <div className={'align-self-center justify-self-end header-3'}>PHONE</div>\r\n                                                }\r\n                                                {\r\n                                                    pageWidth === \"ONE_THIRD\" &&\r\n                                                    <div className={'align-self-center justify-self-end header-3'}>EMAIL</div>\r\n                                                }\r\n                                                <div className={'align-self-center justify-self-end header-3'}>SECONDARY SME</div>\r\n                                                {\r\n                                                    pageWidth === \"ONE_THIRD\" &&\r\n                                                    <div className={'align-self-center justify-self-end header-3'}>PHONE</div>\r\n                                                }\r\n                                                {\r\n                                                    pageWidth === \"ONE_THIRD\" &&\r\n                                                    <div className={'align-self-center justify-self-end header-3'}>EMAIL</div>\r\n                                                }\r\n                                                <div className={'align-self-center justify-self-end header-3'}>DEPARTMENT</div>\r\n                                                <div className={'align-self-center justify-self-end header-3'}>PURPOSE</div>\r\n                                                <div className={'align-self-center justify-self-end header-3'}>PROJECT</div>\r\n                                                <div className={'align-self-center justify-self-end header-3'}>STATUS</div>\r\n                                                <div className={'align-self-center header-2'}>{uploaded_by}</div>\r\n                                                <div className={'align-self-center header-2'}>{primary_sme_name}</div>\r\n                                                {\r\n                                                    pageWidth === \"ONE_THIRD\" &&\r\n                                                    <div className={'align-self-center header-2'}>{primary_sme_phone}</div>\r\n                                                }\r\n                                                {\r\n                                                    pageWidth === \"ONE_THIRD\" &&\r\n                                                    <div className={'align-self-center header-2'}>{primary_sme_email}</div>\r\n                                                }\r\n                                                <div className={'align-self-center header-2'}>{secondary_sme_name}</div>\r\n                                                {\r\n                                                    pageWidth === \"ONE_THIRD\" &&\r\n                                                    <div className={'align-self-center header-2'}>{secondary_sme_phone}</div>\r\n                                                }\r\n                                                {\r\n                                                    pageWidth === \"ONE_THIRD\" &&\r\n                                                    <div className={'align-self-center header-2'}>{secondary_sme_email}</div>\r\n                                                }\r\n                                                <div className={'align-self-center header-2'}>{department}</div>\r\n                                                <div className={'align-self-center header-2'}>{purpose}</div>\r\n                                                <div className={'align-self-center header-2'}>{project}</div>\r\n                                                <div className={'align-self-center header-2'}>{status}</div>\r\n                                            </div>\r\n                                            {\r\n                                                pageWidth !== \"ONE_THIRD\" &&\r\n                                                <div className={'property-grid-2 custom-margin'}>\r\n                                                    <div className={'align-self-center justify-self-end header-3'}>PHONE</div>\r\n                                                    <div className={'align-self-center justify-self-end header-3'}>PHONE</div>\r\n                                                    <div className={'align-self-center header-2'}>{primary_sme_phone}</div>\r\n                                                    <div className={'align-self-center header-2'}>{secondary_sme_phone}</div>\r\n                                                </div>\r\n                                            }\r\n                                            {\r\n                                                pageWidth !== \"ONE_THIRD\" &&\r\n                                                <div className={'property-grid-2 custom-margin'}>\r\n                                                    <div className={'align-self-center justify-self-end header-3'}>EMAIL</div>\r\n                                                    <div className={'align-self-center justify-self-end header-3'}>EMAIL</div>\r\n                                                    <div className={'align-self-center header-2'}>{primary_sme_email}</div>\r\n                                                    <div className={'align-self-center header-2'}>{secondary_sme_email}</div>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                />\r\n\r\n                            </div>\r\n                        </ListItem>\r\n                        {\r\n                            isUpdating &&\r\n                            <div className={\"position-absolute mr-4\"} style={{top: '0', right: '0', bottom: '0', left:'0'}}>\r\n                                <LoadingIndicator/>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )\r\n            });\r\n        }\r\n\r\n        return (\r\n            <ScrollBar renderTrackHorizontal={false} className={\"p-0\"}>\r\n                <div className={cn} {...rest}>\r\n                    {itemDivs}\r\n                </div>\r\n            </ScrollBar>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListCollectionView;\r\n","import {SearchBannerMenuItem, SearchParamInfo} from \"../../model\";\r\nimport {RepoItem} from \"../../framework/services/repoService/repoItem\";\r\nimport {nameOf, Nullable} from \"../../framework/extras/typeUtils\";\r\nimport {ParamType} from \"../../model\";\r\nimport {forEachKVP} from \"../../framework.visual/extras/utils/collectionUtils\";\r\nimport {ReferenceType} from \"../../model\";\r\nimport {getDateWithoutTime} from \"../../framework.visual/extras/utils/timeUtils\";\r\nimport {SortPropertyInfo} from \"../../model\";\r\nimport {IStorage} from \"../../framework/api\";\r\nimport {IScenarioService} from \"../../api\";\r\nimport {Plugin} from \"../../framework/extras/plugin\";\r\nimport {MenuItem} from \"../../framework/model/menuItem\";\r\nimport {GraphSVG} from \"../../visual/theme/svgs/graphSVG\";\r\nimport {SystemToolMenuItem} from \"../../visual/model/systemToolMenuItem\";\r\nimport {UploadSVG} from \"../../visual/theme/svgs/uploadSVG\";\r\nimport {TagsSVG} from \"../../visual/theme/svgs/tagsSVG\";\r\nimport {StatsSVG} from \"../../visual/theme/svgs/statsSVG\";\r\nimport {ProfileSVG} from \"../../visual/theme/svgs/profileSVG\";\r\nimport {SearchResultsMenuItem} from \"../../visual/model/searchResultsMenuItem\";\r\nimport {CardsSVG} from \"../../visual/theme/svgs/cardsSVG\";\r\nimport {TableSVG} from \"../../visual/theme/svgs/tableSVG\";\r\nimport {ListSVG} from \"../../visual/theme/svgs/listSVG\";\r\nimport CardCollectionView from \"../../visual/components/searchResultsPanel/renderers/cardCollectionView\";\r\nimport TableCollectionView from \"../../visual/components/searchResultsPanel/renderers/tableCollectionView\";\r\nimport ListCollectionView from \"../../visual/components/searchResultsPanel/renderers/listCollectionView\";\r\n\r\nexport class ScenarioService extends Plugin implements IScenarioService {\r\n    public static readonly class: string = 'ScenarioService';\r\n    private dataAppStore: Nullable<IStorage> = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(ScenarioService.class);\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        this.runScenario();\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    configure() {\r\n        super.configure();\r\n    }\r\n\r\n    setDataAppStore(dataStore: IStorage) {\r\n        this.dataAppStore = dataStore;\r\n    }\r\n\r\n    createScenarioItem<T extends RepoItem>(id: string, ctor: {new(id: string): T}, args: Record<string, any>) {\r\n        const repoItem = new ctor(id);\r\n\r\n        const dictionary: Record<string, any> = repoItem;\r\n\r\n        forEachKVP(args, (key: string, value: any) => {\r\n            if (key in repoItem) {\r\n                dictionary[key] = value;\r\n            }\r\n        });\r\n\r\n        this.addOrUpdateRepoItem(repoItem);\r\n    }\r\n\r\n    createSearchParamInfo(id: string, type: ParamType, value: any, options: any, optionsId: Nullable<string>, title: string, visible: boolean, advanced: boolean, dirty: boolean) {\r\n        this.createScenarioItem(id, SearchParamInfo, {\r\n            [nameOf<SearchParamInfo>('type')]: type,\r\n            [nameOf<SearchParamInfo>('value')]: value,\r\n            [nameOf<SearchParamInfo>('options')]: options,\r\n            [nameOf<SearchParamInfo>('optionsId')]: optionsId,\r\n            [nameOf<SearchParamInfo>('title')]: title,\r\n            [nameOf<SearchParamInfo>('visible')]: visible,\r\n            [nameOf<SearchParamInfo>('advanced')]: advanced,\r\n            [nameOf<SearchParamInfo>('dirty')]: dirty,\r\n        })\r\n    }\r\n\r\n    createMenuItem<T extends MenuItem>(ctor: {new(id: string): T}, id:string, title: string, selected: boolean, graphic: any, context: any = null) {\r\n        this.createScenarioItem(id, ctor, {\r\n            [nameOf<T>('title')]: title,\r\n            [nameOf<T>('selected')]: selected,\r\n            [nameOf<T>('graphic')]: graphic,\r\n            [nameOf<T>('context')]: context\r\n        })\r\n    }\r\n\r\n    createSortPropertyInfo(id: string, title: string, value: string) {\r\n        this.createScenarioItem(id, SortPropertyInfo, {\r\n            [nameOf<SearchParamInfo>('title')]: title,\r\n            [nameOf<SearchParamInfo>('value')]: value,\r\n        })\r\n    }\r\n\r\n    createSearchParamsInfos() {\r\n        this.createSearchParamInfo('search_request', ParamType.STRING, '', null, null, 'Include Text', false, false, false);\r\n        this.createSearchParamInfo('exclude_search_request', ParamType.STRING, '', null, null, 'Exclude Text', true, true, false);\r\n        this.createSearchParamInfo('sort', ParamType.OPTIONS, 'author_ascending', null, null, 'Sort', false, false, false);\r\n        this.createSearchParamInfo('offset', ParamType.STRING, '', null, null, 'Offset', false, false, false);\r\n        this.createSearchParamInfo('limit', ParamType.STRING, '', null, null, 'Limit', false, false, false);\r\n        this.createSearchParamInfo('title', ParamType.STRING, '', null, null, 'Title', true, true, false);\r\n        this.createSearchParamInfo('author', ParamType.STRING, '', null, null, 'Title', true, true, false);\r\n        this.createSearchParamInfo('department', ParamType.OPTIONS, '', {}, ReferenceType.DEPARTMENT, 'Department', true, false, false);\r\n        this.createSearchParamInfo('purpose', ParamType.OPTIONS, '', {}, ReferenceType.PURPOSE, 'Purpose', true, false, false);\r\n        this.createSearchParamInfo('projects', ParamType.STRING, '', null, null, 'Projects', true, true, false);\r\n        this.createSearchParamInfo('tags', ParamType.STRING, '', null, null, 'Tags', true, false, false);\r\n        this.createSearchParamInfo('upload_date', ParamType.DATE_RANGE,\r\n            {\r\n                start_date: getDateWithoutTime(new Date()),\r\n                end_date: getDateWithoutTime(new Date())\r\n            },\r\n            null, null, 'Upload Date', true, true, false);\r\n\r\n        this.createSearchParamInfo('publication_date', ParamType.DATE_RANGE,\r\n            {\r\n                start_date: getDateWithoutTime(new Date()),\r\n                end_date: getDateWithoutTime(new Date())\r\n            },\r\n            null, null, 'Publication Date', true, true, false);\r\n    }\r\n\r\n    createSortPropertyInfos() {\r\n        this.createSortPropertyInfo('author_ascending', 'Author Ascending', 'author_ascending');\r\n        this.createSortPropertyInfo('author_descending', 'Author Descending', '-author_descending');\r\n        this.createSortPropertyInfo('title_ascending', 'Title Ascending', 'title_ascending');\r\n        this.createSortPropertyInfo('title_descending', 'Title Descending', '-title_descending');\r\n        this.createSortPropertyInfo('publication_date_ascending', 'Publication Date Ascending', 'publication_date_ascending');\r\n        this.createSortPropertyInfo('publication_date_descending', 'Publication Date Descending', '-publication_date_descending');\r\n        this.createSortPropertyInfo('upload_date_ascending', 'Upload Date Ascending', 'upload_date_ascending');\r\n        this.createSortPropertyInfo('upload_date_descending', 'Upload Date Descending', '-upload_date_descending');\r\n    }\r\n\r\n    createSearchBannerTools() {\r\n        this.createMenuItem(SearchBannerMenuItem, 'components/searchGraphsPanel', 'Graphs', false, GraphSVG);\r\n    }\r\n\r\n    createSystemTools() {\r\n        this.createMenuItem(SystemToolMenuItem, 'components/uploadPanel', 'Upload', false, UploadSVG);\r\n        this.createMenuItem(SystemToolMenuItem, 'components/tagsPanel', 'Tags', false, TagsSVG);\r\n        // this.createMenuItem(SystemToolMenuItem, 'components/statsPanel', 'Stats', false, StatsSVG);\r\n        this.createMenuItem(SystemToolMenuItem, 'components/profilePanel', 'Profile', false, ProfileSVG);\r\n    }\r\n\r\n    createSearchResultsTools() {\r\n        this.createMenuItem(SearchResultsMenuItem, 'cardViewId', 'Card', false, CardsSVG, CardCollectionView);\r\n        this.createMenuItem(SearchResultsMenuItem, 'tableViewId', 'Table', false, TableSVG, TableCollectionView);\r\n        this.createMenuItem(SearchResultsMenuItem, 'listViewId', 'List', false, ListSVG, ListCollectionView);\r\n    }\r\n\r\n    runScenario() {\r\n        this.createSearchParamsInfos();\r\n        this.createSortPropertyInfos();\r\n        this.createSearchBannerTools();\r\n        this.createSystemTools();\r\n        this.createSearchResultsTools()\r\n    }\r\n}\r\n","import {IConverter} from \"../../../api\";\r\nimport {LoggablePlugin} from \"../../../framework/extras/loggablePlugin\";\r\nimport {ILoggablePlugin, ILogger, IRepositoryService} from \"../../../framework/api\";\r\nimport {bindInstanceMethods, Nullable} from \"../../../framework/extras/typeUtils\";\r\nimport {IRepoItem} from \"../../../framework/services/repoService/repoItem\";\r\n\r\nexport abstract class Converter<FromType, ToType> extends LoggablePlugin implements IConverter<FromType, ToType>, ILoggablePlugin {\r\n    protected className: string;\r\n    protected logger: Nullable<ILogger>;\r\n    private repoService: Nullable<IRepositoryService> = null;\r\n\r\n    constructor(className: string, logger: Nullable<ILogger>) {\r\n        super();\r\n        bindInstanceMethods(this);\r\n\r\n        this.logger = logger;\r\n        this.className = className;\r\n    }\r\n\r\n    abstract convert(fromData: FromType, reject?: any, options?: any): ToType;\r\n\r\n\r\n    getLogger(): Nullable<ILogger> {\r\n        return this.logger;\r\n    }\r\n\r\n    getClassName(): string {\r\n        return this.className;\r\n    }\r\n\r\n    setRepositoryService(repoService: Nullable<IRepositoryService>): void {\r\n        this.repoService = repoService;\r\n    }\r\n\r\n    protected getRepoItem<T extends IRepoItem>(className: string, id: string): Nullable<T> {\r\n        let result: Nullable<T> = null;\r\n\r\n        if (this.repoService != null) {\r\n            result = this.repoService.getRepoItem<T>(className, id);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected getRepoItems<T extends IRepoItem>(className: string, includeSubTypes: boolean = false, ...ids: string[]): Record<string, T> {\r\n        let result: Record<string, T> = {};\r\n\r\n        if (this.repoService != null) {\r\n            result = this.repoService.getAll<T>(className, includeSubTypes, ...ids);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","import {Converter} from \"../../../common/converters/converter\";\r\n\r\nexport class GetUserArrayRequestConverter extends Converter<any,any>{\r\n    convert(uiRequestData?: string): any {\r\n        return `/search?search_keyword=${uiRequestData}`;\r\n    }\r\n}\r\n","import {IConverter} from \"../../../../api\";\r\nimport {forEachKVP} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {UserInfo} from \"../../../../model\";\r\nimport {Converter} from \"../../../common/converters/converter\";\r\nimport {Nullable} from \"../../../../framework/extras/typeUtils\";\r\n\r\nexport class GetUserArrayResponseConverter extends Converter<any,UserInfo[]> {\r\n\r\n    private _singleConverter!: IConverter<any, Nullable<UserInfo>>;\r\n\r\n    convert(fromData: any, reject?: any): UserInfo[] {\r\n        const result: UserInfo[] = [];\r\n\r\n        if (Array.isArray(fromData)) {\r\n            forEachKVP(fromData, (itemKey:string, itemValue: string[]) => {\r\n                let model = this._singleConverter.convert(itemValue, reject);\r\n\r\n                if (model != null) {\r\n                    result.push(model);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (fromData === 'User waiting for approval by KM Admin') {\r\n                window.alert(fromData);\r\n            }\r\n            reject('Error while parsing array of users. Expected Array. Receive the following: <' + fromData + '>');\r\n        }\r\n\r\n\r\n        return result;\r\n    }\r\n\r\n    get singleConverter(): IConverter<any, Nullable<UserInfo>> {\r\n        return this._singleConverter;\r\n    }\r\n\r\n    set singleConverter(value: IConverter<any, Nullable<UserInfo>>) {\r\n        this._singleConverter = value;\r\n    }\r\n}\r\n","import {getValueOrDefault, nameOf, Nullable} from \"../../../../framework/extras/typeUtils\";\r\nimport {UserInfo} from \"../../../../model\";\r\nimport {parseServerReferenceValueOrDefault} from \"../../../common/converters/parsingUtils\";\r\nimport {Converter} from \"../../../common/converters/converter\";\r\n\r\nexport class GetUserResponseConverter extends Converter<any, Nullable<UserInfo>>{\r\n    convert(fromData: any, reject?: any): Nullable<UserInfo> {\r\n        // console.log(\"converter \" + JSON.stringify(fromData))\r\n        const item = fromData;\r\n\r\n        const userInfo: UserInfo = new UserInfo(getValueOrDefault(item, 'user_id', ''));\r\n\r\n\r\n        let department = '';\r\n        if (item['dept_id']) {\r\n            department = getValueOrDefault(item, 'dept_id', '');\r\n        }\r\n        else if (item['department']) {\r\n            department = parseServerReferenceValueOrDefault(item, 'department', '');\r\n        }\r\n\r\n        userInfo.dod_id = getValueOrDefault(item, 'dod_id', 0);\r\n        userInfo.first_name = getValueOrDefault(item, 'first_name', '');\r\n        userInfo.last_name = getValueOrDefault(item, 'last_name', '');\r\n        userInfo.email_address = getValueOrDefault(item, 'email_address', '');\r\n        userInfo.phone_number = getValueOrDefault(item, 'phone_number', '');\r\n        userInfo.department = department;\r\n        userInfo.preferred_results_view = getValueOrDefault(item, 'preferred_results_view', '');\r\n        userInfo.account_status = getValueOrDefault(item, 'account_status', '');\r\n        userInfo.approved_by = getValueOrDefault(item, 'approved_by', '');\r\n        userInfo.isUpdating = false;\r\n        userInfo.date_approved = getValueOrDefault(item, 'date_approved', '');\r\n\r\n        return userInfo;\r\n    }\r\n}\r\n","import {ReferenceInfo} from \"../../../model\";\r\nimport {forEachKVP} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {repoService} from \"../../serviceComposition\";\r\nimport {Nullable} from \"../../../framework/extras/typeUtils\";\r\n\r\nexport const parseServerReferenceValueOrDefault = (object: any, propertyName: string, defaultValue: any) => {\r\n    let result = defaultValue;\r\n\r\n    let title = object[propertyName];\r\n    if (title) {\r\n        let titleUpper = title.toUpperCase();\r\n\r\n        let referenceInfo: Nullable<ReferenceInfo> = null;\r\n\r\n        let items = repoService.getAll(ReferenceInfo.class);\r\n        forEachKVP(items, (itemKey: string, itemValue: ReferenceInfo) => {\r\n            if (itemValue.title.toUpperCase() === titleUpper) {\r\n                referenceInfo = itemValue;\r\n                result = referenceInfo.id;\r\n                return true;\r\n            }\r\n        })\r\n\r\n        if (!referenceInfo) {\r\n            let referenceInfos = repoService.getAll<ReferenceInfo>(ReferenceInfo.class);\r\n            console.log(`Reference type with title '${titleUpper}' not found in ${JSON.stringify(referenceInfos)}`)\r\n        }\r\n\r\n    }\r\n    else {\r\n        console.log(`No ${propertyName} has been assigned for object ${JSON.stringify(object)}`)\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport const parseClientReferenceValueOrDefault = (state: any, modifiedDocument:any, latestDocument:any, propertyName: string, defaultValue: any) => {\r\n    let result = defaultValue;\r\n\r\n    let value: string = modifiedDocument[propertyName] ? modifiedDocument[propertyName] : latestDocument[propertyName]\r\n\r\n    if (value) {\r\n        let repoItem: Nullable<ReferenceInfo> = repoService.getRepoItem(ReferenceInfo.class, modifiedDocument[propertyName]);\r\n        if (repoItem) {\r\n            result = repoItem.title;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport const parseClientTagValueOrDefault = (state: any, modifiedDocument:any, latestDocument:any, propertyName: string, defaultValue: any) => {\r\n    let result = defaultValue;\r\n\r\n    if (modifiedDocument[propertyName]) {\r\n        let repoItem: Nullable<ReferenceInfo> = repoService.getRepoItem(ReferenceInfo.class, modifiedDocument[propertyName]);\r\n        if (repoItem) {\r\n            result = repoItem.title;\r\n        }\r\n    }\r\n    else if (latestDocument[propertyName]) {\r\n        result = latestDocument[propertyName]\r\n    }\r\n\r\n    return result;\r\n}\r\n","import {nameOf} from \"../../../../framework/extras/typeUtils\";\r\nimport {ReferenceInfo, ReferenceType, UserInfo} from \"../../../../model\";\r\nimport {Converter} from \"../../../common/converters/converter\";\r\nimport {getDateWithoutTime} from \"../../../../framework.visual/extras/utils/timeUtils\";\r\nimport {repoService} from \"../../../serviceComposition\";\r\nimport {forEach} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\n\r\nexport class CreateUserRequestConverter extends Converter<any,any>{\r\n\r\n\r\n    convert(fromData: { user: UserInfo}): any {\r\n\r\n        const { user={}, } = fromData;\r\n\r\n        const dictionary: Record<string, any> = user;\r\n\r\n        const getTextValueOrDefault = (propertyName: string, defaultValue: any) => {\r\n            let result = defaultValue;\r\n            if (dictionary[propertyName]) {\r\n                result =  dictionary[propertyName];\r\n            }\r\n            return result;\r\n        }\r\n\r\n        // let roles = [];\r\n        // if (dictionary['role']) {\r\n        //     roles.push(dictionary['role']);\r\n        // }\r\n        // else {\r\n        //     let references = repoService.getAll(ReferenceInfo.class);\r\n        //     forEach(references, (referenceInfo: ReferenceInfo) => {\r\n        //         if (referenceInfo.type === ReferenceType.ROLE && referenceInfo.title.toUpperCase() == 'VIEWER') {\r\n        //             roles.push(referenceInfo.id)\r\n        //             return true;\r\n        //         }\r\n        //     });\r\n        // }\r\n\r\n        let serverUser = {\r\n            dod_id: getTextValueOrDefault(nameOf<UserInfo>('dod_id'), '-1'),\r\n            first_name: getTextValueOrDefault(nameOf<UserInfo>('first_name'), ''),\r\n            middle_initial: '',\r\n            last_name: getTextValueOrDefault(nameOf<UserInfo>('last_name'), ''),\r\n            email_address: getTextValueOrDefault(nameOf<UserInfo>('email_address'), ''),\r\n            phone_number: getTextValueOrDefault(nameOf<UserInfo>('phone_number'), ''),\r\n            dept_id: 1004,\r\n            preferred_results_view: '',\r\n            account_status: getTextValueOrDefault(nameOf<UserInfo>('account_status'), 'inactive'),\r\n            // roles: [1021],\r\n            approved_by: getTextValueOrDefault(nameOf<UserInfo>('approved_by'), '2826e532-6277-4950-b534-0531583b2c6e'),\r\n            date_approved: getTextValueOrDefault(nameOf<UserInfo>('date_approved'), '1979-01-01'),\r\n        }\r\n\r\n        return serverUser;\r\n    }\r\n}\r\n","import {ErrorHandler} from \"../../../common/providers/entityProvider\";\r\nimport {ResponseStatusType} from \"../../../common/converters/types\";\r\nimport {Converter} from \"../../../common/converters/converter\";\r\n\r\nexport class UserStatusResponseConverter extends Converter<any, ResponseStatusType>{\r\n    convert(fromData: any, reject: ErrorHandler): ResponseStatusType {\r\n\r\n        const { user_id:id, status } = fromData;\r\n\r\n        return {\r\n            id,\r\n            status\r\n        };\r\n    }\r\n}\r\n","import {nameOf} from \"../../../../framework/extras/typeUtils\";\r\nimport {UserInfo} from \"../../../../model\";\r\nimport {getDateWithoutTime} from \"../../../../framework.visual/extras/utils/timeUtils\";\r\nimport {ReferenceType} from \"../../../../model\";\r\nimport {forEach} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {ReferenceInfo} from \"../../../../model\";\r\nimport {repoService} from \"../../../serviceComposition\";\r\nimport {Converter} from \"../../../common/converters/converter\";\r\n\r\nexport class UpdateUserRequestConverter extends Converter<any, any> {\r\n\r\n    convert(fromData: { id: string, latestUser: UserInfo, modifiedUser: Record<string, any> }): any {\r\n\r\n        const { latestUser, modifiedUser={} } = fromData;\r\n\r\n        const dictionary:Record<string, any> = latestUser;\r\n\r\n        const getTextValueOrDefault = (propertyName: string, defaultValue: any) => {\r\n            let result = defaultValue;\r\n            if (modifiedUser[propertyName]) {\r\n                result =  modifiedUser[propertyName];\r\n            }\r\n            else if (dictionary[propertyName])\r\n            {\r\n                result = dictionary[propertyName];\r\n            }\r\n            return result;\r\n        }\r\n\r\n        let dodid = `${Math.floor(Math.random() * 1000000000)}`;\r\n\r\n        let roles = [];\r\n        if (modifiedUser['role']) {\r\n            roles.push(modifiedUser['role']);\r\n        }\r\n        else {\r\n            let references = repoService.getAll(ReferenceInfo.class);\r\n            forEach(references, (referenceInfo: ReferenceInfo) => {\r\n                if (referenceInfo.type === ReferenceType.ROLE && referenceInfo.title.toUpperCase() == 'VIEWER') {\r\n                    roles.push(referenceInfo.id)\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        let serverUser = {\r\n            // id: id,\r\n            dod_id: getTextValueOrDefault(nameOf<UserInfo>('dod_id'), dodid),\r\n            first_name: getTextValueOrDefault(nameOf<UserInfo>('first_name'), ''),\r\n            middle_initial: '',\r\n            last_name: getTextValueOrDefault(nameOf<UserInfo>('last_name'), ''),\r\n            email_address: getTextValueOrDefault(nameOf<UserInfo>('email_address'), ''),\r\n            phone_number: getTextValueOrDefault(nameOf<UserInfo>('phone_number'), ''),\r\n            dept_id: getTextValueOrDefault(nameOf<UserInfo>('department'), ''),\r\n            preferred_results_view: getTextValueOrDefault(nameOf<UserInfo>('preferred_results_view'), 'Card'),\r\n            account_status: getTextValueOrDefault(nameOf<UserInfo>('account_status'), ''),\r\n            roles: roles,\r\n            approved_by: getTextValueOrDefault(nameOf<UserInfo>('approved_by'), ''),\r\n            date_approved: getDateWithoutTime(new Date()),\r\n        }\r\n\r\n        return serverUser;\r\n    }\r\n}\r\n","import {ILogger, ILogService, IRepositoryService, IStorage} from \"../../../framework/api\";\r\nimport {appDataStore} from \"../../serviceComposition\";\r\nimport {IHttpService} from \"../../../framework/api\";\r\nimport {Nullable} from \"../../../framework/extras/typeUtils\";\r\nimport {BasePlugin} from \"../../../framework/extras/basePlugin\";\r\nimport {IConverter, IEntityProvider} from \"../../../api\";\r\nimport {IRepoItem} from \"../../../framework/services/repoService/repoItem\";\r\n\r\nexport type RequestHandler = (requestData?: any) => any;\r\nexport type ResponseHandler<T> = (responseData: any, errorHandler: ErrorHandler) => T;\r\nexport type ErrorHandler = (error: string) => void;\r\n\r\nexport abstract class EntityProvider<EntityType> extends BasePlugin implements IEntityProvider<EntityType> {\r\n    abstract baseUrl: string;\r\n    protected store: IStorage = appDataStore;\r\n    protected httpService: Nullable<IHttpService> = null;\r\n    private repoService: Nullable<IRepositoryService> = null;\r\n\r\n    protected converters: IConverter<any, any>[] = [];\r\n\r\n    protected constructor() {\r\n        super();\r\n    }\r\n\r\n    addConverter<T extends IConverter<any, any>>(ctor: {new(className: string, logger: Nullable<ILogger>): T}): T {\r\n        const converter = new ctor(this.getClassName(), this.getLogger());\r\n        converter.setRepositoryService(this.repoService);\r\n\r\n        this.converters.push(converter);\r\n\r\n        return converter;\r\n    }\r\n\r\n    setLogService(logService: Nullable<ILogService>) {\r\n        super.setLogService(logService);\r\n\r\n        // forEach(this.converters, (converter:IConverter<any, any>) => {\r\n        //     converter.\r\n        // })\r\n    }\r\n\r\n    setRepositoryService(service: Nullable<IRepositoryService>) {\r\n        this.repoService = service;\r\n    }\r\n\r\n    protected getRepoItem<T extends IRepoItem>(className: string, id: string): Nullable<T> {\r\n        let result: Nullable<T> = null;\r\n\r\n        if (this.repoService != null) {\r\n            result = this.repoService.getRepoItem<T>(className, id);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected getRepoItems<T extends IRepoItem>(className: string, includeSubTypes: boolean = false, ...ids: string[]): Record<string, T> {\r\n        let result: Record<string, T> = {};\r\n\r\n        if (this.repoService != null) {\r\n            result = this.repoService.getAll<T>(className, includeSubTypes, ...ids);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getSingle(id: string): Promise<Nullable<EntityType>> {\r\n        this.error(\"getSingle method not implemented\");\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getAll(uiRequestData?: any): Promise<EntityType[]> {\r\n        this.error(\"getAll method not implemented\");\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    create(uiRequestData: any, onUpdated?: (item: EntityType) => void): Promise<Nullable<EntityType>> {\r\n        this.error(\"create method not implemented\");\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    update(id: string, uiRequestData: any): Promise<Nullable<EntityType>> {\r\n        this.error(\"update method not implemented\");\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    remove(id: string): Promise<Nullable<EntityType>> {\r\n        this.error(\"remove method not implemented\");\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    protected getState() {\r\n        return this.store.getState()\r\n    }\r\n\r\n    getHttpService(): Nullable<IHttpService> {\r\n        return this.httpService;\r\n    }\r\n\r\n    setHttpService(value: Nullable<IHttpService>) {\r\n        this.httpService = value;\r\n    }\r\n\r\n    protected sendPost<ResponseType>(requestConverter: RequestHandler, responseConverter: ResponseHandler<ResponseType>) : Promise<ResponseType> {\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService?.createPOST(`${this.baseUrl}`, requestConverter())\r\n                .then((data: any) => {\r\n                    resolve(responseConverter(data, reject));\r\n                })\r\n                .catch((error: any) => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n\r\n    protected sendPut<ResponseType>(id: string, requestConverter: RequestHandler, responseConverter: ResponseHandler<ResponseType>) : Promise<ResponseType> {\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService?.createPUT(`${this.baseUrl}/${id}`, requestConverter())\r\n                .then((data: any) => {\r\n                    resolve(responseConverter(data, reject));\r\n                })\r\n                .catch((error: any) => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n\r\n    protected sendDelete<ResponseType>(id: string, responseConverter: ResponseHandler<ResponseType>) : Promise<ResponseType> {\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService?.createDELETE(`${this.baseUrl}/${id}`)\r\n                .then((data: any) => {\r\n                    resolve(responseConverter(data, reject));\r\n                })\r\n                .catch((error: any) => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n\r\n    protected sendGetSingle(id: string, responseConverter: ResponseHandler<Nullable<EntityType>>) : Promise<Nullable<EntityType>> {\r\n        return new Promise((resolve, reject) => {\r\n            if (!id) {\r\n                reject('There is no id defined for url get request: ' + this.baseUrl);\r\n            }\r\n            else {\r\n                this.httpService?.createGET(`${this.baseUrl}/${id}`)\r\n                    .then((data: any) => {\r\n                        resolve(responseConverter(data, reject));\r\n                    })\r\n                    .catch((error: any) => {\r\n                        reject(error);\r\n                    })\r\n            }\r\n        });\r\n    }\r\n\r\n    protected sendGetAll(requestConverter: RequestHandler, responseConverter: ResponseHandler<EntityType[]>) : Promise<EntityType[]> {\r\n        return new Promise((resolve, reject) => {\r\n            let requestData: any = requestConverter();\r\n\r\n            this.httpService?.createGET(`${this.baseUrl}${requestData ? requestData : ''}`)\r\n                .then((data: any) => {\r\n\r\n                    const entityTypes = responseConverter(data, reject);\r\n\r\n                    this.trace(JSON.stringify({\r\n                        getAllData: entityTypes\r\n                    }, undefined, '\\t'));\r\n\r\n                    resolve(entityTypes);\r\n                })\r\n                .catch((error: any) => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    };\r\n\r\n    protected sendForm<ResponseType>(requestConverter: RequestHandler, responseConverter: ResponseHandler<ResponseType>) : Promise<ResponseType> {\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService?.createFormAPI(`${this.baseUrl}`, requestConverter())\r\n                .then((data: any) => {\r\n                    resolve(responseConverter(data, reject));\r\n                })\r\n                .catch((error: any) => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n}\r\n","import {UserInfo} from \"../../../model\";\r\nimport { GetUserArrayRequestConverter } from \"../converters/users/getUserArrayRequestConverter\";\r\nimport { GetUserArrayResponseConverter } from \"../converters/users/getUserArrayResponseConverter\";\r\nimport { GetUserResponseConverter } from \"../converters/users/getUserResponseConverter\";\r\nimport { CreateUserRequestConverter } from \"../converters/users/createUserRequestConverter\";\r\nimport { UserStatusResponseConverter } from \"../converters/users/userStatusResponseConverter\";\r\nimport { UpdateUserRequestConverter } from \"../converters/users/updateUserRequestConverter\";\r\nimport {forEach} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {Nullable, promiseFulfilled} from \"../../../framework/extras/typeUtils\";\r\nimport {EntityProvider} from \"../../common/providers/entityProvider\";\r\nimport {IConverter, IEntityProvider} from \"../../../api\";\r\nimport {RoleInfo} from \"../../../model\";\r\nimport {IUserProvider} from \"../../../api\";\r\n\r\nconst serverUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport class UserProvider extends EntityProvider<UserInfo> implements IUserProvider{\r\n    public static class: string = 'UserProvider';\r\n    baseUrl: string = `${serverUrl}/users`;\r\n\r\n    private createUserRequestConverter!: CreateUserRequestConverter;\r\n    private userStatusResponseConverter!: UserStatusResponseConverter;\r\n\r\n    private updateUserRequestConverter!: UpdateUserRequestConverter;\r\n\r\n    private getUserResponseConverter!: GetUserResponseConverter;\r\n\r\n    private getUserArrayResponseConverter!: GetUserArrayResponseConverter;\r\n    private getUserArrayRequestConverter!: GetUserArrayRequestConverter;\r\n\r\n    constructor() {\r\n        super();\r\n        super.appendClassName(UserProvider.class);\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        this.createUserRequestConverter = this.addConverter(CreateUserRequestConverter);\r\n        this.userStatusResponseConverter = this.addConverter(UserStatusResponseConverter);\r\n\r\n        this.updateUserRequestConverter = this.addConverter(UpdateUserRequestConverter);\r\n\r\n        this.getUserResponseConverter = this.addConverter(GetUserResponseConverter);\r\n\r\n        this.getUserArrayResponseConverter = this.addConverter(GetUserArrayResponseConverter);\r\n        this.getUserArrayResponseConverter.singleConverter = this.getUserResponseConverter;\r\n\r\n        this.getUserArrayRequestConverter = this.addConverter(GetUserArrayRequestConverter);\r\n\r\n    }\r\n\r\n    private roleProvider: Nullable<IEntityProvider<RoleInfo>> = null;\r\n    setRoleProvider(provider: IEntityProvider<RoleInfo>) {\r\n        this.roleProvider = provider;\r\n    }\r\n\r\n    getAll(uiRequestData?: any): Promise<UserInfo[]> {\r\n        return new Promise((resolve, reject) => {\r\n            super.sendGetAll(\r\n                () => this.getUserArrayRequestConverter.convert(uiRequestData),\r\n                (responseData, reject) => this.getUserArrayResponseConverter.convert(responseData, reject))\r\n                .then(users => {\r\n\r\n                    let promises: Promise<Nullable<UserInfo>>[] = [];\r\n\r\n                    forEach(users, (user: UserInfo) => {\r\n                        const {id} = user;\r\n\r\n                        let nextUser: UserInfo = Object.assign(new UserInfo(id), user);\r\n\r\n                        let promise = this.getRole(id, nextUser);\r\n\r\n                        promises.push(promise);\r\n                    })\r\n\r\n                    Promise.allSettled(promises)\r\n                        .then((results => {\r\n                            let users: UserInfo[] = [];\r\n                            forEach(results, (result: PromiseSettledResult<UserInfo>) => {\r\n                                if (promiseFulfilled(result)) {\r\n                                    users.push(result.value);\r\n                                }\r\n                            })\r\n\r\n                            resolve(users);\r\n                        }))\r\n                        .catch(error => {\r\n                            reject(error);\r\n                        })\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n\r\n    private getRole(id: string, nextUser: UserInfo): Promise<Nullable<UserInfo>> {\r\n        return new Promise((resolve, reject) => {\r\n            this.roleProvider?.getSingle(id)\r\n                .then(roleInfo => {\r\n                    // merge the role info with the user\r\n                    if (roleInfo) {\r\n                        nextUser.role = roleInfo.id;\r\n                    }\r\n                    resolve(nextUser);\r\n                })\r\n                .catch((error: any) => {\r\n                    resolve(nextUser);\r\n                    console.log(error);\r\n                })\r\n\r\n        });\r\n    }\r\n\r\n    getSingle(id: string): Promise<Nullable<UserInfo>> {\r\n        return new Promise((resolve, reject) => {\r\n            super.sendGetSingle(id,\r\n                (responseData, reject) => this.getUserResponseConverter.convert(responseData[0], reject))\r\n                .then(user => {\r\n                    if (user != null) {\r\n                        this.getRole(id, user)\r\n                            .then(user => {\r\n                                resolve(user);\r\n                            })\r\n                            .catch(error => {\r\n                                reject(error);\r\n                            })\r\n                    }\r\n                    else {\r\n                        reject(user);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n\r\n\r\n    create(uiRequestData: { user: UserInfo }, onUpdated?: (user: UserInfo) => void): Promise<Nullable<UserInfo>> {\r\n        return new Promise((resolve, reject) => {\r\n                super.sendPost(\r\n                    () => this.createUserRequestConverter.convert(uiRequestData),\r\n                    (responseData, errorHandler) => this.userStatusResponseConverter.convert(responseData, errorHandler))\r\n                    .then(data => {\r\n                        const {status, id} = data;\r\n\r\n                        uiRequestData.user.id = id;\r\n\r\n                        if (onUpdated) {\r\n                            onUpdated(uiRequestData.user);\r\n                        }\r\n\r\n                        // it's a single fetch to get the new user\r\n                        setTimeout(() => {\r\n                            this.getSingle(id)\r\n                                .then(user => {\r\n                                    resolve(user);\r\n                                })\r\n                                .catch(error => {\r\n                                    reject(error);\r\n                                });\r\n                        }, 3000)\r\n                    })\r\n                    .catch(error => {\r\n                        reject(error);\r\n                    })\r\n            }\r\n        )\r\n    }\r\n\r\n    update(id: string, uiRequestData: { id: string, modifiedUser: Record<string, any> }): Promise<Nullable<UserInfo>> {\r\n        return new Promise((resolve, reject) => {\r\n                this.getSingle(id)\r\n                    .then(latestUser => {\r\n                        if (latestUser != null) {\r\n                            let converterData = {\r\n                                id: uiRequestData.id,\r\n                                modifiedUser: uiRequestData.modifiedUser,\r\n                                latestUser: latestUser,\r\n                            }\r\n\r\n                            this.sendPut(id,\r\n                                () => this.updateUserRequestConverter.convert(converterData),\r\n                                (responseData, errorHandler) => this.userStatusResponseConverter.convert(responseData, errorHandler))\r\n                                .then(status => {\r\n                                    //have to fetch from the server\r\n                                    setTimeout(() => {\r\n                                        this.getSingle(id)\r\n                                            .then(user => {\r\n                                                resolve(user);\r\n                                            });\r\n                                    }, 3000);\r\n\r\n                                })\r\n                                .catch(error => {\r\n                                    console.log(error);\r\n                                });\r\n                        }\r\n                        else {\r\n                            reject(null);\r\n                        }\r\n                    });\r\n            }\r\n        )\r\n    }\r\n\r\n    remove(id: string): Promise<UserInfo> {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this.getSingle(id)\r\n                .then(user => {\r\n                    if (user != null) {\r\n                        super.sendDelete(id,\r\n                            (responseData, errorHandler) => this.userStatusResponseConverter.convert(responseData, errorHandler))\r\n                            .then(data => {\r\n                                if (data.id == user.id) {\r\n                                    resolve(user);\r\n                                }\r\n                                else {\r\n                                    reject('Could not delete user');\r\n                                }\r\n                            })\r\n                            .catch(error => {\r\n                                reject(error);\r\n                            })\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n            }\r\n        )\r\n    }\r\n}\r\n","import {Nullable} from \"../../extras/typeUtils\";\r\nimport {BasePlugin} from \"../../extras/basePlugin\";\r\nimport {IHttpService} from \"../../api\";\r\nimport {IAuthenticationService} from \"../../../api\";\r\n\r\nexport class HttpService extends BasePlugin implements IHttpService {\r\n    private authenticationService: Nullable<IAuthenticationService> = null;\r\n\r\n    public static class: string = 'HttpService';\r\n\r\n    constructor() {\r\n        super();\r\n        super.appendClassName(HttpService.class);\r\n    }\r\n\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        //check authentication service to be set\r\n        if (this.authenticationService == null) {\r\n            this.error(\"Authentication Service is Null\");\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    setAuthenticationService(authenticationService: Nullable<IAuthenticationService>) {\r\n        this.authenticationService = authenticationService;\r\n\r\n        if (this.authenticationService == null) {\r\n            this.error(\"Authentication Service is Null\");\r\n        }\r\n    }\r\n\r\n    createAPI(url: string, command?: string, body?: any, format?: string) {\r\n\r\n        let options: RequestInit = {\r\n            method: command ? command : 'GET'\r\n        }\r\n\r\n        let headers = new Headers();\r\n\r\n        let userProfile = this.authenticationService?.getUserProfile();\r\n        let username = userProfile?.username || '';\r\n        let id = userProfile?.id || '';\r\n        let email = userProfile?.email || '';\r\n        let firstName = userProfile?.firstName || '';\r\n        let lastName = userProfile?.lastName || '';\r\n\r\n        headers.append('km-token', `bearer ${this.authenticationService?.getToken()}`);\r\n        headers.append('km-user-name', username);\r\n        headers.append('km-user-id', id);\r\n        headers.append('km-email', email);\r\n        headers.append('km-first-name', firstName);\r\n        headers.append('km-last-name', lastName);\r\n\r\n        if (body) {\r\n            if (format === 'form') {\r\n                options.body = body;\r\n            } else {\r\n                headers.append('Content-Type', 'application/json');\r\n                options.body = JSON.stringify(body);\r\n            }\r\n        }\r\n\r\n        options.headers = headers;\r\n\r\n        const self = this;\r\n        const fetchFxn = () => {\r\n            return new Promise((resolve, reject) => {\r\n                self.trace(JSON.stringify({\r\n                    requestURL: url,\r\n                    requestBody: options\r\n                }, undefined, `\\t`));\r\n\r\n                fetch(url, options)\r\n                    .then(function (response) {\r\n                        // convert to json object\r\n                        if (format === 'form') {\r\n                            return response.json();\r\n                        } else {\r\n                            return response.json();\r\n                        }\r\n\r\n                        // if (response.status >= 200 && response.status <= 299) {\r\n                        //     if (format === 'form') {\r\n                        //         return response.json();\r\n                        //     } else {\r\n                        //         return response.json();\r\n                        //     }\r\n                        // } else {\r\n                        //     debugger\r\n                        //     throw Error(response.statusText);\r\n                        // }\r\n                    })\r\n                    .then(function (result) {\r\n                        // return object to caller\r\n                        self.trace(JSON.stringify({\r\n                            responseURL: url,\r\n                            responseData: result\r\n                        }, undefined, `\\t`));\r\n                        return resolve(result);\r\n                    })\r\n                    .catch(function (error) {\r\n                        self.trace(JSON.stringify({\r\n                            responseURL: url,\r\n                            error: error\r\n                        }, undefined, `\\t`));\r\n                        reject(error);\r\n                    });\r\n            });\r\n        };\r\n\r\n\r\n        if (this.authenticationService != null && this.authenticationService.isLoggedIn()) {\r\n            return fetchFxn();\r\n            // return this.authenticationService.securedFetch(fetchFxn);\r\n        } else {\r\n            return fetchFxn();\r\n        }\r\n    }\r\n\r\n    createFormAPI(url: string, formData: any) {\r\n        return this.createAPI(url, 'POST', formData, 'form');\r\n    }\r\n\r\n    createGET(url: string) {\r\n        return this.createAPI(url);\r\n    }\r\n\r\n    createPUT(url: string, body: any) {\r\n        return this.createAPI(url, 'PUT', body);\r\n    }\r\n\r\n    createDELETE(url: string) {\r\n        return this.createAPI(url, 'DELETE');\r\n    }\r\n\r\n    createPOST(url: string, body: any) {\r\n        return this.createAPI(url, 'POST', body);\r\n    }\r\n}\r\n","import {Converter} from \"../../common/converters/converter\";\r\nimport {ResponseStatusType} from \"../../common/converters/types\";\r\n\r\nexport class DeleteDocumentResponseConverter extends Converter<any, ResponseStatusType>{\r\n    convert(fromData: any): any {\r\n\r\n        const { document_id, status } = fromData;\r\n\r\n        return {\r\n            id: document_id,\r\n            status\r\n        };\r\n    }\r\n}\r\n","import {ErrorHandler} from \"../../common/providers/entityProvider\";\r\nimport {ResponseStatusType} from \"../../common/converters/types\";\r\nimport {Converter} from \"../../common/converters/converter\";\r\n\r\nexport class DocumentResponseConverter extends Converter<any, ResponseStatusType>{\r\n    convert(fromData: any, reject: ErrorHandler): ResponseStatusType {\r\n\r\n        const { id:id, message:status } = fromData;\r\n\r\n        return {\r\n            id,\r\n            status\r\n        };\r\n    }\r\n}\r\n","import {forEach} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {SearchParamInfo} from \"../../../model\";\r\nimport {Converter} from \"../../common/converters/converter\";\r\n\r\n\r\ntype OptionsDataType = {\r\n    getSearchParamValue: (searchParam: SearchParamInfo) => Record<string,any>\r\n}\r\n\r\nexport class GetDocumentArrayRequestConverter extends Converter<any, any>{\r\n    convert(fromData: any, reject: any, options: OptionsDataType): any {\r\n        const result: Record<string, any> = {};\r\n\r\n        const searchParams = fromData;\r\n\r\n        forEach(searchParams, (searchParam: SearchParamInfo ) => {\r\n            const { dirty = false } = searchParam;\r\n\r\n            if (dirty || searchParam.id === 'search_request') {\r\n                let searchValue:Record<string,any> = options.getSearchParamValue(searchParam);\r\n\r\n                let keys = Object.keys(searchValue), length = keys.length;\r\n                for (let index = 0; index < length; index++) {\r\n                    let key = keys[index];\r\n                    let value = searchValue[key];\r\n\r\n                    // only append to the search request if we got valid data\r\n                    if (Array.isArray(value)) {\r\n                        if (value.length > 0) {\r\n                            result[key] = value;\r\n                        }\r\n                    }\r\n                    else if (value) {\r\n                        result[key] = value;\r\n                    }\r\n                    else if (key == 'search_request' && value === '') {\r\n                        result[key] = 'NULL';\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        const { limit, offset, sort, ...rest } = result;\r\n\r\n        return {\r\n            ...rest\r\n        };\r\n    }\r\n}\r\n","import {forEach, sortByProperty} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {IConverter} from \"../../../api\";\r\nimport {KM_API_SERVER_URL} from \"../../../config/config\";\r\nimport {getValueOrDefault, Nullable} from \"../../../framework/extras/typeUtils\";\r\nimport {DocumentInfo, SearchParamInfo} from \"../../../model\";\r\nimport {Converter} from \"../../common/converters/converter\";\r\n\r\n\r\ntype OptionsDataType = {\r\n    getSearchParamValue: (searchParam: SearchParamInfo) => Record<string,any>\r\n}\r\n\r\nexport class GetDocumentArrayResponseConverter extends Converter<any,DocumentInfo[]>{\r\n\r\n    private _singleConverter!: IConverter<any, Nullable<DocumentInfo>>;\r\n\r\n    convert(fromData: any, reject: any, options: OptionsDataType): DocumentInfo[] {\r\n\r\n        const documents: DocumentInfo[] = [];\r\n\r\n        if (!Array.isArray(fromData)) {\r\n            if (fromData === 'User waiting for approval by KM Admin') {\r\n                window.alert(fromData);\r\n            }\r\n            reject('Error while parsing array of documents. Expected Array. Receive the following: <' + fromData + '>');\r\n            return documents;\r\n        }\r\n        else {\r\n            // client side sorting. boooo\r\n            const searchParams: any = super.getRepoItems<SearchParamInfo>(SearchParamInfo.class);\r\n\r\n            const {sort:sortProperty} = searchParams;\r\n            let searchValueObject: Record<string, any> = options.getSearchParamValue(sortProperty);\r\n\r\n            //get sort value or set default sort value\r\n            let sortValue: string = searchValueObject['sort'] ? searchValueObject['sort'] : \"author_ascending\";\r\n            fromData = sortByProperty(fromData, sortValue);\r\n\r\n            forEach(fromData, (item: any) => {\r\n                // build up tags\r\n                const documentInfo: Nullable<DocumentInfo> = this._singleConverter.convert(item, reject);\r\n\r\n                if (documentInfo != null) {\r\n                    // id is on a different field....\r\n                    documentInfo.id = getValueOrDefault(item, 'id', '');\r\n                    documentInfo.original_url = `${KM_API_SERVER_URL}/documents/${documentInfo.id}?format=ORIGINAL`;\r\n                    documentInfo.preview_url = `${KM_API_SERVER_URL}/documents/${documentInfo.id}?format=PREVIEW`;\r\n\r\n                    documents.push(documentInfo);\r\n                }\r\n            });\r\n        }\r\n\r\n        return documents;\r\n    }\r\n\r\n    get singleConverter(): IConverter<any, Nullable<DocumentInfo>> {\r\n        return this._singleConverter;\r\n    }\r\n\r\n    set singleConverter(value: IConverter<any, Nullable<DocumentInfo>>) {\r\n        this._singleConverter = value;\r\n    }\r\n}\r\n","import {KM_API_SERVER_URL} from \"../../../config/config\";\r\nimport {getValueOrDefault} from \"../../../framework/extras/typeUtils\";\r\nimport {DocumentInfo} from \"../../../model\";\r\nimport {ErrorHandler} from \"../../common/providers/entityProvider\";\r\nimport {Converter} from \"../../common/converters/converter\";\r\nimport {getFormattedSize} from \"../../../framework.visual/extras/utils/sizeUtils\";\r\n\r\nexport class GetDocumentResponseConverter extends Converter<any, DocumentInfo>{\r\n    convert(fromData: any, reject: ErrorHandler): DocumentInfo {\r\n        const item = fromData;\r\n\r\n        const documentInfo: DocumentInfo = new DocumentInfo(getValueOrDefault(item, 'document_id', ''));\r\n\r\n        documentInfo.author = getValueOrDefault(item, 'author', '');\r\n\r\n        if (item['dept_id']) {\r\n            documentInfo.department = getValueOrDefault(item, 'dept_id', '');\r\n        }\r\n        else if (item['department']) {\r\n            documentInfo.department = getValueOrDefault(item, 'department', '');\r\n        }\r\n\r\n        documentInfo.file_name = getValueOrDefault(item, 'file_name', '');\r\n        documentInfo.file_page_count = getValueOrDefault(item, 'file_page_count', '');\r\n        documentInfo.file_size = getFormattedSize(getValueOrDefault(item, 'file_size', ''));\r\n        documentInfo.file_type = getValueOrDefault(item, 'file_type', '');\r\n        documentInfo.primary_sme_email = getValueOrDefault(item, 'primary_sme_email', '');\r\n        documentInfo.primary_sme_name = getValueOrDefault(item, 'primary_sme_name', '');\r\n        documentInfo.primary_sme_phone = getValueOrDefault(item, 'primary_sme_phone', '');\r\n        documentInfo.private_tag = getValueOrDefault(item, 'custom_personal_tag', []);\r\n        documentInfo.project = getValueOrDefault(item, 'project', '');\r\n        documentInfo.public_tag = getValueOrDefault(item, 'custom_shared_tag', []);\r\n        documentInfo.publication_date = getValueOrDefault(item, 'publication_date', '');\r\n        documentInfo.purpose = getValueOrDefault(item, 'purpose', '');\r\n        documentInfo.secondary_sme_email = getValueOrDefault(item, 'secondary_sme_email', '');\r\n        documentInfo.secondary_sme_name = getValueOrDefault(item, 'secondary_sme_name', '');\r\n        documentInfo.secondary_sme_phone = getValueOrDefault(item, 'secondary_sme_phone', '');\r\n        documentInfo.status = getValueOrDefault(item, 'status', '');\r\n        documentInfo.title = getValueOrDefault(item, 'title', '');\r\n        documentInfo.upload_date = getValueOrDefault(item, 'upload_date', '');\r\n        documentInfo.uploadedBy_id = getValueOrDefault(item, 'uploaded_by', '');\r\n\r\n\r\n        documentInfo.original_url = `${KM_API_SERVER_URL}/documents/${documentInfo.id}?format=ORIGINAL`;\r\n        documentInfo.preview_url = `${KM_API_SERVER_URL}/documents/${documentInfo.id}?format=PREVIEW`;\r\n        documentInfo.isUpdating = false;\r\n        documentInfo.isUploading = !documentInfo.status;\r\n\r\n        return documentInfo;\r\n    }\r\n}\r\n","export const getFormattedSize = (bytes: number) => {\r\n    let result = bytes + \" bytes\";\r\n    let tmpSize = bytes;\r\n\r\n    if (tmpSize > 1024) {\r\n        tmpSize = tmpSize / 1024;\r\n        result = tmpSize.toFixed(1) + \" KB\";\r\n    }\r\n\r\n    if (tmpSize > 1024) {\r\n        tmpSize = tmpSize / 1024;\r\n        result = tmpSize.toFixed(1) + \" MB\";\r\n    }\r\n\r\n    if (tmpSize > 1024) {\r\n        tmpSize = tmpSize / 1024;\r\n        result = tmpSize.toFixed(1) + \" GB\";\r\n    }\r\n\r\n    return result;\r\n}\r\n","import {nameOf} from \"../../../framework/extras/typeUtils\";\r\nimport {DocumentInfo} from \"../../../model\";\r\nimport {Converter} from \"../../common/converters/converter\";\r\n\r\nexport class UpdateDocumentRequestConverter extends Converter<any, any>{\r\n\r\n    convert(fromData: { id: string, latestDocument: DocumentInfo, modifiedDocument: Record<string, any> }): any {\r\n\r\n        const { id, latestDocument, modifiedDocument={} } = fromData;\r\n\r\n        const dictionary: Record<string, any> = latestDocument;\r\n\r\n        const getTextValueOrDefault = (propertyName: string, defaultValue: any) => {\r\n            let result = defaultValue;\r\n            if (modifiedDocument[propertyName]) {\r\n                result =  modifiedDocument[propertyName];\r\n            }\r\n            else if (dictionary[propertyName])\r\n            {\r\n                result = dictionary[propertyName];\r\n            }\r\n            return result;\r\n        }\r\n\r\n        let serverDoc = {\r\n            id: id,\r\n            author: getTextValueOrDefault(nameOf<DocumentInfo>('author'), ''),\r\n            custom_personal_tag: getTextValueOrDefault(nameOf<DocumentInfo>('private_tag'), ''),\r\n            custom_shared_tag: getTextValueOrDefault(nameOf<DocumentInfo>('public_tag'), ''),\r\n            department: getTextValueOrDefault(nameOf<DocumentInfo>('department'), ''),\r\n            dept_id: getTextValueOrDefault(nameOf<DocumentInfo>('department'), ''),\r\n            file_name: getTextValueOrDefault(nameOf<DocumentInfo>('file_name'), ''),\r\n            file_page_count: getTextValueOrDefault(nameOf<DocumentInfo>('file_page_count'), ''),\r\n            file_size: getTextValueOrDefault(nameOf<DocumentInfo>('file_size'), ''),\r\n            file_type: getTextValueOrDefault(nameOf<DocumentInfo>('file_type'), ''),\r\n\r\n            primary_sme_email: getTextValueOrDefault(nameOf<DocumentInfo>('primary_sme_email'), ''),\r\n            primary_sme_name: getTextValueOrDefault(nameOf<DocumentInfo>('primary_sme_name'), ''),\r\n            primary_sme_phone: getTextValueOrDefault(nameOf<DocumentInfo>('primary_sme_phone'), ''),\r\n            project: getTextValueOrDefault(nameOf<DocumentInfo>('project'), ''),\r\n            publication_date: getTextValueOrDefault(nameOf<DocumentInfo>('publication_date'), ''),\r\n            purpose: getTextValueOrDefault(nameOf<DocumentInfo>('purpose'), ''),\r\n\r\n            secondary_sme_email: getTextValueOrDefault(nameOf<DocumentInfo>('secondary_sme_email'), ''),\r\n            secondary_sme_name: getTextValueOrDefault(nameOf<DocumentInfo>('secondary_sme_name'), ''),\r\n            secondary_sme_phone: getTextValueOrDefault(nameOf<DocumentInfo>('secondary_sme_phone'), ''),\r\n            status: getTextValueOrDefault(nameOf<DocumentInfo>('status'), ''),\r\n            title: getTextValueOrDefault(nameOf<DocumentInfo>('title'), ''),\r\n            upload_date: getTextValueOrDefault(nameOf<DocumentInfo>('upload_date'), ''),\r\n            uploaded_by: getTextValueOrDefault(nameOf<DocumentInfo>('uploadedBy_id'), ''),\r\n        }\r\n\r\n        return serverDoc;\r\n    }\r\n}\r\n","import {Converter} from \"../../common/converters/converter\";\r\n\r\nexport interface UploadDocumentRequestData {\r\n    pendingFilesRaw: Record<string, any>,\r\n    file: { name:string }\r\n}\r\n\r\nexport class UploadDocumentRequestConverter extends Converter<any, any>{\r\n    convert(fromData: UploadDocumentRequestData): any {\r\n        const {pendingFilesRaw, file} = fromData;\r\n\r\n        const formData = new FormData();\r\n\r\n        const { name } = file;\r\n        let item = pendingFilesRaw[name]\r\n        formData.append(\"filename\", item, item.name);\r\n\r\n        return formData;\r\n    }\r\n}\r\n","import {ResponseStatusType} from \"../../common/converters/types\";\r\nimport {Converter} from \"../../common/converters/converter\";\r\n\r\nexport class UploadDocumentResponseConverter extends Converter<any, ResponseStatusType>{\r\n    convert(fromData: any): ResponseStatusType {\r\n\r\n        const { document_id:id, status } = fromData;\r\n\r\n        return {\r\n            id,\r\n            status\r\n        };\r\n    }\r\n}\r\n","import {EntityProvider} from \"../../common/providers/entityProvider\";\r\nimport {DocumentInfo, ParamType, ReferenceInfo, SearchParamInfo, SortPropertyInfo, TagInfo} from \"../../../model\";\r\nimport {Nullable} from \"../../../framework/extras/typeUtils\";\r\nimport {DeleteDocumentResponseConverter} from \"../converters/deleteDocumentResponseConverter\";\r\nimport {DocumentResponseConverter} from \"../converters/documentResponseConverter\";\r\nimport {GetDocumentArrayRequestConverter} from \"../converters/getDocumentArrayRequestConverter\";\r\nimport {GetDocumentArrayResponseConverter} from \"../converters/getDocumentArrayResponseConverter\";\r\nimport {GetDocumentResponseConverter} from \"../converters/getDocumentResponseConverter\";\r\nimport {UpdateDocumentRequestConverter} from \"../converters/updateDocumentRequestConverter\";\r\nimport {UploadDocumentRequestConverter} from \"../converters/uploadDocumentRequestConverter\";\r\nimport {UploadDocumentResponseConverter} from \"../converters/uploadDocumentResponseConverter\";\r\n\r\nexport const serverUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport class DocumentProvider extends EntityProvider<DocumentInfo> {\r\n    baseUrl: string = `${serverUrl}/documents`;\r\n    public static class: string = 'DocumentProvider';\r\n\r\n    private readonly pollAttempts: Record<string, number>;\r\n    private POLLING_RATE: number;\r\n    private MAX_POLL_ATTEMPTS: number;\r\n\r\n    private deleteDocumentResponseConverter!: DeleteDocumentResponseConverter;\r\n\r\n    private documentResponseConverter!: DocumentResponseConverter;\r\n\r\n    private getDocumentResponseConverter!: GetDocumentResponseConverter;\r\n\r\n    private getDocumentArrayRequestConverter!: GetDocumentArrayRequestConverter;\r\n    private getDocumentArrayResponseConverter!: GetDocumentArrayResponseConverter;\r\n\r\n    private updateDocumentRequestConverter!: UpdateDocumentRequestConverter;\r\n\r\n    private uploadDocumentRequestConverter!: UploadDocumentRequestConverter;\r\n    private uploadDocumentResponseConverter!: UploadDocumentResponseConverter;\r\n\r\n    constructor() {\r\n        super();\r\n        super.appendClassName(DocumentProvider.class);\r\n\r\n        this.pollAttempts = {};\r\n        this.POLLING_RATE = 5000;\r\n        this.MAX_POLL_ATTEMPTS = 2;\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        this.deleteDocumentResponseConverter = this.addConverter(DeleteDocumentResponseConverter);\r\n\r\n        this.documentResponseConverter = this.addConverter(DocumentResponseConverter);\r\n\r\n        this.getDocumentResponseConverter = this.addConverter(GetDocumentResponseConverter);\r\n\r\n        this.getDocumentArrayRequestConverter = this.addConverter(GetDocumentArrayRequestConverter);\r\n        this.getDocumentArrayResponseConverter = this.addConverter(GetDocumentArrayResponseConverter);\r\n        this.getDocumentArrayResponseConverter.singleConverter = this.getDocumentResponseConverter;\r\n\r\n        this.updateDocumentRequestConverter = this.addConverter(UpdateDocumentRequestConverter);\r\n\r\n        this.uploadDocumentRequestConverter = this.addConverter(UploadDocumentRequestConverter);\r\n        this.uploadDocumentResponseConverter = this.addConverter(UploadDocumentResponseConverter);\r\n    }\r\n\r\n    create(uiRequestData: any, onUpdated: (item: DocumentInfo) => void): Promise<Nullable<DocumentInfo>> {\r\n        return new Promise((resolve, reject) => {\r\n            this.sendForm(\r\n                () => this.uploadDocumentRequestConverter.convert(uiRequestData),\r\n                (responseData, errorHandler) => this.uploadDocumentResponseConverter.convert(responseData))\r\n                .then(status => {\r\n\r\n                    const { id } = status;\r\n\r\n                    if (status != null) {\r\n                        let documentInfo = new DocumentInfo(id);\r\n                        onUpdated(documentInfo);\r\n                    }\r\n\r\n                    const fetchNow = () => {\r\n                        let pollAttempt: number = this.pollAttempts[id];\r\n\r\n                        if (pollAttempt) {\r\n                            this.getSingle(id)\r\n                                .then(latestDocument => {\r\n                                    if (latestDocument != null) {\r\n                                        const {id, isUploading, status} = latestDocument;\r\n\r\n                                        latestDocument.isPending = true;\r\n                                        onUpdated(latestDocument);\r\n\r\n                                        let pollAttempt = this.pollAttempts[id];\r\n\r\n                                        if (pollAttempt) {\r\n                                            if (pollAttempt >= this.MAX_POLL_ATTEMPTS) {\r\n                                                delete this.pollAttempts[id];\r\n                                                // we are completely done.\r\n                                                latestDocument.isPending = true;\r\n                                                latestDocument.status = \"error\";\r\n                                                onUpdated(latestDocument);\r\n\r\n                                                resolve(latestDocument);\r\n                                            } else if (isUploading || status === \"failed\") {\r\n                                                this.pollAttempts[id] = pollAttempt + 1;\r\n                                                setTimeout(fetchNow, this.POLLING_RATE);\r\n                                            }\r\n                                            else {\r\n                                                resolve(latestDocument);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        setTimeout(fetchNow, this.POLLING_RATE);\r\n                                    }\r\n                                });\r\n                        }\r\n                    }\r\n\r\n                    this.pollAttempts[id] = 1;\r\n                    setTimeout(fetchNow, this.POLLING_RATE);\r\n\r\n\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    update(id: string, uiRequestData: {id: string, modifiedDocument: Record<string, any>}) : Promise<Nullable<DocumentInfo>> {\r\n        return new Promise((resolve, reject) => {\r\n                this.getSingle(id)\r\n                    .then(latestDocument => {\r\n                        if (latestDocument != null) {\r\n                            let converterData = {\r\n                                id: uiRequestData.id,\r\n                                latestDocument: latestDocument,\r\n                                modifiedDocument: uiRequestData.modifiedDocument,\r\n                            }\r\n\r\n                            this.sendPut(id,\r\n                                () => this.updateDocumentRequestConverter.convert(converterData),\r\n                                (responseData, errorHandler) => this.documentResponseConverter.convert(responseData, errorHandler))\r\n                                .then(status => {\r\n                                    //have to fetch from the server\r\n                                    if (status.id === id) {\r\n                                        setTimeout(() => {\r\n                                            this.getSingle(id)\r\n                                                .then(document => {\r\n                                                    resolve(document);\r\n                                                });\r\n                                        }, 3000);\r\n                                    }\r\n                                    else {\r\n                                        reject(`Error Updating Document with id ${id}`);\r\n                                    }\r\n                                })\r\n                                .catch(error => {\r\n                                    console.log(error);\r\n                                });\r\n                        }\r\n                        else {\r\n                            reject(`Document with id ${id} does not exist`)\r\n                        }\r\n                    });\r\n            }\r\n        )\r\n    }\r\n\r\n    remove(id: string) : Promise<Nullable<DocumentInfo>> {\r\n        return new Promise((resolve, reject) => {\r\n\r\n                // if we are currently polling for this document, then stop\r\n                if (this.pollAttempts[id]) {\r\n                    delete this.pollAttempts[id];\r\n                }\r\n\r\n                this.getSingle(id)\r\n                    .then(document => {\r\n                        if (document != null) {\r\n                            super.sendDelete(id,\r\n                                (responseData, errorHandler) => this.getDocumentResponseConverter.convert(responseData, errorHandler))\r\n                                .then(data => {\r\n                                    if (data.id === document.id) {\r\n                                        resolve(document);\r\n                                    }\r\n                                    else {\r\n                                        reject('Could not delete document');\r\n                                    }\r\n                                })\r\n                                .catch(error => {\r\n                                    reject(error);\r\n                                })\r\n                        }\r\n                        else {\r\n                            reject(`Document with id ${id} not found`)\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        reject(error);\r\n                    });\r\n            }\r\n        )\r\n    }\r\n\r\n    getSingle(id: string): Promise<Nullable<DocumentInfo>> {\r\n        return new Promise((resolve, reject) => {\r\n            super.sendGetSingle(id,\r\n                (responseData, errorHandler) => this.getDocumentResponseConverter.convert(responseData, errorHandler))\r\n                .then(data => {\r\n                    resolve(data);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n\r\n    getAll(uiRequestData: any): Promise<DocumentInfo[]> {\r\n        return new Promise((resolve, reject) => {\r\n            let requestData: any = this.getDocumentArrayRequestConverter.convert(uiRequestData, reject, { getSearchParamValue: this.getSearchParamValue});\r\n\r\n            this.httpService?.createPOST(`${this.baseUrl}/search`, requestData)\r\n                .then((data: any) => {\r\n                    resolve(this.getDocumentArrayResponseConverter.convert(data, reject, { getSearchParamValue: this.getSearchParamValue}));\r\n                })\r\n                .catch((error: any) => {\r\n                    reject(requestData);\r\n                })\r\n        });\r\n    }\r\n\r\n    getSearchParamValue(searchParam: SearchParamInfo) {\r\n        const {id, value, type} = searchParam;\r\n\r\n        let result = null;\r\n\r\n        switch (type) {\r\n            case ParamType.OPTIONS: {\r\n                if (id === 'sort') {\r\n                    const sortTypes = super.getRepoItems<SortPropertyInfo>(SortPropertyInfo.class);\r\n                    let sortType: any = sortTypes[value];\r\n                    result = {\r\n                        [id]: sortType ? sortType.value : null\r\n                    }\r\n                } else if (id === 'tags') {\r\n                    let title: string[] = [];\r\n                    value.forEach((id: string) => {\r\n                        let repoItem: any = super.getRepoItem(TagInfo.class, id);\r\n\r\n                        if (repoItem != null) {\r\n                            title.push(repoItem.title);\r\n                        }\r\n                    })\r\n\r\n                    result = {\r\n                        ['custom_shared_tag']: title\r\n                    }\r\n                } else {\r\n                    let repoIdArray: string[] = [];\r\n                    value.forEach((id: string) => {\r\n                        let repoItem = super.getRepoItem(ReferenceInfo.class, id);\r\n\r\n                        if (repoItem != null) {\r\n                            repoIdArray.push(repoItem.id);\r\n                        }\r\n                    })\r\n\r\n\r\n                    result = {\r\n                        [id]: repoIdArray\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case ParamType.DATE_RANGE: {\r\n\r\n                const {start_date, end_date} = value || {};\r\n\r\n                let start_date_prop = id.replace('_date', '_start_date');\r\n                let end_date_prop = id.replace('_date', '_end_date');\r\n\r\n                result = {\r\n                    [start_date_prop]: start_date,\r\n                    [end_date_prop]: end_date\r\n                }\r\n\r\n                break;\r\n            }\r\n            case ParamType.STRING:\r\n                if (id === 'author') {\r\n                    let title = [];\r\n                    title.push(value);\r\n                    result = {\r\n                        [id]: title\r\n                    }\r\n                    break;\r\n                }\r\n                else if (id === 'tags') {\r\n                    let title: string[] = [];\r\n                    value.forEach((id: string) => {\r\n                        let repoItem: any = super.getRepoItem(TagInfo.class, id);\r\n\r\n                        if (repoItem != null) {\r\n                            title.push(repoItem.title);\r\n                        }\r\n                    })\r\n\r\n                    result = {\r\n                        ['custom_shared_tag']: title\r\n                    }\r\n                }\r\n                else {\r\n                    result = {\r\n                        [id]: value\r\n                    }\r\n                }\r\n                break;\r\n            case ParamType.NUMBER:\r\n            default: {\r\n                result = {\r\n                    [id]: value\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n}\r\n\r\n\r\n","import {Converter} from \"../../common/converters/converter\";\r\n\r\n\r\nexport class GetReferenceArrayRequestConverter extends Converter<any, any>{\r\n    convert(uiRequestData: {id:string}): any {\r\n        return `?type=${uiRequestData.id}`;\r\n    }\r\n}\r\n","import {forEachKVP} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {ReferenceType} from \"../../../model\";\r\nimport {ReferenceInfo} from \"../../../model\";\r\nimport {Converter} from \"../../common/converters/converter\";\r\n\r\nexport class GetReferenceArrayResponseConverter extends Converter<any, ReferenceInfo[]>{\r\n    convert(fromData: any, reject: any, options?: {referenceType: ReferenceType}): ReferenceInfo[] {\r\n        if (!Array.isArray(fromData)) {\r\n            reject('Error while parsing array of references. Expected Array. Receive the following: <' + fromData + '>');\r\n        }\r\n\r\n        let result: ReferenceInfo[] = [];\r\n\r\n        if (options != null) {\r\n            const referenceOrdinal = ReferenceType[options.referenceType];\r\n\r\n            forEachKVP(fromData, (key: string, value: any) => {\r\n\r\n                const {id, name} = value;\r\n\r\n                const info: ReferenceInfo = new ReferenceInfo(\r\n                    id,\r\n                    name,\r\n                    referenceOrdinal\r\n                )\r\n\r\n                result.push(info);\r\n            })\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","import {EntityProvider} from \"../../common/providers/entityProvider\";\r\nimport {ReferenceInfo, ReferenceType} from \"../../../model\";\r\nimport {GetReferenceArrayRequestConverter} from \"../converters/getReferenceArrayRequestConverter\";\r\nimport {GetReferenceArrayResponseConverter} from \"../converters/getReferenceArrayResponseConverter\";\r\n\r\nconst serverUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport class ReferenceProvider extends EntityProvider<ReferenceInfo> {\r\n    baseUrl: string = `${serverUrl}/references`;\r\n    public static class: string = 'ReferenceProvider';\r\n\r\n    private getReferenceArrayRequestConverter!: GetReferenceArrayRequestConverter;\r\n    private getReferenceArrayResponseConverter!: GetReferenceArrayResponseConverter;\r\n\r\n    constructor() {\r\n        super();\r\n        super.appendClassName(ReferenceProvider.class);\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        this.getReferenceArrayRequestConverter = this.addConverter(GetReferenceArrayRequestConverter);\r\n        this.getReferenceArrayResponseConverter = this.addConverter(GetReferenceArrayResponseConverter);\r\n    }\r\n\r\n    getAll(uiRequestData: {id:ReferenceType}): Promise<ReferenceInfo[]> {\r\n        return new Promise((resolve, reject) => {\r\n            this.sendGetAll(\r\n                () => this.getReferenceArrayRequestConverter.convert(uiRequestData),\r\n                (responseData, errorHandler) => this.getReferenceArrayResponseConverter.convert(responseData, errorHandler, {referenceType: uiRequestData.id}))\r\n                .then(references => {\r\n                    resolve(references);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n}\r\n\r\n\r\n","import {Converter} from \"../../common/converters/converter\";\r\n\r\nexport class GetStatsRequestConverter extends Converter<any, any>{\r\n    convert(uiRequestData?: any): any {\r\n        return uiRequestData;\r\n    }\r\n}\r\n","import {getValueOrDefault} from \"../../../framework/extras/typeUtils\";\r\nimport {StatInfo} from \"../../../model\";\r\nimport {forEachKVP} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {makeGuid} from \"../../../framework.visual/extras/utils/uniqueIdUtils\";\r\nimport {StatType} from \"../../../model\";\r\nimport {Converter} from \"../../common/converters/converter\";\r\n\r\nexport class GetStatsResponseConverter extends Converter<any, any>{\r\n    convert(fromData: any, reject: any): StatInfo[] {\r\n\r\n        const result: StatInfo[] = [];\r\n\r\n        if (Array.isArray(fromData)) {\r\n            forEachKVP(fromData, (itemKey:string, itemValue: string[]) => {\r\n                let statInfo: StatInfo = new StatInfo(makeGuid());\r\n\r\n                let statType = -1;\r\n\r\n                const value = getValueOrDefault(itemValue, 'class', '').toLowerCase();\r\n\r\n                switch (value) {\r\n                    case 'custom_shared_tag':\r\n                        statType = StatType.CUSTOM_SHARED_TAG;\r\n                        break;\r\n                    case 'datastore_size':\r\n                        statType = StatType.DATASTORE_SIZE;\r\n                        break;\r\n                    case 'department':\r\n                        statType = StatType.DEPARTMENT;\r\n                        break;\r\n                    case 'file_type':\r\n                        statType = StatType.FILE_TYPE;\r\n                        break;\r\n                    case 'project':\r\n                        statType = StatType.PROJECT;\r\n                        break;\r\n                    case 'purpose':\r\n                        statType = StatType.PURPOSE;\r\n                        break;\r\n                    case 'upload_date':\r\n                        statType = StatType.UPLOAD_DATE;\r\n                        break;\r\n                    default:\r\n                        console.log(`Stat type with title '${value}' not found`);\r\n                        break;\r\n                }\r\n\r\n                statInfo.type = statType;\r\n                statInfo.count = getValueOrDefault(itemValue, 'count', '');\r\n                statInfo.item = getValueOrDefault(itemValue, 'item', '');\r\n\r\n                result.push(statInfo);\r\n            });\r\n        }\r\n        else {\r\n            reject('Error while parsing array of stats. Expected Array. Received the following: <' + fromData + '>');\r\n        }\r\n\r\n\r\n        return result;\r\n    }\r\n}\r\n","import {EntityProvider} from \"../../common/providers/entityProvider\";\r\nimport {GetStatsRequestConverter} from \"../converters/getStatsRequestConverter\";\r\nimport {GetStatsResponseConverter} from \"../converters/getStatsResponseConverter\";\r\nimport {StatInfo} from \"../../../model\";\r\n\r\nconst serverUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport class StatProvider extends EntityProvider<StatInfo> {\r\n    baseUrl: string = `${serverUrl}/stats`;\r\n    public static class: string = 'StatProvider';\r\n\r\n    private getStatsRequestConverter!: GetStatsRequestConverter;\r\n    private getStatsResponseConverter!: GetStatsResponseConverter;\r\n\r\n    constructor() {\r\n        super();\r\n        super.appendClassName(StatProvider.class);\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        this.getStatsRequestConverter = this.addConverter(GetStatsRequestConverter);\r\n        this.getStatsResponseConverter = this.addConverter(GetStatsResponseConverter);\r\n    }\r\n\r\n    getAll(uiRequestData?: any): Promise<StatInfo[]> {\r\n        return new Promise((resolve, reject) => {\r\n            super.sendGetAll(\r\n                () => this.getStatsRequestConverter.convert(uiRequestData),\r\n                (responseData, reject) => this.getStatsResponseConverter.convert(responseData, reject))\r\n                .then(data => {\r\n                    resolve(data);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n}\r\n","import {Converter} from \"../../common/converters/converter\";\r\n\r\nexport class GetTagArrayRequestConverter extends Converter<any, any>{\r\n    convert(uiRequestData?: any): any {\r\n        return uiRequestData;\r\n    }\r\n}\r\n","import {forEachKVP} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {IConverter} from \"../../../api\";\r\nimport {TagInfo} from \"../../../model\";\r\nimport {Nullable} from \"../../../framework/extras/typeUtils\";\r\nimport {Converter} from \"../../common/converters/converter\";\r\n\r\nexport class GetTagArrayResponseConverter extends Converter<any,TagInfo[]>{\r\n\r\n    private _singleConverter!: IConverter<any, Nullable<TagInfo>>;\r\n\r\n    convert(fromData: any, reject: any): TagInfo[] {\r\n\r\n        const result: TagInfo[] = [];\r\n\r\n        if (Array.isArray(fromData)) {\r\n            forEachKVP(fromData, (itemKey:string, itemValue: string[]) => {\r\n                let tagInfo = this._singleConverter.convert(itemValue, reject);\r\n\r\n                if (tagInfo != null) {\r\n                    result.push(tagInfo);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            reject('Error while parsing array of references. Expected Array. Receive the following: <' + fromData + '>');\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get singleConverter(): IConverter<any, Nullable<TagInfo>> {\r\n        return this._singleConverter;\r\n    }\r\n\r\n    set singleConverter(value: IConverter<any, Nullable<TagInfo>>) {\r\n        this._singleConverter = value;\r\n    }\r\n}\r\n","import {makeGuid} from \"../../../framework.visual/extras/utils/uniqueIdUtils\";\r\nimport {TagInfo} from \"../../../model\";\r\nimport {Converter} from \"../../common/converters/converter\";\r\n\r\nexport class GetTagResponseConverter extends Converter<any, TagInfo> {\r\n    convert(fromData: any, reject: any): TagInfo {\r\n        return new TagInfo(\r\n            makeGuid(),\r\n            fromData\r\n        );\r\n    }\r\n}\r\n","import {EntityProvider} from \"../../common/providers/entityProvider\";\r\nimport {TagInfo} from \"../../../model\";\r\nimport {GetTagArrayRequestConverter} from \"../converters/getTagArrayRequestConverter\";\r\nimport {GetTagArrayResponseConverter} from \"../converters/getTagArrayResponseConverter\";\r\nimport {GetTagResponseConverter} from \"../converters/getTagResponseConverter\";\r\n\r\nconst serverUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport class TagProvider extends EntityProvider<TagInfo> {\r\n    baseUrl: string = `${serverUrl}/-custom-shared-tags`;\r\n    public static class: string = 'TagProvider';\r\n\r\n    private getTagResponseConverter!: GetTagResponseConverter;\r\n\r\n    private getTagArrayRequestConverter!: GetTagArrayRequestConverter;\r\n    private getTagArrayResponseConverter!: GetTagArrayResponseConverter;\r\n\r\n    constructor() {\r\n        super();\r\n        super.appendClassName(TagProvider.class);\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        this.getTagResponseConverter = this.addConverter(GetTagResponseConverter);\r\n\r\n        this.getTagArrayRequestConverter = this.addConverter(GetTagArrayRequestConverter);\r\n        this.getTagArrayResponseConverter = this.addConverter(GetTagArrayResponseConverter);\r\n        this.getTagArrayResponseConverter.singleConverter = this.getTagResponseConverter;\r\n    }\r\n\r\n    getAll(uiRequestData?: any): Promise<TagInfo[]> {\r\n        return new Promise((resolve, reject) => {\r\n            super.sendGetAll(\r\n                () => this.getTagArrayRequestConverter.convert(uiRequestData),\r\n                (responseData, reject) => this.getTagArrayResponseConverter.convert(responseData, reject))\r\n                .then(data => {\r\n                    resolve(data);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n}\r\n\r\n\r\n","import {RoleInfo} from \"../../../../model\";\r\nimport {forEach, forEachKVP} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {ReferenceType} from \"../../../../model\";\r\nimport {Nullable} from \"../../../../framework/extras/typeUtils\";\r\nimport {referenceService} from \"../../../serviceComposition\";\r\nimport {Converter} from \"../../../common/converters/converter\";\r\n\r\nexport class GetSingleRoleResponseConverter extends Converter<any, Nullable<RoleInfo>>{\r\n    convert(fromData: Array<any>, reject: any): Nullable<RoleInfo> {\r\n\r\n        let body = fromData[0];\r\n\r\n        if (body === undefined) return null;\r\n\r\n        const { role_name:roleNames } = body;\r\n\r\n        let rolesInfos = referenceService.getAllReferences(ReferenceType.ROLE);\r\n\r\n        let result: Nullable<RoleInfo> = null;\r\n\r\n        if (roleNames) {\r\n            forEach(roleNames, (roleName:string) => {\r\n\r\n                let roleNameUpper: string = roleName.toUpperCase();\r\n\r\n                forEachKVP(rolesInfos, (itemKey: string, itemValue: RoleInfo) => {\r\n                    if (itemValue.title.toUpperCase() == roleNameUpper) {\r\n                        result = itemValue;\r\n                        return true;\r\n                    }\r\n                })\r\n\r\n            })\r\n        }\r\n\r\n\r\n        return result;\r\n    }\r\n}\r\n","import {RoleInfo} from \"../../../model\";\r\nimport {EntityProvider} from \"../../common/providers/entityProvider\";\r\nimport {Nullable} from \"../../../framework/extras/typeUtils\";\r\nimport { GetSingleRoleResponseConverter } from \"../converters/roles/getSingleRoleResponseConverter\";\r\n\r\nconst serverUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport class RoleProvider extends EntityProvider<RoleInfo> {\r\n\r\n    baseUrl: string = `${serverUrl}/users/-role-function`;\r\n    public static class: string = 'RoleProvider';\r\n    private getSingleRoleResponseConverter!: GetSingleRoleResponseConverter;\r\n\r\n    constructor() {\r\n        super();\r\n        super.appendClassName(RoleProvider.class);\r\n    }\r\n\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        this.getSingleRoleResponseConverter = this.addConverter(GetSingleRoleResponseConverter);\r\n    }\r\n\r\n    getSingle(id: string) : Promise<Nullable<RoleInfo>> {\r\n        return new Promise((resolve, reject) => {\r\n            super.sendGetSingle(id,\r\n                (responseData, reject) => this.getSingleRoleResponseConverter.convert(responseData, reject))\r\n                .then(data => {\r\n                    resolve(data);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import {Action, configureStore, PayloadAction, SliceCaseReducers, ThunkDispatch, Unsubscribe} from '@reduxjs/toolkit'\r\nimport thunk from \"redux-thunk\";\r\nimport config from \"../../config/config\";\r\nimport {combineReducers} from \"redux\";\r\nimport {bindInstanceMethods} from \"../extras/typeUtils\";\r\nimport {IStorage} from \"../api\";\r\n\r\n\r\nfunction root(state = config, action: PayloadAction) {\r\n    return state;\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: root,\r\n    middleware: [thunk]\r\n});\r\n\r\n// type EnhancedStore = typeof store;\r\n// // Infer the `RootState` and `AppDispatch` types from the redux itself\r\n// export type RootState = ReturnType<typeof store.getState>\r\n// // Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\n// export type AppDispatch = typeof store.dispatch\r\n// export type AppAsyncDispatch = ThunkDispatch<RootState, void, Action>;\r\n\r\n\r\nexport class AppDataStore implements IStorage {\r\n    dynamicReducers: Record<string, SliceCaseReducers<any>> = {};\r\n\r\n    constructor() {\r\n        bindInstanceMethods(this);\r\n    }\r\n\r\n    addEventHandlers(key: string, reducers: SliceCaseReducers<any>) {\r\n        this.dynamicReducers[key] = reducers;\r\n        let nextReducers = this.combiner(this.dynamicReducers);\r\n        store.replaceReducer(nextReducers);\r\n    }\r\n\r\n    private combiner(reducers: any): any {\r\n        let dynamicReducers = {root};\r\n        Object.assign(dynamicReducers, reducers);\r\n        return combineReducers(dynamicReducers)\r\n    }\r\n\r\n    sendEvent(action: PayloadAction) {\r\n        store.dispatch(action);\r\n    }\r\n\r\n    getState(): any {\r\n        return store.getState();\r\n    }\r\n\r\n    getStorage(): any {\r\n        return store;\r\n    }\r\n\r\n    sendEventAsync(action: any): (dispatch: any) => void {\r\n        return store.dispatch(action);\r\n    }\r\n\r\n    subscribe(listener: () => void) {\r\n        store.subscribe(listener);\r\n    }\r\n    unsubscribe(listener: Unsubscribe) {\r\n        store.subscribe(listener);\r\n    }\r\n}\r\n","import {RepoItem} from \"../framework/services/repoService/repoItem\";\r\nimport {PERMISSION_ENTITY, PERMISSION_LEVEL, PERMISSION_OPERATOR} from \"../api\";\r\n\r\nexport class PermissionInfo extends RepoItem {\r\n  public static class: string = 'PermissionInfo';\r\n\r\n  entity: PERMISSION_ENTITY = PERMISSION_ENTITY.NONE;\r\n  operator: PERMISSION_OPERATOR = PERMISSION_OPERATOR.NONE;\r\n  level: PERMISSION_LEVEL = PERMISSION_LEVEL.NONE;\r\n\r\n  constructor(id: string)\r\n  {\r\n    super(id);\r\n\r\n    this.appendClassName(PermissionInfo.class);\r\n  }\r\n}\r\n","import {Converter} from \"../../common/converters/converter\";\r\nimport {Nullable} from \"../../../framework/extras/typeUtils\";\r\nimport {forEach} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {PermissionInfo} from \"../../../model/permissionInfo\";\r\nimport {\r\n    PERMISSION_ENTITY,\r\n    PERMISSION_LEVEL,\r\n    PERMISSION_OPERATOR,\r\n} from \"../../../api\";\r\n\r\n\r\nexport class GetPermissionArrayResponseConverter extends Converter<any, PermissionInfo[]>{\r\n    convert(fromData: any, reject: any, options: {userId: string}): PermissionInfo[] {\r\n\r\n        let body = fromData[0];\r\n\r\n        if (body === undefined) return [];\r\n\r\n        const { function_name:permissions } = body;\r\n\r\n        let result: PermissionInfo[] = [];\r\n\r\n        if (permissions != null) {\r\n\r\n            // gonna need some kind of conversion here\r\n\r\n            // create all permissions here\r\n\r\n            let lookup: Record<string, Record<string, PERMISSION_LEVEL>> = {};\r\n\r\n            forEach(permissions, (permission:string) => {\r\n                let params = permission.split(':');\r\n\r\n                let rawEntity = params[0];\r\n                let rawOperator = params[1];\r\n                let rawLevel = params[2];\r\n\r\n                let permissionInfo = new PermissionInfo(`${rawEntity}-${rawOperator}`);\r\n                permissionInfo.entity = this.getEntity(rawEntity);\r\n                permissionInfo.operator = this.getOperator(rawOperator);\r\n                permissionInfo.level = this.getLevel(rawLevel);\r\n\r\n                let cacheEntity = lookup[permissionInfo.entity];\r\n\r\n                if (cacheEntity == null) {\r\n                    lookup[permissionInfo.entity] = {};\r\n                }\r\n\r\n                let cacheOperator = lookup[permissionInfo.entity][permissionInfo.operator];\r\n\r\n                if (cacheOperator == null) {\r\n                    lookup[permissionInfo.entity][permissionInfo.operator] = permissionInfo.level;\r\n                    result.push(permissionInfo);\r\n                }\r\n                else {\r\n                    let existingLevel = lookup[permissionInfo.entity][permissionInfo.operator];\r\n\r\n                    if (permissionInfo.level > existingLevel) {\r\n                        lookup[permissionInfo.entity][permissionInfo.operator] = permissionInfo.level;\r\n                        result.push(permissionInfo);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getEntity(param:string) : PERMISSION_ENTITY {\r\n        let result = PERMISSION_ENTITY.NONE;\r\n\r\n        switch(param) {\r\n            case 'document':\r\n                result = PERMISSION_ENTITY.DOCUMENT;\r\n                break;\r\n            case 'tags':\r\n                result = PERMISSION_ENTITY.TAG;\r\n                break;\r\n            case 'user':\r\n                result = PERMISSION_ENTITY.USER;\r\n                break;\r\n            case 'stat':\r\n                result = PERMISSION_ENTITY.STAT;\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getOperator(param:string) : PERMISSION_OPERATOR {\r\n        let result = PERMISSION_OPERATOR.NONE;\r\n\r\n        switch(param) {\r\n            case 'delete':\r\n                result = PERMISSION_OPERATOR.DELETE;\r\n                break;\r\n            case 'download':\r\n                result = PERMISSION_OPERATOR.DOWNLOAD;\r\n                break;\r\n            case 'get':\r\n                result = PERMISSION_OPERATOR.GET;\r\n                break;\r\n            case 'modify':\r\n                result = PERMISSION_OPERATOR.MODIFY;\r\n                break;\r\n            case 'post':\r\n                result = PERMISSION_OPERATOR.POST;\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getLevel(param:string) : PERMISSION_LEVEL {\r\n        let result = PERMISSION_LEVEL.NONE;\r\n\r\n        switch(param) {\r\n            case 'self':\r\n                result = PERMISSION_LEVEL.SELF;\r\n                break;\r\n            case 'group':\r\n                result = PERMISSION_LEVEL.GROUP;\r\n                break;\r\n            case '*':\r\n                result = PERMISSION_LEVEL.ANY;\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","import {Converter} from \"../../common/converters/converter\";\r\n\r\n\r\nexport class GetPermissionArrayRequestConverter extends Converter<any, any>{\r\n    convert(uiRequestData: {userId:string}): any {\r\n        return `/${uiRequestData.userId}`;\r\n    }\r\n}\r\n","import {EntityProvider} from \"../../common/providers/entityProvider\";\r\nimport {Nullable} from \"../../../framework/extras/typeUtils\";\r\nimport {GetPermissionArrayResponseConverter} from \"../converters/getPermissionArrayResponseConverter\";\r\nimport {PermissionInfo} from \"../../../model/permissionInfo\";\r\nimport {GetPermissionArrayRequestConverter} from \"../converters/getPermissionArrayRequestConverter\";\r\nimport {ReferenceType} from \"../../../model\";\r\n\r\nconst serverUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport class PermissionProvider extends EntityProvider<PermissionInfo> {\r\n\r\n    baseUrl: string = `${serverUrl}/users/-role-function`;\r\n    public static class: string = 'PermissionProvider';\r\n    private getPermissionArrayResponseConverter!: GetPermissionArrayResponseConverter;\r\n    private getPermissionArrayRequestConverter!: GetPermissionArrayRequestConverter;\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        super.appendClassName(PermissionProvider.class);\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        this.getPermissionArrayResponseConverter = this.addConverter(GetPermissionArrayResponseConverter);\r\n        this.getPermissionArrayRequestConverter = this.addConverter(GetPermissionArrayRequestConverter);\r\n    }\r\n\r\n    getAll(uiRequestData: {userId:string}) : Promise<PermissionInfo[]> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            super.sendGetAll(\r\n                () => this.getPermissionArrayRequestConverter.convert(uiRequestData),\r\n                (responseData, reject) => this.getPermissionArrayResponseConverter.convert(responseData, reject, uiRequestData))\r\n                .then(data => {\r\n                    resolve(data);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import {\r\n    IAuthorizationService,\r\n    IEntityProvider,\r\n    PERMISSION_ENTITY,\r\n    PERMISSION_LEVEL,\r\n    PERMISSION_OPERATOR,\r\n} from \"../../api\";\r\nimport {Nullable} from \"../../framework/extras/typeUtils\";\r\nimport {IStorage} from \"../../framework/api\";\r\nimport {Plugin} from \"../../framework/extras/plugin\";\r\nimport {createSelector, OutputSelector, Selector} from \"@reduxjs/toolkit\";\r\nimport {PermissionInfo} from \"../../model/permissionInfo\";\r\nimport {forEach} from \"../../framework.visual/extras/utils/collectionUtils\";\r\n\r\n// type AuthorizationState = {\r\n//     // permissions: Nullable<PERMISSION_TYPE[]>\r\n// }\r\n//\r\n// type AuthenticationSliceType = Slice<AuthorizationState,\r\n//     {\r\n//         // setPermissions: (state: AuthorizationState, action: PayloadAction<PERMISSION_TYPE[]>) => void;\r\n//     }>;\r\n\r\nexport class AuthorizationService extends Plugin implements IAuthorizationService {\r\n    public static readonly class:string = 'AuthorizationService';\r\n    private appDataStore: Nullable<IStorage> = null;\r\n\r\n    // private model: AuthenticationSliceType;\r\n\r\n    private permissionProvider?: Nullable<IEntityProvider<PermissionInfo>> = null;\r\n\r\n    private readonly permissionInfoSelector: Selector<any, Record<string, PermissionInfo>>;\r\n    private readonly getAllPermissionsGroupedByEntitySelector: OutputSelector<any, Record<string, Record<string, PERMISSION_LEVEL>>, (res: Record<string, PermissionInfo>) => Record<string, Record<string, PERMISSION_LEVEL>>>;\r\n\r\n    constructor() {\r\n        super();\r\n        this.appendClassName(AuthorizationService.class);\r\n\r\n        // this.model = createSlice({\r\n        //     name: 'application/authorization',\r\n        //     initialState: {\r\n        //         // permissions: null\r\n        //     } as AuthorizationState,\r\n        //     reducers: {\r\n        //         // setPermissions: (state, action) => {\r\n        //         //     state.permissions = action.payload;\r\n        //         // }\r\n        //     },\r\n        // });\r\n\r\n        this.permissionInfoSelector = createSelector(\r\n            [() => this.getAll<PermissionInfo>(PermissionInfo.class)],\r\n            (permissions) => {\r\n                return permissions;\r\n            }\r\n        )\r\n\r\n        this.getAllPermissionsGroupedByEntitySelector = createSelector(\r\n            [this.permissionInfoSelector],\r\n            (permissions) => {\r\n                let result: Record<string, Record<string, PERMISSION_LEVEL>> = {};\r\n\r\n                if (permissions != null) {\r\n                    forEach(permissions, (permission: PermissionInfo) => {\r\n                        if (permission.entity != null) {\r\n                            if (result[permission.entity] == null) {\r\n                                result[permission.entity] = {};\r\n                            }\r\n\r\n                            if (permission.operator != null) {\r\n                                result[permission.entity][permission.operator] = permission.level || PERMISSION_LEVEL.NONE;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n                }\r\n                return result;\r\n            }\r\n        );\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n\r\n        // this.appDataStore?.addEventHandlers(this.model.name, this.model.reducer);\r\n    }\r\n\r\n    stop() {\r\n        super.stop();\r\n    }\r\n\r\n    configure() {\r\n        super.configure();\r\n    }\r\n\r\n    setAppDataStore(appDataStore: IStorage) {\r\n        this.appDataStore = appDataStore;\r\n    }\r\n\r\n    // getAuthorizationState(): AuthorizationState {\r\n    //     return this.appDataStore?.getState()[this.model.name];\r\n    // }\r\n\r\n    fetchPermissions(userId: string): void {\r\n        this.removeAllByType(PermissionInfo.class);\r\n\r\n        this.permissionProvider?.getAll({userId})\r\n            .then(permissionInfos => {\r\n                if (permissionInfos != null) {\r\n                    this.addOrUpdateAllRepoItems(permissionInfos);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.removeAllById(PermissionInfo.class, userId);\r\n            })\r\n    }\r\n\r\n    getPermissionLevel(entity: PERMISSION_ENTITY, operator: PERMISSION_OPERATOR): PERMISSION_LEVEL {\r\n        let result = PERMISSION_LEVEL.NONE;\r\n\r\n        let permissions = this.getAllPermissionsGroupedByEntitySelector(this.getRepoState());\r\n\r\n        let permissionEntity = permissions[entity];\r\n        if (permissionEntity != null) {\r\n            let permissionLevel = permissionEntity[operator];\r\n            if (permissionLevel != null) {\r\n                result = permissionLevel;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getPermissions(): Record<string, PermissionInfo> {\r\n        return this.permissionInfoSelector(this.getRepoState());\r\n    }\r\n\r\n    hasPermission(entity: PERMISSION_ENTITY, operator: PERMISSION_OPERATOR, currentUserId?: string, entityOwnerId?: Nullable<string>): boolean {\r\n        let result = false;\r\n\r\n        let permissionLevel = this.getPermissionLevel(entity, operator);\r\n\r\n        if (permissionLevel == PERMISSION_LEVEL.ANY) {\r\n            result = true;\r\n        }\r\n        else if (permissionLevel == PERMISSION_LEVEL.SELF) {\r\n            if (currentUserId && entityOwnerId) {\r\n                result = entityOwnerId == currentUserId;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setPermissionProvider(provider: IEntityProvider<PermissionInfo>): void {\r\n        this.permissionProvider = provider;\r\n    }\r\n}\r\n","import {RepositoryService} from \"../framework/services/repoService/repoService\";\r\nimport {ILogService, IStorage} from \"../framework/api\";\r\nimport {LogService} from \"../framework/services/logService/logService\";\r\nimport {SelectionService} from \"../framework/services/selectionService/selectionService\";\r\nimport {DisplayService} from \"../framework/services/displayService/displayService\";\r\nimport {DocumentService} from \"./documents/documentService\";\r\nimport {ReferenceService} from \"./references/referenceService\";\r\nimport {UserService} from \"./users/userService\";\r\nimport {AuthenticationService} from \"./authentication/authenticationService\";\r\nimport {StatService} from \"./stats/statService\";\r\nimport {TagService} from \"./tags/tagService\";\r\nimport {ScenarioService} from \"./scenarioService/scenarioService\";\r\nimport {UserProvider} from \"./users/providers/userProvider\";\r\nimport {IRepositoryService} from \"../framework/api\";\r\nimport {ISelectionService} from \"../framework/api\";\r\nimport {IDisplayService} from \"../framework/api\";\r\nimport {IAuthorizationService, IScenarioService} from \"../api\";\r\nimport {IAuthenticationService} from \"../api\";\r\nimport {IDocumentService} from \"../api\";\r\nimport {IReferenceService} from \"../api\";\r\nimport {IStatService} from \"../api\";\r\nimport {ITagService} from \"../api\";\r\nimport {IUserService} from \"../api\";\r\nimport {IEntityProvider} from \"../api\";\r\nimport {HttpService} from \"../framework/services/httpService/httpService\";\r\nimport {IHttpService} from \"../framework/api\";\r\nimport {DocumentInfo} from \"../model\";\r\nimport {DocumentProvider} from \"./documents/providers/documentProvider\";\r\nimport {ReferenceInfo} from \"../model\";\r\nimport {ReferenceProvider} from \"./references/providers/referenceProvider\";\r\nimport {StatInfo} from \"../model\";\r\nimport {StatProvider} from \"./stats/providers/statProvider\";\r\nimport {TagInfo} from \"../model\";\r\nimport {TagProvider} from \"./tags/providers/tagProvider\";\r\nimport {IUserProvider} from \"../api\";\r\nimport {RoleInfo} from \"../model\";\r\nimport {RoleProvider} from \"./users/providers/roleProvider\";\r\nimport {AppDataStore} from \"../framework/redux/reduxStore\";\r\nimport {PermissionInfo} from \"../model/permissionInfo\";\r\nimport {PermissionProvider} from \"./authorization/providers/permissionProvider\";\r\nimport {AuthorizationService} from \"./authorization/authorizationService\";\r\n\r\n// create the framework plugins\r\nexport const appDataStore:IStorage = new AppDataStore();\r\nexport const logService: ILogService = new LogService();\r\nexport const repoService: IRepositoryService = new RepositoryService();\r\nexport const selectionService: ISelectionService = new SelectionService();\r\nexport const displayService: IDisplayService = new DisplayService();\r\nconst scenarioService: IScenarioService = new ScenarioService();\r\nconst httpService:IHttpService = new HttpService();\r\n\r\n\r\n// create the entity providers\r\nconst documentProvider: IEntityProvider<DocumentInfo> = new DocumentProvider();\r\nconst referenceProvider: IEntityProvider<ReferenceInfo> = new ReferenceProvider();\r\nconst statProvider: IEntityProvider<StatInfo> = new StatProvider();\r\nconst tagProvider: IEntityProvider<TagInfo> = new TagProvider();\r\nconst roleProvider: IEntityProvider<RoleInfo> = new RoleProvider();\r\nconst userProvider: IUserProvider = new UserProvider();\r\nconst permissionProvider: IEntityProvider<PermissionInfo> = new PermissionProvider()\r\n\r\n\r\n// create the application application\r\nexport const authenticationService: IAuthenticationService = new AuthenticationService();\r\nexport const authorizationService: IAuthorizationService = new AuthorizationService();\r\nexport const documentService: IDocumentService = new DocumentService();\r\nexport const referenceService: IReferenceService = new ReferenceService();\r\nexport const statService: IStatService = new StatService();\r\nexport const tagService: ITagService = new TagService();\r\nexport const userService: IUserService = new UserService();\r\n\r\n\r\n// create the ui application. jk. that's alot of work.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n// set references and start framework plugins\r\n//\r\n// log service\r\nlogService.configure();\r\nlogService.start();\r\n// repo service\r\nrepoService.setLogService(logService);\r\nrepoService.setStorage(appDataStore);\r\nrepoService.start();\r\n// selection service\r\nselectionService.setLogService(logService);\r\nselectionService.setAppDataStore(appDataStore);\r\nselectionService.start();\r\n// display service\r\ndisplayService.setLogService(logService);\r\ndisplayService.setStorage(appDataStore)\r\ndisplayService.start();\r\n// scenario service\r\nscenarioService.setLogService(logService);\r\nscenarioService.setRepositoryService(repoService);\r\nscenarioService.setDataAppStore(appDataStore);\r\nscenarioService.start();\r\n// http service\r\nhttpService.setLogService(logService);\r\nhttpService.setAuthenticationService(authenticationService);\r\nhttpService.start();\r\n\r\n\r\n// set references and start entity providers\r\n// documents\r\ndocumentProvider.setLogService(logService);\r\ndocumentProvider.setRepositoryService(repoService);\r\ndocumentProvider.setHttpService(httpService);\r\ndocumentProvider.start();\r\n// references\r\nreferenceProvider.setLogService(logService);\r\nreferenceProvider.setRepositoryService(repoService);\r\nreferenceProvider.setHttpService(httpService);\r\nreferenceProvider.start();\r\n// stats\r\nstatProvider.setLogService(logService);\r\nstatProvider.setRepositoryService(repoService);\r\nstatProvider.setHttpService(httpService);\r\nstatProvider.start();\r\n// tags\r\ntagProvider.setLogService(logService);\r\ntagProvider.setRepositoryService(repoService);\r\ntagProvider.setHttpService(httpService);\r\ntagProvider.start();\r\n// roles\r\nroleProvider.setLogService(logService);\r\nroleProvider.setRepositoryService(repoService);\r\nroleProvider.setHttpService(httpService);\r\nroleProvider.start();\r\n// users\r\nuserProvider.setLogService(logService);\r\nuserProvider.setRepositoryService(repoService);\r\nuserProvider.setHttpService(httpService);\r\nuserProvider.setRoleProvider(roleProvider);\r\nuserProvider.start();\r\n\r\npermissionProvider.setLogService(logService);\r\npermissionProvider.setRepositoryService(repoService);\r\npermissionProvider.setHttpService(httpService);\r\npermissionProvider.start();\r\n\r\n\r\n// set references and start application application\r\n// authentication service\r\nauthenticationService.setLogService(logService);\r\nauthenticationService.setRepositoryService(repoService);\r\nauthenticationService.setUserService(userService);\r\nauthenticationService.setUserProvider(userProvider);\r\nauthenticationService.setAppDataStore(appDataStore);\r\nauthenticationService.start();\r\n// authorization service\r\nauthorizationService.setLogService(logService);\r\nauthorizationService.setRepositoryService(repoService);\r\nauthorizationService.setPermissionProvider(permissionProvider);\r\nauthorizationService.start();\r\n// document service\r\ndocumentService.setLogService(logService);\r\ndocumentService.setRepositoryService(repoService);\r\ndocumentService.setUserService(userService);\r\ndocumentService.setDocumentProvider(documentProvider);\r\ndocumentService.start();\r\n// reference service\r\nreferenceService.setLogService(logService);\r\nreferenceService.setRepositoryService(repoService);\r\nreferenceService.setReferenceProvider(referenceProvider);\r\nreferenceService.start();\r\n// stat service\r\nstatService.setLogService(logService);\r\nstatService.setRepositoryService(repoService);\r\nstatService.setStatProvider(statProvider);\r\nstatService.start();\r\n// tag service\r\ntagService.setLogService(logService);\r\ntagService.setRepositoryService(repoService);\r\ntagService.setTagProvider(tagProvider);\r\ntagService.start();\r\n// user service\r\nuserService.setLogService(logService);\r\nuserService.setRepositoryService(repoService);\r\nuserService.setSelectionService(selectionService);\r\nuserService.setReferenceService(referenceService);\r\nuserService.setUserProvider(userProvider);\r\nuserService.setAuthorizationService(authorizationService);\r\nuserService.start();\r\n\r\n// for the UI Components, using the Provider/Consumer pattern seems to be the way to go\r\n// not entirely sure yet for those pieces\r\n\r\n\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const ArrowDownSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"M 7.997283,16 0,7.9972826 H 16 32 L 24.002718,16 C 19.604212,20.401495 16.002989,24.002717 16,24.002717 15.997,24.002717 12.395788,20.401495 7.997283,16 Z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const ArrowUpSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"M 8,16 15.999999,8.0000002 24,16 32,24 H 15.999999 0 Z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport './comboBox.css';\r\nimport {ComboBoxItemProps, ComboBoxItemState} from \"./comboBoxModel\";\r\nimport CheckBox from \"../checkBox/checkBox\";\r\n\r\nclass ComboBoxItem extends Component<ComboBoxItemProps, ComboBoxItemState> {\r\n    constructor(props: ComboBoxItemProps | Readonly<ComboBoxItemProps>) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {className, title, selected, onClick, multiSelect, readonly} = this.props;\r\n\r\n        let cn = \"list-cell header-3 h-gap-2\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        if (readonly) {\r\n            cn += ` readonly`;\r\n        } else {\r\n            cn += ` cursor-pointer`;\r\n        }\r\n\r\n        if (selected) {\r\n            cn += ` selected`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn} onClick={readonly ? undefined : onClick}>\r\n                {\r\n                    multiSelect && !readonly &&\r\n                    <CheckBox selected={selected}/>\r\n                }\r\n                <div className={'text-wrap title'}>{title}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComboBoxItem;\r\n","import React, {Component} from \"react\";\r\nimport './comboBox.css';\r\nimport {ArrowDownSVG} from \"../../svgs/arrowDownSVG\";\r\nimport {ArrowUpSVG} from \"../../svgs/arrowUpSVG\";\r\nimport ComboBoxItem from \"./comboBoxItem\";\r\nimport Portal from \"../portal/portal\";\r\nimport {forEachKVP} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport {ComboBoxProps, ComboBoxState} from './comboBoxModel';\r\nimport Button from \"../button/button\";\r\n\r\nclass ComboBox extends Component<ComboBoxProps, ComboBoxState> {\r\n    timeout = null;\r\n\r\n    constructor(props: ComboBoxProps | Readonly<ComboBoxProps>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: false,\r\n            selectedItemIds: {},\r\n        }\r\n\r\n        bindInstanceMethods(this);\r\n    }\r\n\r\n    _onClickHandler = () => {\r\n        const { onClick } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            this._close();\r\n        }\r\n        else {\r\n            this._open();\r\n        }\r\n\r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n    };\r\n\r\n    _onSelectHandler(id: string) {\r\n        const { onSelect, multiSelect } = this.props;\r\n        const { selectedItemIds } = this.state;\r\n\r\n        if (multiSelect) {\r\n\r\n            let selectedItems = {};\r\n\r\n            if (selectedItemIds[id]) {\r\n                delete selectedItemIds[id];\r\n                selectedItems = {\r\n                    ...selectedItemIds,\r\n                }\r\n            } else {\r\n                selectedItems = {\r\n                    ...selectedItemIds,\r\n                    [id]: id,\r\n                }\r\n            }\r\n\r\n            this.setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    selectedItemIds: selectedItems,\r\n                }\r\n\r\n            }, () => {\r\n                if (onSelect) {\r\n                    const { selectedItemIds } = this.state;\r\n                    let tmpArray = Object.keys(selectedItemIds);\r\n                    onSelect(Array.from(tmpArray));\r\n                }\r\n            })\r\n        } else {\r\n            this.setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    selectedItemIds: {[id]: id},\r\n                }\r\n\r\n            }, () => {\r\n                this._close();\r\n                if (onSelect) {\r\n                    onSelect(id);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    _clear() {\r\n        const { onSelect } = this.props;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            selectedItemIds: {},\r\n        }, () => {\r\n            if (onSelect) {\r\n                const { selectedItemIds } = this.state;\r\n                let tmpArray = Object.keys(selectedItemIds);\r\n                onSelect(Array.from(tmpArray));\r\n            }\r\n        })\r\n    }\r\n\r\n    _open() {\r\n        this.setState({\r\n            ...this.state,\r\n            selected: true,\r\n        });\r\n    }\r\n\r\n    _close() {\r\n        this.setState({\r\n            ...this.state,\r\n            selected: false,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {className, id, title, onSelect, items, graphic:Graphic, disable, light, dirty, multiSelect, readonly, ...rest} = this.props;\r\n\r\n        const { selected } = this.state;\r\n\r\n        let cn = \"combo-box\";\r\n\r\n        let lcn = \"w-100 list-items\";\r\n\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        if (light) {\r\n            cn += ` light`\r\n            lcn += ` light`;\r\n        }\r\n\r\n        if (dirty) {\r\n            cn += ` dirty`;\r\n        }\r\n\r\n        if (selected) {\r\n            cn += ` selected`;\r\n        }\r\n\r\n        if (disable) {\r\n            cn += ` disabled`;\r\n        }\r\n\r\n        let comboBoxItems: any[] = [];\r\n\r\n        if (items) {\r\n            const { selectedItemIds } = this.state;\r\n\r\n            forEachKVP(items, (itemKey: string, itemValue: { id: string; title: string; selected: boolean; }) => {\r\n                const { id:itemId, title:itemTitle, selected:itemSelected } = itemValue;\r\n\r\n                let value = false;\r\n                if ((selectedItemIds && selectedItemIds[itemId]) || (title === itemTitle)) {\r\n                    value = true;\r\n                }\r\n\r\n                comboBoxItems.push(\r\n                    <ComboBoxItem className={'d-flex'} key={itemId} title={itemTitle} multiSelect={multiSelect}\r\n                                  onClick={() => this._onSelectHandler(itemId || \"\")} selected={value} readonly={readonly}/>\r\n                )\r\n            });\r\n        }\r\n\r\n        let arrowSVG = <ArrowDownSVG/>;\r\n        if (selected) {\r\n            arrowSVG = <ArrowUpSVG/>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Portal\r\n                    isOpen={selected}\r\n                    zIndex={9999}\r\n                    enterClass={'growVertical'}\r\n                    exitClass={'shrinkVertical'}\r\n                    timeout={200}\r\n                    onShouldClose={this._onClickHandler}\r\n                    portalContent={\r\n                        <div className={`position-absolute w-100 ${multiSelect ? \"\" : \"shadow\"}`}>\r\n                            <ul className={lcn}>\r\n                                {comboBoxItems}\r\n                            </ul>\r\n                            {\r\n                                multiSelect &&\r\n                                <div className={\"d-flex bg-advisory p-2 justify-content-center shadow\"}>\r\n                                    <Button className={\"clear-button\"} light={true} text={\"Clear\"} onClick={() => this._clear()}/>\r\n                                </div>\r\n\r\n                            }\r\n                        </div>\r\n\r\n                    }>\r\n                    <div className={cn} {...rest} tabIndex={0}>\r\n                        <div onClick={disable ? undefined : this._onClickHandler} className={\"list-cell h-gap-1 w-100 d-flex align-items-center justify-content-between\"}>\r\n                            {\r\n                                Graphic &&\r\n                                <Graphic className={'small-image-container mr-3'}/>\r\n                            }\r\n                            <div className={\"header-3 flex-fill\"}>{title}</div>\r\n                            {\r\n                                Graphic === undefined &&\r\n                                <div className={\"d-flex align-items-center tiny-image-container combo-box-arrow pe-none\"}>{arrowSVG}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Portal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComboBox;\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const PersonalSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 0.01794,29.7421 c 0,-2.46291 0.003,-2.497 0.23453,-3.13263 0.7911,-2.16766 3.74721,-4.14732 8.08537,-5.41464 1.8634,-0.54436 3.61744,-0.88633 5.73876,-1.11884 0.87677,-0.0961 2.98043,-0.0962 3.90629,-2e-4 2.38502,0.24734 5.09434,0.84911 7.10672,1.57848 3.67932,1.33355 5.96047,3.05037 6.66708,5.01771 0.21441,0.597 0.22537,0.74928 0.22537,3.1314 V 32 H 16 0.01794 Z M 15.25346,15.97526 C 11.42963,15.6061 8.38381,12.53911 8.02948,8.7010897 c -0.18035,-1.95352 0.37574,-3.89403 1.57332,-5.49023 0.7664,-1.0215 1.70756,-1.80126 2.87067,-2.37836995 3.06039,-1.51852 6.72438,-0.92257 9.13055,1.48506995 0.93161,0.93218 1.5778,1.96218 1.97104,3.14174 0.94733,2.84159 0.27336,5.8807103 -1.78038,8.0281703 -0.50524,0.52829 -0.88346,0.84617 -1.45216,1.22048 -1.46798,0.9662 -3.35096,1.43511 -5.08906,1.26731 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const GlobalSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 15.676224,31.979089 c -1.4379,-0.21 -2.72774,-1.56949 -3.81244,-4.01832 -0.59913,-1.35259 -1.35735,-4.04803 -1.55032,-5.51129 l -0.0357,-0.2708 h 5.70636 c 4.61462,0 5.70636,0.0127 5.70636,0.0663 0,0.12337 -0.21449,1.24518 -0.36209,1.89378 -0.7593,3.3365 -2.12252,6.09501 -3.54382,7.17096 -0.6958,0.52673 -1.44857,0.76573 -2.10834,0.66937 z m -4.94674,-0.87493 c -4.1121599,-1.42419 -7.5158299,-4.53372 -9.3322199,-8.52573 l -0.18189,-0.39975 h 3.50155 3.50156 l 0.0601,0.37396 c 0.5172,3.22024 1.60835,6.41777 2.8074299,8.22694 0.15503,0.23391 0.29629,0.44861 0.31391,0.47712 0.0514,0.0832 -0.0683,0.056 -0.6704,-0.15254 z m 9.89037,0.0883 c 0.61663,-0.94136 0.99537,-1.63723 1.36862,-2.51458 0.7149,-1.68046 1.26175,-3.58467 1.63736,-5.70154 0.0753,-0.42454 0.14282,-0.77786 0.14998,-0.78515 0.007,-0.007 1.58359,-0.007 3.50318,0 l 3.49015,0.0133 -0.43486,0.87688 c -1.58279,3.19165 -4.06407,5.66307 -7.27691,7.248 -0.8587,0.4236 -2.25444,0.97919 -2.45991,0.97919 -0.0305,0 -0.0208,-0.0501 0.0224,-0.11606 z M 0.52470413,20.076719 c -0.0551,-0.0903 -0.30409,-1.31017 -0.40566,-1.98729 -0.09,-0.59985 -0.11048,-0.97813 -0.11241,-2.07472 -0.003,-1.46733 0.0779,-2.23193 0.36917,-3.50752 l 0.14135,-0.61897 3.73095997,-0.0132 3.73096,-0.0132 -0.0295,0.19377 c -0.10961,0.72079 -0.15919,1.926 -0.15969,3.88182 -5.2e-4,1.91886 0.066,3.64162 0.15686,4.06201 l 0.0251,0.11606 h -3.71178 c -2.04148,0 -3.72239997,-0.0174 -3.73537997,-0.0387 z m 9.44012997,-0.23211 c -0.11379,-0.99627 -0.15909,-2.10684 -0.15834,-3.88148 7.5e-4,-1.78227 0.0305,-2.49637 0.1574,-3.77832 l 0.0319,-0.32238 h 5.9931099 5.99311 l 0.0626,0.76082 c 0.17609,2.14084 0.17602,4.58295 -1.5e-4,6.73134 l -0.0624,0.76082 h -5.99313 -5.9931399 l -0.0309,-0.2708 z m 14.0655799,0.0516 c 0.21954,-1.57775 0.21954,-6.23679 0,-7.81454 l -0.0305,-0.21922 h 3.71727 3.71728 l 0.0549,0.19343 c 0.22646,0.79804 0.43003,2.19964 0.4926,3.39146 0.0649,1.23685 -0.15155,3.20096 -0.49227,4.46627 l -0.0543,0.20182 h -3.71771 -3.71771 z M 1.3115541,9.5799788 c 0.2697,-0.62159 0.37752,-0.83823 0.69985,-1.40612 0.99606,-1.75492 2.40511,-3.42144 3.92104,-4.63752 1.458,-1.16961 3.26225,-2.15286 5.0195299,-2.73547996 0.23585,-0.0782 0.43661,-0.13397 0.44612,-0.12395 0.01,0.01 -0.12094,0.22713 -0.28991,0.48245996 -1.2243899,1.85014 -2.3286499,5.06395 -2.8312799,8.24008 l -0.0633,0.39975 h -3.4986 -3.49861 z m 8.9798699,0.10317 c 6.5e-4,-0.2037 0.35629,-1.89332 0.5727,-2.72091 0.98314,-3.7597 2.57592,-6.26219996 4.36419,-6.85679996 0.38298,-0.12734 0.98956,-0.14108 1.40046,-0.0317 1.82224,0.48501 3.46935,3.05465996 4.51623,7.04576996 0.16726,0.63766 0.54547,2.44745 0.54547,2.61015 0,0.058 -0.95201,0.0696 -5.69971,0.0696 h -5.69972 l 3.6e-4,-0.11605 z m 13.43435,-0.0774 c -0.58841,-3.48906 -1.54443,-6.33217 -2.80638,-8.34584 -0.19467,-0.31063996 -0.34778,-0.57122996 -0.34024,-0.57908996 0.008,-0.008 0.25487,0.0651 0.54962,0.16216 3.4578,1.13846996 6.61355,3.68130996 8.55907,6.89672996 0.38027,0.62849 1.02933,1.89704 1.02933,2.01176 0,0.0288 -1.3829,0.0477 -3.47939,0.0477 h -3.47939 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from \"react\";\r\nimport './globalSwitchButton.css';\r\nimport {PersonalSVG} from \"../../svgs/personalSVG\";\r\nimport {GlobalSVG} from \"../../svgs/globalSVG\";\r\nimport {ToggleButtonProps, ToggleButtonState} from \"./globalSwitchButtonModel\";\r\n\r\nclass GlobalSwitchButton extends React.Component<ToggleButtonProps, ToggleButtonState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {className, onClick, isGlobal, light} = this.props;\r\n\r\n        let cn = 'global-switch-button cursor-pointer';\r\n\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        if (light) {\r\n            cn += ` light`;\r\n        }\r\n\r\n        if (isGlobal) {\r\n            cn += ` global`;\r\n        }\r\n\r\n        return <div className={cn} onClick={onClick}>\r\n            <div className={'d-flex h-gap-2'}>\r\n                <PersonalSVG className={\"personal-svg\"}/>\r\n                <GlobalSVG className={\"global-svg\"}/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default GlobalSwitchButton;\r\n","import React, {Component} from 'react';\r\nimport './documentPanel.css';\r\nimport Button from \"../../theme/widgets/button/button\";\r\nimport TextEdit from \"../../theme/widgets/textEdit/textEdit\";\r\nimport {arrayEquals, forEach} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {LoadingIndicator} from \"../../theme/widgets/loadingIndicator/loadingIndicator\";\r\nimport {ParamType} from \"../../../model\";\r\nimport ComboBox from \"../../theme/widgets/comboBox/comboBox\";\r\nimport Tag from \"../../theme/widgets/tag/tag\";\r\nimport GlobalSwitchButton from \"../../theme/widgets/globalSwitchButton/globalSwitchButton\";\r\nimport {bindInstanceMethods} from \"../../../framework/extras/typeUtils\";\r\nimport {DocumentPanelProps, DocumentPanelState, DocumentInfoVM, EditPropertyVM} from \"./documentPanelModel\";\r\nimport {InfoSVG} from \"../../theme/svgs/infoSVG\";\r\nimport Card from \"../../theme/widgets/card/card\";\r\nimport CheckBox from \"../../theme/widgets/checkBox/checkBox\";\r\n\r\nclass DocumentPanelView extends Component<DocumentPanelProps, DocumentPanelState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        bindInstanceMethods(this);\r\n\r\n        this.state = {\r\n            isExpanded: false,\r\n            tmpDocument: {},\r\n            isDirty: false,\r\n            isGlobal: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { document } = this.props;\r\n        const { id } = document || {};\r\n\r\n        this.setTmpDocument({id});\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<DocumentPanelProps>, prevState: Readonly<DocumentPanelState>, snapshot?: any) {\r\n        const { document } = this.props;\r\n\r\n        if (document !== prevProps.document) {\r\n            this.refreshDirtyFlag();\r\n\r\n            const {id} = document || {};\r\n            const {id: prevId } = prevProps.document || {};\r\n\r\n            if (id !== prevId) {\r\n                this.setTmpDocument({id});\r\n            }\r\n        }\r\n    }\r\n\r\n    setTmpDocument(doc: DocumentInfoVM) {\r\n        this.setState({\r\n            ...this.state,\r\n            tmpDocument: doc\r\n        }, () => this.refreshDirtyFlag());\r\n    }\r\n\r\n    setExpanded(value: boolean) {\r\n        this.setState({\r\n            ...this.state,\r\n            isExpanded: value\r\n        });\r\n    }\r\n\r\n    onTmpDocumentChanged(name: string, value: any) {\r\n\r\n        const { tmpDocument } = this.state;\r\n        const { document } = this.props;\r\n\r\n        console.log(`${name} - ${value}`)\r\n\r\n        if (document) {\r\n            let nextDoc = {\r\n                ...tmpDocument,\r\n                [name]: value\r\n            };\r\n            if (document[name] === value) {\r\n                delete nextDoc[name];\r\n            }\r\n            this.setTmpDocument(nextDoc);\r\n        }\r\n    }\r\n\r\n    refreshDirtyFlag() {\r\n        const {document} = this.props;\r\n        const {tmpDocument } = this.state;\r\n\r\n        if (!document) return;\r\n\r\n        let nextTmpDocument = {\r\n            ...tmpDocument\r\n        };\r\n        let dirty = false;\r\n\r\n        let keysToDelete = [];\r\n        let itemKeys = Object.keys(nextTmpDocument), itemsLength = itemKeys.length;\r\n        for (let index = 0; index < itemsLength; index++) {\r\n            let key = itemKeys[index];\r\n\r\n            if (Array.isArray(tmpDocument[key])) {\r\n                if (arrayEquals(tmpDocument[key], document[key])) {\r\n                    keysToDelete.push(key);\r\n                }\r\n                else {\r\n                    dirty = true;\r\n                }\r\n            }\r\n            else {\r\n                if (tmpDocument[key] === document[key]) {\r\n                    keysToDelete.push(key);\r\n                }\r\n                else {\r\n                    dirty = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        forEach(keysToDelete, (key: string) => {\r\n            if (key !== 'id') {\r\n                delete nextTmpDocument[key];\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            tmpDocument: nextTmpDocument,\r\n            isDirty: dirty\r\n        })\r\n    }\r\n\r\n    updateDocument() {\r\n        const { onUpdateDocument } = this.props;\r\n        const { tmpDocument } = this.state;\r\n\r\n        onUpdateDocument({...tmpDocument});\r\n    }\r\n\r\n    removeDocument() {\r\n        const { onRemoveDocument, document } = this.props;\r\n        const { id } = document || {};\r\n\r\n        if (id) {\r\n            onRemoveDocument(id);\r\n        }\r\n    }\r\n\r\n    cancelEdit() {\r\n        const { document } = this.props;\r\n        const { id } = document || {};\r\n\r\n        this.setTmpDocument({\r\n            id\r\n        });\r\n    }\r\n\r\n    addNewPublicTag() {\r\n        const { editProperties, document } = this.props;\r\n        const { tmpDocument } = this.state;\r\n        const {id, title} = editProperties['public_tag'];\r\n\r\n        let originalValue = document ? document[id] : '';\r\n        originalValue = originalValue || '';\r\n\r\n        let editValue = tmpDocument ? tmpDocument[id] : '';\r\n\r\n        let value = editValue ? editValue : originalValue;\r\n\r\n        let text = '';\r\n        forEach(value, (tag: string) => {\r\n            text += `${tag}, `;\r\n        });\r\n\r\n        if (text.length > 0) {\r\n            text = text.trim();\r\n            text = text.slice(0, -1);\r\n        }\r\n        let values = text.split(',');\r\n        let result = [];\r\n        forEach(values, (tag: string) => {\r\n            let text = tag.trim();\r\n            result.push(text);\r\n        });\r\n\r\n        result.push(\"-1\");\r\n\r\n        this.onTmpDocumentChanged('public_tag', result)\r\n    }\r\n\r\n    addNewPrivateTag() {\r\n        const { editProperties, document } = this.props;\r\n        const { tmpDocument } = this.state;\r\n\r\n        const {id, title} = editProperties['private_tag'];\r\n\r\n        let originalValue = document ? document[id] : '';\r\n        originalValue = originalValue || '';\r\n\r\n        let editValue = tmpDocument ? tmpDocument[id] : '';\r\n\r\n        let value = editValue ? editValue : originalValue;\r\n\r\n        let text = '';\r\n        forEach(value, (tag: string) => {\r\n            text += `${tag}, `;\r\n        });\r\n\r\n        if (text.length > 0) {\r\n            text = text.trim();\r\n            text = text.slice(0, -1);\r\n        }\r\n        let values = text.split(',');\r\n        let result = [];\r\n        forEach(values, (tag: string) => {\r\n            let text = tag.trim();\r\n            result.push(text);\r\n        });\r\n\r\n        result.push(\"-1\");\r\n\r\n        this.onTmpDocumentChanged('private_tag', result.toString())\r\n    }\r\n\r\n    toggleGlobal() {\r\n        const { isGlobal } = this.state;\r\n        this.setState({\r\n            ...this.state,\r\n            isGlobal: !isGlobal,\r\n        })\r\n    }\r\n\r\n    getCellRenderer(tmpDocument: DocumentInfoVM, document: DocumentInfoVM, editProperty: EditPropertyVM, isGlobal?: boolean) {\r\n        const { canModify } = this.props.permissions;\r\n        const {id, type, title='test', options={}, long=false} = editProperty;\r\n        const { id:document_id } = document;\r\n\r\n        let cellRenderer = null;\r\n\r\n        let originalValue = document ? document[id] : '';\r\n        originalValue = originalValue || '';\r\n\r\n        let editValue = tmpDocument ? tmpDocument[id] : '';\r\n\r\n        let dirty = !!editValue\r\n        let value = editValue ? editValue : originalValue;\r\n\r\n        switch (type) {\r\n            case ParamType.NUMBER:\r\n            case ParamType.STRING: {\r\n                if (id === 'publication_date') {\r\n                    cellRenderer = (\r\n                        <div key={id}>\r\n                            <TextEdit className={`text-field align-self-center ${long ? \"w-100\" : \"\"}`}\r\n                                      type={'date'}\r\n                                      placeholder={title}\r\n                                      name={id}\r\n                                      dirty={dirty}\r\n                                      value={value}\r\n                                      disable={document_id === undefined}\r\n                                      edit={document_id !== undefined && canModify}\r\n                                      onSubmit={this.onTmpDocumentChanged}/>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    cellRenderer = (\r\n                        <div key={id}>\r\n                            <TextEdit className={`text-field align-self-center ${long ? \"w-100\" : \"\"}`}\r\n                                      placeholder={title}\r\n                                      name={id}\r\n                                      dirty={dirty}\r\n                                      value={value}\r\n                                      disable={document_id === undefined}\r\n                                      edit={document_id !== undefined && canModify}\r\n                                      onSubmit={this.onTmpDocumentChanged}/>\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n            case ParamType.ARRAY: {\r\n                let text = '';\r\n                forEach(value, (tag: string) => {\r\n                    text += `${tag}, `;\r\n                });\r\n\r\n                if (text.length > 0) {\r\n                    text = text.trim();\r\n                    text = text.slice(0, -1);\r\n                }\r\n\r\n                let onClick = (name: string, value: string) => {\r\n\r\n                    let values = text.split(',');\r\n                    let result: string[] = [];\r\n                    forEach(values, (tag: string) => {\r\n                        let text = tag.trim();\r\n                        if (value !== text) {\r\n                            result.push(text);\r\n                        }\r\n                    });\r\n                    this.onTmpDocumentChanged(name, result);\r\n                }\r\n\r\n                let onSubmit = (name: string, oldValue: string, newValue: string) => {\r\n                    let values = text.split(',');\r\n                    let result = [];\r\n                    forEach(values, (tag: string) => {\r\n                        let text = tag.trim();\r\n                        if (text !== '-1') {\r\n                            result.push(text);\r\n                        }\r\n                    });\r\n                    result.push(newValue);\r\n                    this.onTmpDocumentChanged(name, result);\r\n                }\r\n\r\n                let tagsDivs = value ? value.map((tag: string) => {\r\n                    return tag.length > 0 && <Tag name={id} text={tag.trim()} onDelete={onClick} isGlobal={isGlobal}\r\n                                                  isEdit={tag.trim() === \"-1\"} readonly={!canModify} onSubmit={onSubmit}/>\r\n                }) : <div/>\r\n\r\n                cellRenderer = (\r\n                    <div className={'d-flex flex-nowrap h-gap-2 align-self-center'} key={id}>\r\n                        {tagsDivs}\r\n                    </div>\r\n                )\r\n                break;\r\n            }\r\n            case ParamType.OPTIONS: {\r\n                let cbTitle = title;\r\n                if (options && options[value]) {\r\n                    cbTitle = options[value].title;\r\n                }\r\n                else {\r\n                    cbTitle = `Select ${title}`\r\n                }\r\n\r\n                cellRenderer = (\r\n                    <div key={id}>\r\n                        <ComboBox disable={!canModify}\r\n                                  className={`align-self-center ${dirty ? 'dirty' : ''}`}\r\n                                  title={cbTitle}\r\n                                  items={Object.values(options)}\r\n                                  onSelect={(value: string) => this.onTmpDocumentChanged(id, value)}/>\r\n                    </div>\r\n                )\r\n                break;\r\n            }\r\n            default: {\r\n                cellRenderer = (\r\n                    <div>NO RENDERER</div>\r\n                )\r\n                break;\r\n            }\r\n        }\r\n        return cellRenderer;\r\n    }\r\n\r\n    _getStatus(title: string) {\r\n        const { editProperties } = this.props;\r\n        const { options={} } =  editProperties['status'];\r\n\r\n        let result = \"\";\r\n\r\n        forEach(Object.values(options), (option: { title: string; id: any; }) => {\r\n            console.log(JSON.stringify(option))\r\n            if (option.title === title) {\r\n                result = option.id;\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    _formatType(type: string) {\r\n        let result = type;\r\n\r\n        switch (type.toLowerCase()) {\r\n            case \"application/msword\":\r\n            case \"application/vnd.ms-word.document.macroEnabled.12\":\r\n            case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n            case \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":\r\n            case \"application/vnd.ms-word.template.macroEnabled.12\":\r\n                result = \"MS Word Doc\";\r\n                break;\r\n            case \"text/html\":\r\n                result = \"HTML\";\r\n                break;\r\n            case \"application/pdf\":\r\n                result = \"PDF\";\r\n                break;\r\n            case \"application/vnd.ms-powerpoint.template.macroEnabled.12\":\r\n            case \"application/vnd.openxmlformats-officedocument.presentationml.template\":\r\n            case \"application/vnd.ms-powerpoint.addin.macroEnabled.12\":\r\n            case \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":\r\n            case \"application/vnd.ms-powerpoint.slideshow.macroEnabled.12\":\r\n            case \"application/vnd.ms-powerpoint\":\r\n            case \"application/vnd.ms-powerpoint.presentation.macroEnabled.12\":\r\n            case \"application/vnd.openxmlformats-officedocument.presentationml.presentation\":\r\n                result = \"PowerPoint\";\r\n                break;\r\n            case \"application/rtf\":\r\n                result = \"rtf\";\r\n                break;\r\n            case \"text/rtf\":\r\n                result = \"rtf2\";\r\n                break;\r\n            case \"text/plain\":\r\n                result = \"Plain Text\";\r\n                break;\r\n            case \"text/csv\":\r\n                result = \"csv\";\r\n                break;\r\n            case \"application/csv\":\r\n                result = \"csv1\";\r\n                break;\r\n            case \"application/json\":\r\n                result = \"JSON\";\r\n                break;\r\n            case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\r\n            case \"application/vnd.ms-excel.sheet.binary.macroEnabled.12\":\r\n            case \"application/vnd.ms-excel\":\r\n            case \"application/vnd.ms-excel.sheet.macroEnabled.12\":\r\n                result = \"Excel Spreadsheet\";\r\n                break;\r\n            case \"image/bmp\":\r\n                result = \"BMP\";\r\n                break;\r\n            case \"image/gif\":\r\n                result = \"GIF\";\r\n                break;\r\n            case \"image/jpeg\":\r\n                result = \"JPEG\";\r\n                break;\r\n            case \"image/png\":\r\n                result = \"PNG\";\r\n                break;\r\n            case \"multipart/form-data\":\r\n                result = \"file\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            document, onUpdateDocument, onRemoveDocument, pdfRenderer: PdfRenderer, editProperties, userProfile, token,\r\n            className, permissions, ...rest\r\n        } = this.props;\r\n        const {id, preview_url = \"\", original_url, isUpdating=false, upload_date, publication_date, file_type, uploaded_by,\r\n            primary_sme_name, primary_sme_phone, primary_sme_email, secondary_sme_name, secondary_sme_phone, secondary_sme_email,\r\n        file_name, file_size} = document || {};\r\n\r\n        const { tmpDocument, isDirty, isExpanded, isGlobal } = this.state;\r\n\r\n        let cn = \"document-panel d-flex\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn} {...rest}>\r\n                <div className={'d-flex flex-fill flex-column align-items-stretch'}>\r\n                    <div className={'header-1 title py-4 pl-5'}>DOCUMENT INFORMATION</div>\r\n                    <div className={`header position-relative`}>\r\n                        <div className={`d-flex flex-column p-4 v-gap-5 position-relative ${!id && 'disabled'} `}>\r\n                            <div className={'d-flex align-items-end justify-content-end h-gap-2'}>\r\n                                <div className={'d-flex h-gap-2 align-items-center'}>\r\n                                    {\r\n                                        permissions.canModify &&\r\n                                        <div className={\"d-flex h-gap-2 pr-3\"}>\r\n                                            <div className={\"text-accent display-4 font-weight-light\"}>Publish as Private</div>\r\n                                            <CheckBox onClick={(selected) => {selected ? this.onTmpDocumentChanged(\"status\", this._getStatus(\"Private\")) : this.onTmpDocumentChanged(\"status\", this._getStatus(\"Public\"))}\r\n                                            }/>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        permissions.canDelete &&\r\n                                        <Button text={'DELETE'} onClick={this.removeDocument}/>\r\n                                    }\r\n                                    {\r\n                                        permissions.canModify && isDirty &&\r\n                                        <Button\r\n                                            disabled={!isDirty}\r\n                                            text={'CANCEL'} onClick={this.cancelEdit}/>\r\n                                    }\r\n                                    {\r\n                                        permissions.canModify &&\r\n                                        <Button\r\n                                            disabled={!isDirty}\r\n                                            text={'PUBLISH'} highlight={true} onClick={this.updateDocument}/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/*</Card>*/}\r\n                            <div className={\"d-flex flex-column v-gap-1 header-1\"}>\r\n                                <div className={'title-grid'}>\r\n                                    <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Title:</div>\r\n                                    <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Author:</div>\r\n                                    {\r\n                                        this.getCellRenderer(tmpDocument, document, editProperties['title'])\r\n                                    }\r\n                                    {\r\n                                        this.getCellRenderer(tmpDocument, document, editProperties['author'])\r\n                                    }\r\n                                </div>\r\n                                <div className={'property-grid'}>\r\n                                    <div className={\"d-flex h-gap-5\"}>\r\n                                        <div className={'header-1 font-weight-semi-bold align-self-center text-right label'}>Date:</div>\r\n                                        {\r\n                                            this.getCellRenderer(tmpDocument, document, editProperties['publication_date'])\r\n                                        }\r\n                                    </div>\r\n                                    <div className={\"d-flex h-gap-5\"}>\r\n                                        <div className={'header-1 font-weight-semi-bold align-self-center text-right label'}>Dept:</div>\r\n                                        {\r\n                                            this.getCellRenderer(tmpDocument, document, editProperties['department'])\r\n                                        }\r\n                                    </div>\r\n                                    <div className={\"d-flex h-gap-5\"}>\r\n                                        <div className={'header-1 font-weight-semi-bold align-self-center text-right label'}>Project:</div>\r\n                                        {\r\n                                            this.getCellRenderer(tmpDocument, document, editProperties['project'])\r\n                                        }\r\n                                    </div>\r\n                                    <div className={\"d-flex h-gap-5\"}>\r\n                                        <div className={'header-1 font-weight-semi-bold align-self-center text-right label'}>Purpose:</div>\r\n                                        {\r\n                                            this.getCellRenderer(tmpDocument, document, editProperties['purpose'])\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Card className={`d-flex flex-column overflow-hidden pl-5`}\r\n                                  header={\r\n                                      <div className={\"d-flex info-button justify-content-start\"}>\r\n                                          <div className={'d-flex h-gap-3 align-items-center'}>\r\n                                              <InfoSVG className={'small-image-container'}/>\r\n                                              <div className={'header-2'}>More Info</div>\r\n                                          </div>\r\n                                      </div>\r\n                                  }\r\n                                  body={\r\n                                      <div className={'d-flex flex-column pt-5 text-info'}>\r\n                                          <div className={'info-grid'}>\r\n                                              <div className={'align-self-center justify-self-end header-3'}>ORIGINAL FILE NAME</div>\r\n                                              <div className={'align-self-center justify-self-end header-3'}>UPLOADED BY</div>\r\n                                              <div className={'align-self-center justify-self-end header-3'}>UPLOAD DATE</div>\r\n                                              <div className={'align-self-center justify-self-end header-3'}>TYPE</div>\r\n                                              <div className={'align-self-center justify-self-end header-3'}>SIZE</div>\r\n                                              <div className={'align-self-center header-2'}>{file_name}</div>\r\n                                              <div className={'align-self-center header-2'}>{uploaded_by}</div>\r\n                                              <div className={'align-self-center header-2'}>{upload_date?.split(\",\")[0]}</div>\r\n                                              <div className={'align-self-center header-2'}>{this._formatType(file_type || \"\")}</div>\r\n                                              <div className={'align-self-center header-2'}>{file_size}</div>\r\n                                          </div>\r\n\r\n                                          <div className={'sme-grid'}>\r\n                                              <div className={\"d-flex h-gap-5\"}>\r\n                                                  <div className={'align-self-center text-right header-3 label'}>PRIMARY SME</div>\r\n\r\n                                                  <div className={'align-self-center header-2'}>{primary_sme_name}</div>\r\n\r\n                                              </div>\r\n                                              <div className={\"d-flex h-gap-5\"}>\r\n                                                  <div className={'align-self-center text-right header-3 label'}>PHONE</div>\r\n                                                  <div className={'align-self-center header-2'}>{primary_sme_phone}</div>\r\n                                              </div>\r\n                                              <div className={\"d-flex h-gap-5\"}>\r\n                                                  <div className={'align-self-center text-right header-3 label'}>EMAIL</div>\r\n\r\n                                                  <div className={'align-self-center header-2'}>{primary_sme_email}</div>\r\n\r\n                                              </div>\r\n\r\n                                          </div>\r\n\r\n                                          <div className={'sme-grid'}>\r\n                                              <div className={\"d-flex h-gap-5\"}>\r\n                                                  <div className={'align-self-center text-right header-3 label'}>SECONDARY SME</div>\r\n\r\n                                                  <div className={'align-self-center header-2'}>{secondary_sme_name}</div>\r\n\r\n                                              </div>\r\n                                              <div className={\"d-flex h-gap-5\"}>\r\n                                                  <div className={'align-self-center text-right header-3 label'}>PHONE</div>\r\n                                                  <div className={'align-self-center header-2'}>{secondary_sme_phone}</div>\r\n                                              </div>\r\n                                              <div className={\"d-flex h-gap-5\"}>\r\n                                                  <div className={'align-self-center text-right header-3 label'}>EMAIL</div>\r\n                                                  <div className={'align-self-center header-2'}>{secondary_sme_email}</div>\r\n\r\n\r\n                                              </div>\r\n                                          </div>\r\n                                      </div>\r\n                                  }\r\n                            />\r\n\r\n                            <div className={'d-flex flex-column v-gap-4 pl-4'} >\r\n\r\n                                <div className={'d-flex align-items-center justify-content-between'}>\r\n                                    <div className={'d-flex h-gap-2'}>\r\n                                        <GlobalSwitchButton isGlobal={isGlobal} light={false} onClick={this.toggleGlobal} className={'mr-3'}/>\r\n                                        {\r\n                                            isGlobal &&\r\n                                            this.getCellRenderer(tmpDocument, document, editProperties['public_tag'], true)\r\n                                        }\r\n                                        {\r\n                                            !isGlobal &&\r\n                                            this.getCellRenderer(tmpDocument, document, editProperties['private_tag'], false)\r\n                                        }\r\n                                        {\r\n                                            permissions.canModify &&\r\n                                            <div className={'tag-button text-primary header-1 cursor-pointer align-self-center'}\r\n                                                 onClick={isGlobal ? this.addNewPublicTag : this.addNewPrivateTag}>+</div>\r\n                                        }\r\n                                    </div>\r\n                                    {\r\n                                        permissions.canModify &&\r\n                                        <Button className={\"bg-transparent display-4 font-weight-light info-button\"} text={\"Static Field +\"}/>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            isUpdating &&\r\n                            <div className={\"position-absolute\"} style={{top: '0', right: '0', bottom: '0', left:'0'}}>\r\n                                <LoadingIndicator/>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className={\"body flex-fill d-flex align-self-stretch position-relative\"}>\r\n                        {\r\n                            id ?\r\n                                preview_url.length > 0 ?\r\n                                    <PdfRenderer preview_url={preview_url} original_url={original_url} userProfile={userProfile} token={token} permissions={permissions}/> :\r\n                                    <div className={\"position-relative w-100 h-100\"}>\r\n                                        <LoadingIndicator/>\r\n                                    </div>\r\n                                :\r\n                                <div\r\n                                    className={'flex-fill d-flex flex-column align-items-center justify-content-center v-gap-5 bg-tertiary'}>\r\n                                    <div className={'display-4 text-accent font-weight-semi-bold'}>No Preview Available\r\n                                    </div>\r\n                                    <div className={'header-2 text-info font-weight-light'}>(Select a document to see preview)</div>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DocumentPanelView;\r\n","import {bindActionCreators} from \"redux\";\r\nimport {makeGuid} from \"./utils/uniqueIdUtils\";\r\n\r\nexport class Presenter{\r\n    _mapStateToProps?: (state: any, props: any) => any;\r\n    _mapDispatchToProps?: (state: any, props: any) => any;\r\n    _view: any = null;\r\n    _id: any = null;\r\n    _model: any = null;\r\n    _displayOptions: any = null;\r\n    _metadataId: any = null;\r\n\r\n    constructor() {\r\n        this.id = makeGuid();\r\n\r\n        this.view = null;\r\n\r\n        // EXAMPLE MODEL\r\n        // super.model = createSlice({\r\n        //     name: this.id,\r\n        //     initialState: {\r\n        //\r\n        //     },\r\n        //     reducers: {\r\n        //\r\n        //     }\r\n        // });\r\n\r\n        // this.displayOptions = {\r\n        //     containerId: '',\r\n        //     visible: true,\r\n        //     appearClass: '',\r\n        //     enterClass: '',\r\n        //     exitClass: '',\r\n        //     timeout: 300\r\n        // };\r\n\r\n        // EXAMPLE MAP STATE TO PROPS\r\n        // super.mapStateToProps = (state, props) => {\r\n        //     return {\r\n        //         propValue: state[this.id].propValue\r\n        //     }\r\n        // }\r\n        //\r\n        // super.mapDispatchToProps = (dispatch) => {\r\n        //     return {\r\n        //         onAction: (arg) => dispatch(this.onAction(arg))\r\n        //     };\r\n        // }\r\n    }\r\n\r\n    createMapDispatchToProps(dispatch: any, dispatchActions: any={}) {\r\n        if (!dispatch || dispatchActions.length === 0) return null;\r\n\r\n        return {\r\n            ...bindActionCreators(\r\n                {\r\n                    ...dispatchActions\r\n                },\r\n                dispatch,\r\n            ),\r\n        };\r\n    };\r\n\r\n\r\n    get mapStateToProps() {\r\n        return this._mapStateToProps;\r\n    }\r\n\r\n    set mapStateToProps(value) {\r\n        this._mapStateToProps = value;\r\n    }\r\n\r\n    get mapDispatchToProps() {\r\n        return this._mapDispatchToProps;\r\n    }\r\n\r\n    set mapDispatchToProps(value) {\r\n        this._mapDispatchToProps = value;\r\n    }\r\n\r\n    get view() {\r\n        return this._view;\r\n    }\r\n\r\n    set view(value) {\r\n        this._view = value;\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value) {\r\n        this._id = value;\r\n    }\r\n\r\n    get model() {\r\n        return this._model;\r\n    }\r\n\r\n    set model(value) {\r\n        this._model = value;\r\n    }\r\n\r\n    get displayOptions() {\r\n        return this._displayOptions;\r\n    }\r\n\r\n    set displayOptions(value) {\r\n        let result = {\r\n            ...this._displayOptions,\r\n            ...value\r\n        }\r\n\r\n        this._displayOptions = result;\r\n    }\r\n\r\n    get metadataId() {\r\n        return this._metadataId;\r\n    }\r\n\r\n    set metadataId(value) {\r\n        this._metadataId = value;\r\n    }\r\n}\r\n","export const getClassNames = (appearClass: string, enterClass: string, exitClass: string) => {\r\n    return {\r\n        appear: appearClass,\r\n        appearActive: appearClass ? `${appearClass}-active` : '',\r\n        appearDone: ``,\r\n        enter: enterClass,\r\n        enterActive: enterClass ? `${enterClass}-active` : '',\r\n        enterDone: ``,\r\n        exit: exitClass,\r\n        exitActive: exitClass ? `${exitClass}-active` : '',\r\n        exitDone: ``,\r\n    }\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {createViewModelConnector} from \"./viewModelWrapper\";\r\nimport {createDisplayConnector} from \"./displayWrapper\";\r\nimport React, {Component} from \"react\";\r\nimport {createMetadataConnector} from \"./metadataWrapper\";\r\nimport {MetadataInfo} from \"../../model\";\r\nimport {appDataStore, displayService, repoService} from \"../../application/serviceComposition\";\r\n\r\nexport const createComponentWrapper = (presenterTemplate: any) => {\r\n    const presenter = new presenterTemplate();\r\n    const {id, metadataId, view: View, model, mapStateToProps, mapDispatchToProps, displayOptions } = presenter;\r\n\r\n    // class ComponentWrapper extends Component {\r\n    //     constructor(props) {\r\n    //         super(props);\r\n    //     }\r\n    //\r\n    //     render() {\r\n    //         const { ...rest } = this.props;\r\n    //\r\n    //         return (\r\n    //             <View {...rest}/>\r\n    //         );\r\n    //     }\r\n    // }\r\n\r\n    // call the component specific map states\r\n\r\n    let connectedPresenter = View;\r\n\r\n    if (mapStateToProps || mapDispatchToProps) {\r\n        connectedPresenter = connect(mapStateToProps, mapDispatchToProps)(connectedPresenter);\r\n    }\r\n\r\n    // create view model and create\r\n    if (model) {\r\n        connectedPresenter = createViewModelConnector(connectedPresenter, id, model);\r\n    }\r\n\r\n    if (metadataId) {\r\n        connectedPresenter = createMetadataConnector(connectedPresenter, metadataId);\r\n\r\n        let metaDataInfo = new MetadataInfo(metadataId);\r\n        repoService.addOrUpdateRepoItem(metaDataInfo)\r\n    }\r\n\r\n    if (displayOptions) {\r\n        connectedPresenter = createDisplayConnector(connectedPresenter, id);\r\n\r\n        // add node info to redux\r\n        displayService.addNodeInfo(id, displayOptions);\r\n    }\r\n\r\n\r\n    return {\r\n        componentId: id,\r\n        connectedPresenter: connectedPresenter\r\n    };\r\n};\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {appDataStore} from \"../../application/serviceComposition\";\r\nimport {bindInstanceMethods} from \"../extras/typeUtils\";\r\n\r\nexport const createViewModelConnector = (WrappedComponent, name, model) => {\r\n\r\n    class ViewModelWrapper extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            bindInstanceMethods(this);\r\n        }\r\n\r\n        /**\r\n         * Sends an event out to be processed identical to calling\r\n         * dispatch createEvent with the specified params\r\n         * @param {*Name of event to send} eventName\r\n         * @param {*Optional data for event} eventData\r\n         * @param {*Optional module for event, note setting this will cause the event to be sent external to this slice!} moduleName\r\n         */\r\n        sendEvent(eventName, eventData, moduleName) {\r\n            this.props.onSendEvent(createEvent(moduleName || name, eventName, eventData))\r\n        }\r\n\r\n        /**\r\n         * Initiates a property change event for the view model\r\n         * @param {*Property that changed} property\r\n         * @param {*New value of property} value\r\n         * @param {*Optional id of element that changed in UI} id\r\n         * @param {*Optional indicates this is the new category in the UI} category\r\n         * @param {*Optional indicates this is now the selected item in UI} selection\r\n         */\r\n        onPropertyChanged(property, value, id, category, selection) {\r\n            this.sendEvent('onPropertyChanged',\r\n                {\r\n                    property,\r\n                    value,\r\n                    key:id,\r\n                    category,\r\n                    selection\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const { onSendEvent, ...rest } = this.props;\r\n\r\n            ViewModelWrapper.displayName = `ViewModelWrapper(${getDisplayName(WrappedComponent)})`;\r\n\r\n            return (\r\n                // <WrappedComponent {...rest} sendEvent={this.sendEvent}  onPropertyChanged={this.onPropertyChanged} />\r\n                <WrappedComponent {...rest} />\r\n            );\r\n        }\r\n    }\r\n\r\n    const getDisplayName = (WrappedComponent) => {\r\n        return ViewModelWrapper.displayName || WrappedComponent.name || 'Component';\r\n    }\r\n\r\n    const setProperty = (state, action) => {\r\n        const {key, property, value} = action;\r\n\r\n        if(key !== undefined) {\r\n            if(state[key] === undefined)\r\n            {\r\n                // initial value to empty\r\n                state[key] = {};\r\n            }\r\n\r\n            state[key][property] = value;\r\n        }\r\n        else {\r\n            state[property] = value;\r\n        }\r\n        return state;\r\n    }\r\n\r\n    function createEvent(componentName, eventName, data) {\r\n        return {\r\n            type: componentName+'/'+eventName,\r\n            eventData: data\r\n        }\r\n    }\r\n\r\n    if (model) {\r\n        model.reducers = {\r\n            onPropertyChanged(state, action) {\r\n                const { key, property, value, category, selection} = action.eventData;\r\n\r\n                if(state === undefined) {\r\n                    return state;//sanity check\r\n                }\r\n\r\n                //Update property\r\n                setProperty(state, {\r\n                    property,\r\n                    value,\r\n                    key\r\n                });\r\n\r\n                //update selected item in view if this was a selection event\r\n                if(selection)\r\n                    setProperty(state, {\r\n                            property:'selection',\r\n                            value:{\r\n                                id:key,\r\n                                category\r\n                            }\r\n                        }\r\n                    );\r\n                return state;\r\n            },\r\n            ...model.reducers\r\n        }\r\n\r\n        // add this to repo\r\n        appDataStore.addEventHandlers(model.name, model.reducer);\r\n    }\r\n\r\n    // If the mapStateToProps argument supplied to connect returns a function instead of an object,\r\n    // it will be used to create an individual mapStateToProps function for each instance of the container.\r\n    const mapStateToProps = (state, props) => {\r\n        return {\r\n            // viewModel: state[model.name],\r\n        }\r\n    };\r\n\r\n    const mapDispatchToProps = (dispatch) => {\r\n        return {\r\n            onSendEvent: (eventData) => {\r\n                dispatch(eventData)\r\n            }\r\n        }\r\n    };\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(ViewModelWrapper);\r\n};\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {MetadataInfo} from \"../../model\";\r\nimport {repoService} from \"../../application/serviceComposition\";\r\nimport {bindInstanceMethods} from \"../extras/typeUtils\";\r\n\r\nexport const createMetadataConnector = (WrappedComponent, metadataId) => {\r\n\r\n    class MetadataWrapper extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            bindInstanceMethods(this);\r\n\r\n            // this.ref = React.createRef();\r\n\r\n            // this.state = {\r\n            //     width: 0,\r\n            //     height: 0\r\n            // }\r\n        }\r\n\r\n        // resizeHandler() {\r\n        //     if (this.ref.current) {\r\n        //         const width = this.ref.current.clientWidth;\r\n        //         const height = this.ref.current.clientHeight;\r\n        //         this.setState({ width, height });\r\n        //     }\r\n        // }\r\n        //\r\n        // componentDidMount() {\r\n        //     this.resizeHandler();\r\n        //     window.addEventListener('resize', this.resizeHandler);\r\n        // }\r\n        //\r\n        // componentWillUnmount(){\r\n        //     window.removeEventListener('resize', this.resizeHandler);\r\n        // }\r\n\r\n        render() {\r\n            const {...rest } = this.props;\r\n\r\n            return (\r\n                <WrappedComponent {...rest} />\r\n                // <React.Fragment>\r\n                //     {\r\n                //         hasError ?\r\n                //         <div className={\"error-panel position-absolute pe-none\"}\r\n                //              style={{minWidth: width, minHeight: height}}>\r\n                //             <div className={'d-flex align-items-center justify-content-center header-3 text-secondary'}>\r\n                //                 {errorMessage}\r\n                //             </div>\r\n                //         </div> :\r\n                //         <WrappedComponent ref={(ref) => this.ref = ref} className={(hasError||isLoading) ? 'pe-none' : ''} {...rest} />\r\n                //     }\r\n                //     {\r\n                //         isLoading &&\r\n                //             <div className={\"loading-panel position-absolute pe-none\"} style={{minWidth: width, minHeight: height}}>\r\n                //                 <LoadingIndicator/>\r\n                //             </div>\r\n                //     }\r\n                // </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    // If the mapStateToProps argument supplied to connect returns a function instead of an object,\r\n    // it will be used to create an individual mapStateToProps function for each instance of the container.\r\n    const mapStateToProps = (state, props) => {\r\n        let metadataInfo = repoService.getRepoItem(MetadataInfo.class, metadataId);\r\n\r\n        const { isLoading, hasError, errorMessage } = metadataInfo;\r\n\r\n        return {\r\n            isLoading: isLoading,\r\n            hasError: hasError,\r\n            errorMessage: errorMessage\r\n        }\r\n    };\r\n\r\n    return connect(mapStateToProps, {})(MetadataWrapper);\r\n};\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getClassNames} from \"../../framework.visual/extras/utils/animationUtils\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {displayService} from \"../../application/serviceComposition\";\r\n\r\ntype Props = {\r\n    visible: boolean;\r\n    appearClass: string;\r\n    enterClass: string;\r\n    exitClass: string;\r\n    timeout: number;\r\n}\r\n\r\ntype State = {\r\n\r\n}\r\n\r\nexport const createDisplayConnector = (WrappedComponent: any, viewId: string) => {\r\n    class DisplayWrapper extends Component<Props, State> {\r\n\r\n        constructor(props: any) {\r\n            super(props);\r\n        }\r\n\r\n        render() {\r\n            const { visible, appearClass, enterClass, exitClass, timeout=0, ...rest } = this.props;\r\n            const classNames = getClassNames(appearClass, enterClass, exitClass);\r\n\r\n            let timeoutResult = timeout;\r\n            if (!visible) {\r\n                if (exitClass === '') timeoutResult = 0;\r\n            }\r\n            else {\r\n                if (enterClass === '') timeoutResult = 0;\r\n            }\r\n\r\n            return (\r\n                <CSSTransition in={visible} appear={appearClass !== ''} timeout={timeoutResult} classNames={classNames} unmountOnExit={true} >\r\n                    <WrappedComponent {...rest} />\r\n                </CSSTransition>\r\n\r\n            );\r\n        }\r\n    }\r\n\r\n    // If the mapStateToProps argument supplied to connect returns a function instead of an object,\r\n    // it will be used to create an individual mapStateToProps function for each instance of the container.\r\n    const mapStateToProps = (state: any) => {\r\n        let viewInfo = displayService.getNodeInfo(viewId);\r\n\r\n        return {\r\n            visible: viewInfo ? viewInfo.visible : true,\r\n            appearClass: viewInfo.appearClass,\r\n            enterClass: viewInfo.enterClass,\r\n            exitClass: viewInfo.exitClass,\r\n            timeout: viewInfo.timeout,\r\n        }\r\n    };\r\n\r\n    return connect(mapStateToProps, {})(DisplayWrapper);\r\n};\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const ZoomInSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 29.919326,31.938005 c -0.0767,-0.0316 -0.21278,-0.0961 -0.30231,-0.14342 -0.0895,-0.0473 -1.52473,-1.44561 -3.18932,-3.10734 l -3.02653,-3.02132 -0.43013,0.32036 c -2.00974,1.49684 -4.48248,2.46354 -7.00078,2.73688 -1.06458,0.11555 -2.92493,0.0714 -3.86418,-0.0917 -0.91352,-0.15865 -1.35052,-0.2658 -2.1394505,-0.52457 -2.23648,-0.73357 -4.02064,-1.8271 -5.67786,-3.47999 -0.83401,-0.83184 -1.1409,-1.18957 -1.67717,-1.955 -2.98732995,-4.26388 -3.44537995,-9.78635 -1.20083,-14.4776796 2.89581,-6.05252 9.5272705,-9.27903 16.1288905,-7.84744998 1.1267,0.24433 2.09129,0.58549 3.21724,1.13787998 2.92157,1.43333 5.25989,3.79405 6.64996,6.71366 0.83167,1.7468 1.25415,3.4138596 1.37536,5.4270196 0.16723,2.7774 -0.501,5.56735 -1.9217,8.02336 -0.2344,0.40521 -0.86528,1.34022 -1.05129,1.55808 l -0.13898,0.16278 3.0149,3.02314 c 3.22239,3.23118 3.20987,3.21688 3.29559,3.76351 0.10926,0.69674 -0.25374,1.38305 -0.89866,1.69906 -0.27362,0.13407 -0.9253,0.18046 -1.16275,0.0828 z m -14.31155,-6.40793 c 3.37356,-0.36348 6.42165,-2.27015 8.27465,-5.17602 0.83736,-1.31316 1.4047,-2.89795 1.61779,-4.51912 0.0926,-0.7048 0.0945,-2.09615 0.004,-2.81416 -0.26931,-2.13136 -1.17478,-4.2019496 -2.55338,-5.8390096 -1.71795,-2.04002 -4.25163,-3.45202 -6.86796,-3.82747 -1.39851,-0.20068 -2.53601,-0.17445 -3.87336,0.0894 -1.7026,0.33583 -3.4142805,1.13492 -4.8308305,2.25524 -0.45218,0.35761 -1.34526,1.25286 -1.71363,1.71778 -1.25537,1.58443 -2.04895,3.4464196 -2.34897,5.5114096 -0.0675,0.46422 -0.10188,1.54781 -0.068,2.14059 0.25194,4.4117 3.10916,8.2735 7.2759505,9.83415 0.62056,0.23242 1.74317,0.51188 2.3962,0.59649 0.63727,0.0826 2.05626,0.0988 2.68778,0.0308 z m -1.66456,-4.78534 c -0.42251,-0.12898 -0.80614,-0.47487 -1.00923,-0.90995 l -0.13026,-0.27906 -0.0151,-1.75575 -0.0151,-1.75574 -1.51975,-9.4e-4 c -0.83585,-5.1e-4 -1.6513605,-0.02 -1.8122205,-0.0432 -0.94947,-0.1373 -1.58838,-0.99962 -1.40368,-1.89452 0.0746,-0.36134 0.18421,-0.56512 0.44363,-0.82454 0.46729,-0.46728 0.59562,-0.49123 2.6362005,-0.4919 l 1.66272,-5.6e-4 2.8e-4,-1.5697 c 1.4e-4,-0.86334 0.0202,-1.6911496 0.0445,-1.8395896 0.14971,-0.91411 0.98588,-1.51081 1.87265,-1.33635 0.52293,0.10288 0.89571,0.37845 1.12556,0.83203 0.18064,0.35646 0.21201,0.70612 0.21239,2.3671596 l 3.4e-4,1.54645 h 1.66945 c 1.54145,0 1.69212,0.007 1.96504,0.0932 0.97499,0.30754 1.41095,1.35917 0.94545,2.28063 -0.21703,0.4296 -0.70721,0.76045 -1.24107,0.83765 -0.16086,0.0233 -0.97792,0.0427 -1.81568,0.0432 l -1.52319,9.4e-4 -3.8e-4,1.54645 c -3.7e-4,1.65251 -0.032,2.01128 -0.20822,2.35895 -0.14782,0.2917 -0.5248,0.62444 -0.84189,0.74308 -0.26341,0.0985 -0.80202,0.12543 -1.04248,0.052 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const ZoomOutSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 29.915048,31.927303 c -0.0998,-0.0354 -0.26297,-0.11869 -0.36271,-0.18517 -0.0998,-0.0665 -1.52839,-1.46393 -3.17476,-3.10546 l -2.99341,-2.9846 -0.41245,0.31055 c -2.2669,1.70678 -5.09479,2.70777 -7.95817,2.81695 -2.48733,0.0949 -4.80823,-0.39635 -6.9493198,-1.47077 -1.5472,-0.7764 -2.51798,-1.46156 -3.7123,-2.62006 -2.12625,-2.06249 -3.57731004,-4.75964 -4.11544004,-7.64954 -0.36614,-1.96624 -0.28882,-4.30405 0.20553,-6.21431 C 1.6692182,6.0827432 5.2233182,2.2569132 9.8043482,0.74677319 11.465938,0.19903319 12.693658,0.00251319 14.469478,1.3192421e-5 16.053308,-0.00198681 17.406808,0.21156319 18.882498,0.69699319 c 2.40515,0.79118001 4.67176,2.27785001 6.25188,4.10061001 1.41676,1.6343 2.29827,3.15638 2.93354,5.06521 0.55487,1.6672498 0.77079,3.1936398 0.7106,5.0234398 -0.0402,1.22327 -0.14954,2.00841 -0.43434,3.12018 -0.45302,1.76846 -1.35396,3.62182 -2.49955,5.14197 l -0.18488,0.24533 3.02339,3.01909 c 1.76863,1.76613 3.07465,3.11764 3.14693,3.25653 0.0679,0.13059 0.13765,0.39299 0.15489,0.58312 0.0611,0.6735 -0.27047,1.24765 -0.90297,1.56371 -0.39655,0.19816 -0.81031,0.23756 -1.16694,0.11112 z m -13.60594,-6.51727 c 3.00301,-0.52146 5.65944,-2.25124 7.37773,-4.80415 2.21263,-3.28735 2.49771,-7.62285 0.73266,-11.1422698 -0.61136,-1.219 -1.17196,-1.99938 -2.11813,-2.94853 -1.57341,-1.57835 -3.36339,-2.56528 -5.5205,-3.04378 -1.36547,-0.3029 -3.23008,-0.3182 -4.58273,-0.0376 -2.1944,0.45522 -4.1248198,1.48816 -5.6702498,3.03406 -2.49396,2.49472 -3.66305,5.9099098 -3.20905,9.3743998 0.67631,5.16087 4.84199,9.18661 10.0263198,9.6895 0.77233,0.0749 2.15998,0.018 2.96395,-0.12164 z m -6.9839398,-9.42837 c -0.53626,-0.0929 -0.94164,-0.41979 -1.19004,-0.95948 -0.12654,-0.27492 -0.1448,-0.38708 -0.11984,-0.73601 0.0448,-0.6258 0.32091,-1.03942 0.89258,-1.33702 l 0.27204,-0.14162 h 5.2291198 5.22913 l 0.31763,0.176 c 1.15768,0.64143 1.11479,2.25131 -0.0758,2.84662 l -0.36272,0.18136 -4.95709,0.009 c -2.7264,0.005 -5.0821398,-0.0125 -5.2349898,-0.039 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const DownloadSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 4.2832198,31.951816 c -1.76767,-0.19443 -3.29165002,-1.36094 -3.95230002,-3.02522 -0.32287,-0.81338 -0.31493,-0.70417 -0.33466,-4.60105 -0.0119,-2.35014 -0.001,-3.60762 0.0313,-3.78515 0.17095,-0.92473 0.99834002,-1.50109 1.89054002,-1.31694 0.15041,0.031 0.34774,0.0942 0.43853,0.14026 0.24902,0.12644 0.55535,0.45569 0.69044,0.74208 l 0.12059,0.25565 0.0255,3.55578 c 0.0168,2.33917 0.0425,3.60394 0.0752,3.69654 0.17357,0.49193 0.52948,0.87627 0.96091,1.03769 l 0.26666,0.0998 H 15.99644 27.49695 l 0.26866,-0.10052 c 0.36697,-0.1373 0.75198,-0.52231 0.88928,-0.88928 0.0996,-0.26613 0.10053,-0.29994 0.10088,-3.57868 2.3e-4,-2.05201 0.0186,-3.4224 0.0483,-3.60572 0.0605,-0.37316 0.22517,-0.70022 0.47396,-0.94167 0.24044,-0.23334 0.44489,-0.3393 0.79353,-0.41125 0.89401,-0.18451 1.74184,0.4108 1.89214,1.32859 0.0614,0.37489 0.0588,6.47693 -0.003,7.07922 -0.23831,2.32222 -1.98137,4.0694 -4.31108,4.32126 -0.58506,0.0632 -22.7907602,0.062 -23.3663902,-0.001 z M 15.55481,22.342536 c -0.41224,-0.13524 -0.58926,-0.30148 -4.70016,-4.41405 -4.5845202,-4.58638 -4.3943302,-4.37231 -4.4449402,-5.00282 -0.0379,-0.47227 0.0891,-0.8545 0.39746,-1.19578 0.51621,-0.57138 1.31632,-0.70776 1.97475,-0.33661 0.1112,0.0627 1.3610502,1.27635 2.8917402,2.80803 l 2.69589,2.69763 0.0232,-7.8447803 0.0232,-7.84478 0.15302,-0.3108 c 0.17536,-0.35621 0.42317,-0.59511 0.79984,-0.77111 0.36384,-0.17 0.89114,-0.17 1.25498,0 0.37666,0.176 0.62447,0.4149 0.79984,0.77111 l 0.15301,0.3108 0.0232,7.84478 0.0232,7.8447803 2.69589,-2.69753 c 1.48274,-1.48365 2.78129,-2.748 2.88568,-2.80967 0.10439,-0.0617 0.32689,-0.13739 0.49446,-0.16826 1.3763,-0.2536 2.37703,1.22922 1.63872,2.42815 -0.0686,0.11138 -1.97888,2.0568 -4.24509,4.32317 -3.38459,3.38482 -4.16604,4.14369 -4.37603,4.24961 -0.20842,0.10512 -0.32863,0.13146 -0.65073,0.1426 -0.2173,0.008 -0.44738,-0.004 -0.51129,-0.0245 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const TextEditSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 10.554728,31.974655 c -0.18482,-0.0567 -0.307,-0.16318 -0.3712,-0.32363 -0.085,-0.21232 -0.0903,-1.2897 -0.007,-1.48034 0.0312,-0.0716 0.7418,-0.81228 1.61156,-1.67972 l 1.55584,-1.55168 V 15.608465 4.2776446 h -3.3526299 -3.35263 l -1.53178,1.53457 c -0.84248,0.84401 -1.5855,1.56474 -1.65115,1.60161 -0.0985,0.0553 -0.2341,0.067 -0.77594,0.067 -0.73457,0 -0.85067,-0.0315 -0.9964,-0.27052 -0.0754,-0.12367 -0.0777,-0.22487 -0.0778,-3.46191 -1.6e-4,-3.67194003 -0.0139,-3.46891003 0.24795,-3.65570003 L 1.9834681,-5.4253333e-6 H 15.997108 30.010748 L 30.120638,0.08199457 c 0.0604,0.0451 0.1468,0.13149 0.19193,0.19193 0.0813,0.10895 0.082,0.13841 0.082,3.46643003 0,3.32802 -7e-4,3.35748 -0.082,3.46643 -0.0451,0.0604 -0.13145,0.14681 -0.19184,0.19193 -0.10343,0.0773 -0.172,0.0828 -1.18103,0.0949 -1.24379,0.0149 -1.44743,-0.0109 -1.61697,-0.20476 -0.0613,-0.0701 -0.5391,-0.77629 -1.06179,-1.56936 l -0.95035,-1.44193 h -3.31729 -3.31729 v 11.3503404 11.35034 l 1.58171,1.58199 1.58171,1.58199 0.0112,0.7261 c 0.0103,0.66637 0.005,0.73659 -0.0679,0.8535 -0.0435,0.0701 -0.13802,0.15959 -0.21012,0.19896 -0.12418,0.0678 -0.41492,0.0719 -5.52283,0.0784 -2.96546,0.004 -5.43806,-0.007 -5.49467,-0.0247 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport './documentPanel.css';\r\nimport {Viewer, Worker} from '@react-pdf-viewer/core';\r\nimport '@react-pdf-viewer/core/lib/styles/index.css';\r\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\r\nimport '@react-pdf-viewer/highlight/lib/styles/index.css';\r\nimport {DocumentPanelProps} from \"./documentPanelModel\";\r\nimport { toolbarPlugin } from '@react-pdf-viewer/toolbar';\r\nimport type { ToolbarSlot } from '@react-pdf-viewer/toolbar';\r\nimport type { RenderZoomInProps, RenderZoomOutProps } from '@react-pdf-viewer/zoom';\r\nimport type { RenderGoToPageProps } from '@react-pdf-viewer/page-navigation';\r\nimport type { RenderDownloadProps } from '@react-pdf-viewer/get-file';\r\nimport type { RenderCurrentPageLabelProps } from '@react-pdf-viewer/page-navigation';\r\nimport {ZoomInSVG} from \"../../theme/svgs/zoomInSVG\";\r\nimport {ZoomOutSVG} from \"../../theme/svgs/zoomOutSVG\";\r\nimport {DownloadSVG} from \"../../theme/svgs/downloadSVG\";\r\nimport {TextEditSVG} from \"../../theme/svgs/textEditSVG\";\r\nimport {ArrowLeftSVG} from \"../../theme/svgs/arrowLeftSVG\";\r\nimport {ArrowRightSVG} from \"../../theme/svgs/arrowRightSVG\";\r\nimport Button from \"../../theme/widgets/button/button\";\r\n\r\nfunction DocumentPdfPreview(props: DocumentPanelProps) {\r\n    const {className, preview_url, original_url, userProfile, token, permissions, ...rest} = props;\r\n\r\n    const toolbarPluginInstance = toolbarPlugin();\r\n    const { Toolbar } = toolbarPluginInstance;\r\n\r\n    const _download = () => {\r\n        let username = userProfile.username;\r\n        let id = userProfile.id;\r\n        let email = userProfile.email;\r\n        let firstName = userProfile.firstName;\r\n        let lastName = userProfile.lastName;\r\n\r\n        let xhr = new XMLHttpRequest;\r\n\r\n        xhr.open( \"GET\", original_url || \"\");\r\n\r\n        xhr.addEventListener( \"load\", function(){\r\n            window.open(original_url);\r\n        }, false);\r\n\r\n        xhr.setRequestHeader(\"km_token\", `bearer ${token}` );\r\n        xhr.setRequestHeader(\"km_user_name\", username );\r\n        xhr.setRequestHeader(\"km_user_id\", id );\r\n        xhr.setRequestHeader(\"km_email\", email );\r\n        xhr.setRequestHeader(\"km_first_name\", firstName );\r\n        xhr.setRequestHeader(\"km_last_name\", lastName );\r\n\r\n        xhr.send();\r\n    }\r\n\r\n    let cn = \"pdf-viewer flex-fill align-self-stretch\";\r\n    if (className) {\r\n        cn += ` ${className}`;\r\n    }\r\n\r\n    let username: string = '';\r\n    let id: string = '';\r\n    let email: string = '';\r\n    let firstName: string = '';\r\n    let lastName: string = '';\r\n    if (userProfile) {\r\n        username = userProfile.username;\r\n        id = userProfile.id;\r\n        email = userProfile.email;\r\n        firstName = userProfile.firstName;\r\n        lastName = userProfile.lastName;\r\n    }\r\n\r\n    return (\r\n        <div className={cn} {...rest}>\r\n            {\r\n                preview_url.length &&\r\n                <div className={\"position-relative w-100 h-100\"}>\r\n                    <div className={\"position-absolute overflow-hidden w-100 h-100\"}>\r\n                        <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.10.377/build/pdf.worker.min.js\">\r\n\r\n                            <div\r\n                                style={{\r\n                                    alignItems: 'center',\r\n                                    backgroundColor: 'transparent',\r\n                                    borderBottom: '0',\r\n                                    display: 'flex',\r\n                                    padding: '24px',\r\n                                }}\r\n                            >\r\n                                <Toolbar>\r\n                                    {(props: ToolbarSlot) => {\r\n                                        const {\r\n                                            CurrentPageLabel,\r\n                                            Download,\r\n                                            GoToNextPage,\r\n                                            GoToPreviousPage,\r\n                                            ZoomIn,\r\n                                            ZoomOut,\r\n                                        } = props;\r\n                                        return (\r\n                                            <>\r\n                                                <div style={{ padding: '0px 2px' }}>\r\n                                                    {\r\n                                                        permissions.canDownload &&\r\n                                                        <Button onClick={() => _download()}>\r\n                                                            <DownloadSVG className={'small-image-container cursor-pointer pdf-icon mx-5'}/>\r\n                                                        </Button>\r\n                                                    }\r\n                                                    {/*<Download>*/}\r\n                                                    {/*    {(props: RenderDownloadProps) => (*/}\r\n                                                    {/*        <div onClick={props.onClick}>*/}\r\n                                                    {/*            */}\r\n                                                    {/*        </div>*/}\r\n                                                    {/*    )}*/}\r\n                                                    {/*</Download>*/}\r\n                                                </div>\r\n\r\n\r\n                                                <div style={{ padding: '0px 2px' }}>\r\n                                                    <Button>\r\n                                                        <TextEditSVG className={'small-image-container cursor-pointer pdf-icon mx-3'}/>\r\n                                                    </Button>\r\n                                                </div>\r\n\r\n                                                <div style={{ padding: '0px 2px',  marginLeft: 'auto' }}>\r\n                                                    <GoToPreviousPage>\r\n                                                        {(props: RenderGoToPageProps) => (\r\n                                                            <div onClick={props.onClick}>\r\n                                                                <ArrowLeftSVG className={'nano-image-container cursor-pointer pagination'}/>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </GoToPreviousPage>\r\n                                                </div>\r\n\r\n                                                <div style={{ padding: '0px 2px' }}>\r\n                                                    <CurrentPageLabel>\r\n                                                        {(props: RenderCurrentPageLabelProps) => (\r\n                                                            <div className={'pagination'}>\r\n                                                                <span>\r\n                                                                    {`${props.currentPage + 1} / ${props.numberOfPages}`}\r\n                                                                </span>\r\n\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </CurrentPageLabel>\r\n                                                </div>\r\n\r\n                                                <div style={{ padding: '0px 2px' }}>\r\n                                                    <GoToNextPage>\r\n                                                        {(props: RenderGoToPageProps) => (\r\n                                                            <div onClick={props.onClick}>\r\n                                                                <ArrowRightSVG className={'nano-image-container cursor-pointer pagination'}/>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </GoToNextPage>\r\n                                                </div>\r\n\r\n                                                <div style={{ padding: '0px 2px', marginLeft: 'auto' }}>\r\n                                                    <ZoomOut>\r\n                                                        {(props: RenderZoomOutProps) => (\r\n                                                            <div onClick={props.onClick}>\r\n                                                                <ZoomOutSVG className={'small-image-container cursor-pointer pdf-icon mx-3'}/>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </ZoomOut>\r\n                                                </div>\r\n\r\n                                                <div style={{ padding: '0px 2px' }}>\r\n                                                    <ZoomIn>\r\n                                                        {(props: RenderZoomInProps) => (\r\n                                                            <div onClick={props.onClick}>\r\n                                                                <ZoomInSVG className={'small-image-container cursor-pointer pdf-icon mx-5'}/>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </ZoomIn>\r\n                                                </div>\r\n\r\n                                            </>\r\n                                        );\r\n                                    }}\r\n                                </Toolbar>\r\n                            </div>\r\n                            <Viewer fileUrl={preview_url}\r\n                                    plugins={[\r\n                                        // Register application\r\n                                        // defaultLayoutPluginInstance,\r\n                                        toolbarPluginInstance,\r\n                                        // highlightPluginInstance\r\n                                    ]}\r\n                                    theme={'dark'}\r\n                                    httpHeaders={{\r\n                                        'km_token': `bearer ${token}`,\r\n                                        'km_user_name': username,\r\n                                        'km_user_id': id,\r\n                                        'km_email': email,\r\n                                        'km_first_name': firstName,\r\n                                        'km_last_name': lastName,\r\n                                    }}\r\n                            />\r\n                        </Worker>\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DocumentPdfPreview;\r\n","import DocumentPanelView from \"./documentPanelView\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {Presenter} from \"../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../framework/wrappers/componentWrapper\";\r\nimport DocumentPdfPreview from \"./documentPdfPreview\";\r\nimport {DocumentInfo, ParamType, ReferenceType} from \"../../../model\";\r\nimport {\r\n    authenticationService,\r\n    authorizationService,\r\n    documentService,\r\n    referenceService,\r\n    selectionService,\r\n    userService,\r\n} from \"../../../application/serviceComposition\";\r\nimport {DocumentInfoVM, PermissionsVM} from \"./documentPanelModel\";\r\nimport {PERMISSION_ENTITY, PERMISSION_OPERATOR} from \"../../../api\";\r\nimport {PermissionInfo} from \"../../../model/permissionInfo\";\r\n\r\nclass DocumentPanel extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id = 'components/documentPanel';\r\n\r\n        this.view = DocumentPanelView;\r\n\r\n        this.displayOptions = {\r\n            containerId: '',\r\n            visible: false,\r\n            appearClass: 'fadeIn',\r\n            enterClass: 'fadeIn',\r\n            exitClass: 'shrinkHorizontal-active',\r\n        };\r\n\r\n        this.mapStateToProps = (state: any) => {\r\n            return {\r\n                document: this.getDocument(state),\r\n                pdfRenderer: DocumentPdfPreview,\r\n                editProperties: this._getEditProperties(),\r\n                userProfile: authenticationService.getUserProfile(),\r\n                token: authenticationService.getToken(),\r\n                permissions: this.getPermissions(state)\r\n            }\r\n        }\r\n\r\n        this.mapDispatchToProps = () => {\r\n            return {\r\n                onUpdateDocument: (document: DocumentInfoVM) => documentService.updateDocument(document),\r\n                onRemoveDocument: (id: string) => documentService.removeDocument(id)\r\n            };\r\n        }\r\n    }\r\n\r\n    _getEditProperties = () => {\r\n        return {\r\n            ['title']: {\r\n                id: 'title',\r\n                title: 'Document Title goes here',\r\n                type: ParamType.STRING,\r\n                long: true,\r\n            },\r\n            ['author']: {\r\n                id: 'author',\r\n                title: 'Authors go here',\r\n                type: ParamType.STRING,\r\n                long: true,\r\n            },\r\n            ['publication_date']: {\r\n                id: 'publication_date',\r\n                title: 'Publication Date',\r\n                type: ParamType.STRING,\r\n            },\r\n            ['project']: {\r\n                id: 'project',\r\n                title: 'Project',\r\n                type: ParamType.STRING\r\n            },\r\n            ['purpose']: {\r\n                id: 'purpose',\r\n                title: 'Purpose',\r\n                type: ParamType.OPTIONS,\r\n                options: referenceService.getAllReferences(ReferenceType.PURPOSE)\r\n            },\r\n            ['department']: {\r\n                id: 'department',\r\n                title: 'Department',\r\n                type: ParamType.OPTIONS,\r\n                options: referenceService.getAllReferences(ReferenceType.DEPARTMENT)\r\n            },\r\n            ['status']: {\r\n                id: 'status',\r\n                title: 'Status',\r\n                type: ParamType.OPTIONS,\r\n                options: referenceService.getAllReferences(ReferenceType.STATUS)\r\n            },\r\n            ['private_tag']: {\r\n                id: 'private_tag',\r\n                title: 'Personal Tags',\r\n                type: ParamType.ARRAY\r\n            },\r\n            ['public_tag']: {\r\n                id: 'public_tag',\r\n                title: 'Shared Tags',\r\n                type: ParamType.ARRAY\r\n            },\r\n            ['primary_sme_name']: {\r\n                id: 'primary_sme_name',\r\n                title: 'Full Name',\r\n                type: ParamType.STRING\r\n            },\r\n            ['primary_sme_email']: {\r\n                id: 'primary_sme_email',\r\n                title: 'Email Address',\r\n                type: ParamType.STRING\r\n            },\r\n            ['primary_sme_phone']: {\r\n                id: 'primary_sme_phone',\r\n                title: 'Phone Number',\r\n                type: ParamType.STRING\r\n            },\r\n            ['secondary_sme_name']: {\r\n                id: 'secondary_sme_name',\r\n                title: 'Full Name',\r\n                type: ParamType.STRING\r\n            },\r\n            ['secondary_sme_email']: {\r\n                id: 'secondary_sme_email',\r\n                title: 'Email Address',\r\n                type: ParamType.STRING\r\n            },\r\n            ['secondary_sme_phone']: {\r\n                id: 'secondary_sme_phone',\r\n                title: 'Phone Number',\r\n                type: ParamType.STRING\r\n            },\r\n        };\r\n    }\r\n\r\n    getSelectedDocumentId = selectionService.makeGetContext(\"selected-document\");\r\n\r\n    getDocument = createSelector(\r\n        [this.getSelectedDocumentId, documentService.getAllDocuments], // if this changes, will re-evaluate the combiner and trigger a re-render\r\n        (documentId, documents: DocumentInfo[]) => {\r\n\r\n            let document = documents[documentId];\r\n\r\n            const {\r\n                id,\r\n                author=\"\",\r\n                department=\"\",\r\n                file_name=\"\",\r\n                file_size=\"\",\r\n                file_type=\"\",\r\n                file_page_count=\"\",\r\n                primary_sme_email=\"\",\r\n                primary_sme_name=\"\",\r\n                primary_sme_phone=\"\",\r\n                private_tag=[],\r\n                project=\"\",\r\n                public_tag=[],\r\n                publication_date=\"\",\r\n                purpose=\"\",\r\n                secondary_sme_email=\"\",\r\n                secondary_sme_name=\"\",\r\n                secondary_sme_phone=\"\",\r\n                status=\"\",\r\n                title=\"\",\r\n                upload_date=\"\",\r\n                uploadedBy_id=\"\",\r\n                preview_url=\"\",\r\n                original_url=\"\",\r\n                isUpdating,\r\n                isPending,\r\n            } = document || {};\r\n\r\n            let itemVM: DocumentInfoVM = {\r\n                id: id,\r\n                author: author,\r\n                department: department,\r\n                file_name: file_name,\r\n                file_size: file_size,\r\n                file_type: file_type,\r\n                file_page_count: file_page_count,\r\n                primary_sme_email: primary_sme_email,\r\n                primary_sme_name: primary_sme_name,\r\n                primary_sme_phone: primary_sme_phone,\r\n                private_tag: private_tag,\r\n                project: project,\r\n                public_tag: public_tag,\r\n                publication_date: publication_date ? new Date(publication_date).toLocaleString().split(\",\")[0] : 'No Publication Date',\r\n                purpose: purpose,\r\n                secondary_sme_email: secondary_sme_email,\r\n                secondary_sme_name: secondary_sme_name,\r\n                secondary_sme_phone: secondary_sme_phone,\r\n                status: status,\r\n                title: title ? title : file_name,\r\n                upload_date: upload_date ? new Date(upload_date).toLocaleString() : 'No Upload Date',\r\n                uploadedBy_id: uploadedBy_id,\r\n                preview_url: preview_url,\r\n                original_url: original_url,\r\n                isUpdating: isUpdating,\r\n                isPending: isPending,\r\n            }\r\n            return itemVM;\r\n        }\r\n    );\r\n\r\n    getPermissions = createSelector<any, DocumentInfoVM, string, Record<string, PermissionInfo>, PermissionsVM>(\r\n        [this.getDocument, () => userService.getCurrentUserId(), authorizationService.getPermissions],\r\n        (documentInfoVM, currentUserId, permissionInfoLookup) => {\r\n\r\n            let uploadedBy = documentInfoVM?.uploadedBy_id || null;\r\n\r\n            return {\r\n                canDelete: authorizationService.hasPermission(PERMISSION_ENTITY.DOCUMENT, PERMISSION_OPERATOR.DELETE, currentUserId, uploadedBy),\r\n                canDownload: authorizationService.hasPermission(PERMISSION_ENTITY.DOCUMENT, PERMISSION_OPERATOR.DOWNLOAD, currentUserId, uploadedBy),\r\n                canModify: authorizationService.hasPermission(PERMISSION_ENTITY.DOCUMENT, PERMISSION_OPERATOR.MODIFY, currentUserId, uploadedBy)\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: DocumentPanelPresenter,\r\n    componentId: DocumentPanelId\r\n} = createComponentWrapper(DocumentPanel);\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const SearchSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 28.09051,31.939175 c -0.130697,-0.03111 -0.383854,-0.143417 -0.56257,-0.249562 -0.178717,-0.106145 -1.730285,-1.603858 -3.447928,-3.32825 -2.916743,-2.928201 -3.133468,-3.163914 -3.281661,-3.569161 -0.189212,-0.517418 -0.200551,-0.934861 -0.04007,-1.475008 L 20.876888,22.918 20.366493,22.403919 c -0.280717,-0.282744 -0.53096,-0.51408 -0.556096,-0.51408 -0.02514,0 -0.38046,0.224621 -0.78961,0.499161 -1.297705,0.870756 -2.780316,1.495149 -4.356328,1.834643 -1.046906,0.225515 -3.223285,0.280637 -4.307255,0.10909 C 6.914924,23.787963 3.9250394,21.87693 2.0192729,19.003406 0.65931669,16.952858 -4.7022422e-8,14.737476 -4.7022422e-8,12.218414 -4.7022422e-8,10.604125 0.24338815,9.2624354 0.80379077,7.7874682 1.8478675,5.0394852 3.9839667,2.6685933 6.6003811,1.3537369 10.841682,-0.77769286 15.810504,-0.36950552 19.553247,2.4178103 c 4.05212,3.0177167 5.834807,8.3398047 4.423728,13.2067337 -0.357214,1.23206 -1.110146,2.763804 -1.85848,3.780838 l -0.295775,0.401977 0.539701,0.543057 0.539699,0.543058 0.31271,-0.112624 c 0.508209,-0.18303 1.226279,-0.14658 1.744796,0.08857 0.389094,0.176454 0.820284,0.578437 3.534928,3.295487 3.495712,3.49881 3.508743,3.515576 3.505269,4.509924 -0.0029,0.826821 -0.181752,1.137915 -1.264055,2.198564 -0.797808,0.781844 -0.969395,0.914235 -1.319656,1.0182 -0.421674,0.125161 -0.923992,0.143192 -1.325602,0.04759 z M 14.226377,22.009474 c 1.362731,-0.305966 2.875898,-0.986422 3.928886,-1.766779 2.656082,-1.96839 4.203064,-5.20712 4.034487,-8.446517 C 22.052084,9.1507867 21.016508,6.8702955 19.131865,5.0622647 13.81829,-0.03530984 5.0836636,2.114803 2.7490287,9.095059 c -0.3540938,1.058694 -0.4866489,1.909445 -0.4866489,3.123355 0,1.181235 0.1243161,2.00759 0.4597085,3.055783 1.1260409,3.519178 4.12573,6.125267 7.8288287,6.80158 0.775478,0.141628 2.921813,0.102911 3.67546,-0.0663 z M 10.799495,19.414935 C 8.0200762,18.97464 5.958045,17.18058 5.1380229,14.489198 4.9577093,13.897394 4.9371462,13.712017 4.9360301,12.668247 4.9346124,11.341553 5.0493685,10.783574 5.532732,9.7669351 L 5.8108241,9.1820367 5.9079691,10.11919 c 0.2288514,2.207727 0.9796053,3.901842 2.3887114,5.390246 1.213225,1.281502 2.6391965,2.105794 4.4295085,2.560508 0.536904,0.136366 0.892285,0.172718 1.736219,0.1776 0.583624,0.0034 1.046,0.03105 1.027503,0.06148 -0.133077,0.218967 -1.488209,0.810032 -2.258786,0.98521 -0.658401,0.149675 -1.869297,0.209782 -2.43163,0.120701 z\" />\r\n    </svg>\r\n);\r\n","import './searchBox.css';\r\nimport React from \"react\";\r\nimport Button from \"../button/button\";\r\nimport {SearchSVG} from \"../../svgs/searchSVG\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport {SearchBoxProps, SearchBoxState} from \"./searchBoxModel\";\r\n\r\nclass SearchBox extends React.Component<SearchBoxProps, SearchBoxState> {\r\n\r\n    constructor(props: SearchBoxProps, context: any) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            text: '',\r\n            selected: false,\r\n        }\r\n\r\n        bindInstanceMethods(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this._setText(this.props.text);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: SearchBoxProps, prevState: SearchBoxState, snapshot: any) {\r\n        if (prevProps.text !== this.props.text) {\r\n            this._setText(this.props.text);\r\n        }\r\n    }\r\n\r\n    _setText(value: string | undefined) {\r\n        this.setState({\r\n            ...this.state,\r\n            text: value\r\n        })\r\n    }\r\n\r\n    _onTextUpdate(e: { target: { value: any; }; }) {\r\n        if (this.props.onTextChange) {\r\n            this.props.onTextChange(e.target.value);\r\n        }\r\n    }\r\n\r\n    _onKeyPress (e: { key: string; }) {\r\n        switch (e.key.toUpperCase()) {\r\n            case 'ENTER':\r\n                if (this.props.onSearch) {\r\n                    this.props.onSearch();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    _setSelected(focused: boolean) {\r\n        this.setState({\r\n            ...this.state,\r\n            selected: focused,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {className, onSearch, onTextChange, light, placeholder, ...rest} = this.props;\r\n\r\n        const { text, selected } = this.state;\r\n\r\n        let cn = \"search-box d-flex align-items-stretch\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n        if (light) {\r\n            cn += \" light rounded-lg\"\r\n        }\r\n        if (selected) {\r\n            cn += \" selected\";\r\n        }\r\n\r\n        return (\r\n            <div className={cn} {...rest}>\r\n                <Button className={\"rounded-0 border-0 btn-transparent\"} onClick={onSearch}>\r\n                    <SearchSVG className={\"tiny-image-container\"}/>\r\n                </Button>\r\n                <input className={\"flex-fill px-2 display-4\"} value={text} placeholder={placeholder ? placeholder : \"Search\"} onChange={this._onTextUpdate}\r\n                       onKeyPress={this._onKeyPress} id={'searchBox'} onFocus={() => this._setSelected(true)} onBlur={() => this._setSelected(false)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBox;\r\n","import * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport React, {Component} from \"react\";\r\nimport './xyChart.css';\r\nimport {XYChartProps, XYChartState} from \"./xyChartModel\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport class XYChart extends Component<XYChartProps, XYChartState> {\r\n    private chart: am4charts.XYChart | undefined;\r\n\r\n    componentDidMount() {\r\n        const { data, name, color, divName, minimized } = this.props;\r\n\r\n        let chart = am4core.create(divName, am4charts.XYChart);\r\n\r\n        chart.data = data;\r\n\r\n        let xAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n        xAxis.renderer.grid.template.location = 0;\r\n\r\n        let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n        yAxis.renderer.minWidth = 35;\r\n\r\n        let columnSeries = chart.series.push(new am4charts.ColumnSeries());\r\n        columnSeries.columns.template.fill = am4core.color(\"#48A8FF\");\r\n        columnSeries.dataFields.valueY = \"count\";\r\n        columnSeries.dataFields.dateX = \"item\";\r\n        columnSeries.columns.template.width = am4core.percent(60);\r\n\r\n        // let lineSeries = chart.series.push(new am4charts.LineSeries());\r\n        // lineSeries.dataFields.dateX = \"item\";\r\n        // lineSeries.dataFields.valueY = \"count\";\r\n        // lineSeries.strokeWidth = 4;\r\n        // lineSeries.stroke = am4core.color(\"#48A8FF\");\r\n\r\n        let scrollbarX = new am4charts.XYChartScrollbar();\r\n        scrollbarX.series.push(columnSeries);\r\n        chart.scrollbarX = scrollbarX;\r\n\r\n        this.chart = chart;\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<XYChartProps>, prevState: Readonly<XYChartState>, snapshot?: any) {\r\n        const { data, minimized } = this.props;\r\n\r\n        if (this.chart) {\r\n            this.chart.data = data;\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { className, name, color, divName, minimized } = this.props;\r\n\r\n        let cn = \"xy-chart d-flex flex-column h-100\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n        if (minimized) {\r\n            cn += ` minimized`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={\"p-5 w-100 h-100\"}>\r\n                    <div id={divName} className={'w-100 h-100'}/>\r\n                </div>\r\n                <div className={\"legend d-flex flex-column position-absolute shadow-lg mt-2 ml-3\"}>\r\n                    <div className={\"legend-title p-3 header-3 cursor-pointer\"} style={{background: color,}}>{name}</div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4plugins_wordCloud from \"@amcharts/amcharts4/plugins/wordCloud\";\r\nimport React, {Component} from \"react\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport './wordCloud.css';\r\nimport {traceUpdate} from \"../../../../../framework.visual/extras/useTraceUpdate\";\r\nimport {WordCloudProps, WordCloudState} from \"./wordCloudModel\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport class WordCloud extends Component<WordCloudProps, WordCloudState> {\r\n    private chart: am4plugins_wordCloud.WordCloud | undefined;\r\n    series: am4plugins_wordCloud.WordCloudSeries | undefined;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data, name, color, divName, minimized } = this.props;\r\n\r\n        let chart = am4core.create(divName, am4plugins_wordCloud.WordCloud);\r\n\r\n        let series = chart.series.push(new am4plugins_wordCloud.WordCloudSeries());\r\n\r\n        series.dataFields.word = \"item\";\r\n        series.dataFields.value = \"count\";\r\n\r\n        series.data = data;\r\n\r\n        this.chart = chart;\r\n        this.series = series;\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<WordCloudProps>, prevState: Readonly<WordCloudState>, snapshot?: any) {\r\n        const { data, minimized } = this.props;\r\n\r\n        if (this.series) {\r\n            this.series.data = data;\r\n            traceUpdate(prevProps, prevState, this.props, this.state);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { className, name, color, divName, minimized } = this.props;\r\n\r\n        let cn = \"word-cloud d-flex flex-column h-100\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n        if (minimized) {\r\n            cn += ` minimized`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={\"p-5 w-100 h-100\"}>\r\n                    <div id={divName} className={'w-100 h-100'}/>\r\n                </div>\r\n                <div className={\"legend d-flex flex-column position-absolute shadow-lg mt-2 ml-3\"}>\r\n                    <div className={\"legend-title p-3 header-3 cursor-pointer\"} style={{background: color,}}>{name}</div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import {useEffect, useRef} from \"react\";\r\n\r\nexport const traceUpdate = (prevProps: Readonly<any>, prevState: Readonly<any>, props: { [s: string]: any; } | ArrayLike<any>, state: Readonly<any>) => {\r\n    Object.entries(props).forEach(([key, val]) =>\r\n        prevProps[key] !== val && console.log(`Prop '${key}' changed`)\r\n    );\r\n    if (state) {\r\n        Object.entries(state).forEach(([key, val]) =>\r\n            prevState[key] !== val && console.log(`State '${key}' changed`)\r\n        );\r\n    }\r\n};\r\n\r\nexport function useTraceUpdate(tracedObject: any, traceName: string) {\r\n    const prev = useRef(tracedObject);\r\n    useEffect(() => {\r\n        const tracedItems = Object.entries(tracedObject).reduce((accumulator: any, [key, value]) => {\r\n            if (prev.current[key] !== value) {\r\n                accumulator[key] = [prev.current[key], value];\r\n            }\r\n            return accumulator;\r\n        }, {});\r\n        if (Object.keys(tracedItems).length > 0) {\r\n            console.log(`Changed ${traceName}:`, tracedItems);\r\n        }\r\n        prev.current = tracedObject;\r\n    });\r\n}\r\n","import React, {Component} from \"react\";\r\nimport './circlePieChart.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport {CirclePieChartProps, CirclePieChartState} from \"./circlePieChartModel\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport class CirclePieChart extends Component<CirclePieChartProps, CirclePieChartState> {\r\n    private chart: am4charts.PieChart3D | undefined;\r\n    series: am4charts.PieSeries3D | undefined;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data, name, color, divName, minimized } = this.props;\r\n\r\n        let chart = am4core.create(divName, am4charts.PieChart3D);\r\n\r\n        chart.hiddenState.properties.opacity = 0;//initial animation\r\n        chart.depth = 10;\r\n\r\n        let series = chart.series.push(new am4charts.PieSeries3D());\r\n        series.dataFields.value = \"count\";\r\n        series.dataFields.category = \"item\";\r\n        // series.dataFields.radiusValue = \"count\";\r\n        series.colors.step = 2;\r\n\r\n        // Configure tooltips\r\n        series.slices.template.tooltipText = \"{item}: {count}\";\r\n        series.slices.template.tooltipX = am4core.percent(50);\r\n        series.slices.template.tooltipY = am4core.percent(50);\r\n\r\n        // Disable ticks and labels\r\n        series.labels.template.disabled = true;\r\n        series.ticks.template.disabled = true;\r\n\r\n        series.hiddenState.properties.endAngle = -90;//initial animation\r\n\r\n        // Configure legend\r\n        chart.legend = new am4charts.Legend();\r\n        chart.legend.position = \"right\";\r\n        chart.legend.maxHeight = 230;\r\n        chart.legend.scrollable = true;\r\n        chart.legend.itemContainers.template.paddingTop = 5;\r\n        chart.legend.itemContainers.template.paddingBottom = 5;\r\n        chart.legend.labels.template.truncate = false;\r\n        chart.legend.labels.template.wrap = true;\r\n\r\n        chart.data = data;\r\n\r\n        this.chart = chart;\r\n        this.series = series;\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<CirclePieChartProps>, prevState: Readonly<CirclePieChartState>, snapshot?: any) {\r\n        const { data, minimized } = this.props;\r\n\r\n        if (this.chart) {\r\n            this.chart.data = data;\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { className, name, color, divName, minimized } = this.props;\r\n\r\n        let cn = \"circle-pie-chart d-flex flex-column h-100\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n        if (minimized) {\r\n            cn += ` minimized`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={\"p-4 w-100 h-100\"}>\r\n                    <div id={divName} className={'w-100 h-100'}/>\r\n                </div>\r\n                <div className={\"legend d-flex flex-column position-absolute shadow-lg mt-2 ml-3\"}>\r\n                    <div className={\"legend-title p-3 header-3 cursor-pointer\"} style={{background: color,}}>{name}</div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import {MenuItemVM} from \"../../../framework.visual/model/menuItemVM\";\r\nimport {MetaDataVM} from \"../../../framework.visual/model/metaDataVM\";\r\nimport {Nullable} from \"../../../framework/extras/typeUtils\";\r\nimport React from \"react\";\r\nimport {ReferenceType, UserInfo} from \"../../../model\";\r\n\r\nexport type SearchResultsStateProps = {\r\n    className: string;\r\n    searchResults: DocumentInfoVM[];\r\n    resultViews: Record<string, MenuItemVM>;\r\n    selectedResultView: string;\r\n    sortTypes: SortPropertyInfoVM[];\r\n    selectedSort: SortPropertyInfoVM;\r\n    pageWidth?: PageWidth;\r\n    userLookup?: Record<string, UserInfo>;\r\n}\r\n\r\nexport type SearchResultsDispatchProps = {\r\n    onDocumentSelected: (id: Nullable<string>) => void;\r\n    onResultViewSelected: (id: string) => void;\r\n    onSortSelected: (id: Nullable<string>) => void;\r\n}\r\n\r\nexport type SearchResultsProps = SearchResultsStateProps & SearchResultsDispatchProps & MetaDataVM;\r\n\r\nexport enum PageWidth {\r\n    FULL='FULL',\r\n    ONE_HALF='ONE_HALF',\r\n    ONE_THIRD='ONE_THIRD',\r\n}\r\n\r\nexport type SearchResultsState = {\r\n    pageWidth: PageWidth;\r\n    columns?: any[];\r\n}\r\n\r\nexport type ReferenceInfoVM = {\r\n    id: string;\r\n    title: string;\r\n    type: ReferenceType;\r\n    className: string;\r\n}\r\n\r\nexport type DocumentInfoVM = {\r\n    [key: string]: any;\r\n    id: string;\r\n    author?: string;\r\n    department?: string;\r\n    file_name?: string;\r\n    file_size?: string;\r\n    type?: string;\r\n    page_count?: string;\r\n    primary_sme_email?: string;\r\n    primary_sme_name?: string;\r\n    primary_sme_phone?: string;\r\n    private_tag?: string[],\r\n    project?: string,\r\n    public_tag?: string[],\r\n    publication_date?: string,\r\n    purpose?: string;\r\n    secondary_sme_email?: string;\r\n    secondary_sme_name?: string;\r\n    secondary_sme_phone?: string;\r\n    status?: string;\r\n    title?: string;\r\n    timestamp?: string;\r\n    uploadedBy_id?: string;\r\n    preview_url?: string;\r\n    original_url?: string\r\n    isUpdating?: boolean;\r\n    isPending?: boolean;\r\n    selected?: boolean;\r\n}\r\n\r\nexport type SortPropertyInfoVM = {\r\n    id?: string;\r\n    title?: Nullable<string>;\r\n    value?: Nullable<any>;\r\n    selected?: boolean;\r\n}\r\n","import React, {Component} from \"react\";\r\nimport './donutPieChart.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport {DonutPieChartProps, DonutPieChartState} from \"./donutPieChartModel\";\r\n\r\nexport class DonutPieChart extends Component<DonutPieChartProps, DonutPieChartState> {\r\n    private chart: am4charts.PieChart3D | undefined;\r\n    series: am4charts.PieSeries3D | undefined;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data, name, color, divName, minimized } = this.props;\r\n\r\n        let chart = am4core.create(divName, am4charts.PieChart3D);\r\n\r\n        chart.hiddenState.properties.opacity = 0;//initial animation\r\n        chart.innerRadius = am4core.percent(40);\r\n        chart.depth = 10;\r\n\r\n        let series = chart.series.push(new am4charts.PieSeries3D());\r\n        series.dataFields.value = \"count\";\r\n        series.dataFields.category = \"item\";\r\n        series.colors.step = 3;\r\n\r\n        // Configure tooltips\r\n        series.slices.template.tooltipText = \"{item}: {count}\";\r\n        series.slices.template.tooltipX = am4core.percent(50);\r\n        series.slices.template.tooltipY = am4core.percent(50);\r\n\r\n        // Disable ticks and labels\r\n        series.labels.template.disabled = true;\r\n        series.ticks.template.disabled = true;\r\n\r\n        series.hiddenState.properties.endAngle = -90;//initial animation\r\n\r\n        chart.legend = new am4charts.Legend();\r\n        chart.legend.position = \"right\";\r\n        chart.legend.maxHeight = 230;\r\n        chart.legend.scrollable = true;\r\n        chart.legend.itemContainers.template.paddingTop = 5;\r\n        chart.legend.itemContainers.template.paddingBottom = 5;\r\n        chart.legend.labels.template.truncate = false;\r\n        chart.legend.labels.template.wrap = true;\r\n\r\n        chart.data = data;\r\n\r\n        this.chart = chart;\r\n        this.series = series;\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<DonutPieChartProps>, prevState: Readonly<DonutPieChartState>, snapshot?: any) {\r\n        const { data, minimized } = this.props;\r\n\r\n        if (this.chart) {\r\n            this.chart.data = data;\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { className, name, color, divName, minimized } = this.props;\r\n\r\n        let cn = \"donut-pie-chart d-flex flex-column h-100\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n        if (minimized) {\r\n            cn += ` minimized`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={\"p-5 w-100 h-100\"}>\r\n                    <div id={divName} className={'w-100 h-100'}/>\r\n                </div>\r\n                <div className={\"legend d-flex flex-column position-absolute shadow-lg mt-2 ml-3\"}>\r\n                    <div className={\"legend-title p-3 header-3 cursor-pointer\"} style={{background: color,}}>{name}</div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport './variableRadiusDonutPieChart.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport {VariableRadiusDonutPieChartProps, VariableRadiusDonutPieChartState} from \"./variableRadiusDonutPieChartModel\";\r\n\r\nexport class VariableRadiusDonutPieChart extends Component<VariableRadiusDonutPieChartProps, VariableRadiusDonutPieChartState> {\r\n    private chart: am4charts.PieChart3D | undefined;\r\n    series: am4charts.PieSeries3D | undefined;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data, name, color, divName, minimized } = this.props;\r\n\r\n        let chart = am4core.create(divName, am4charts.PieChart3D);\r\n\r\n        chart.hiddenState.properties.opacity = 0;//initial animation\r\n\r\n        // chart.startAngle = 160;\r\n        // chart.endAngle = 380;\r\n        chart.innerRadius = am4core.percent(40);\r\n        chart.depth = 10;\r\n\r\n        let series = chart.series.push(new am4charts.PieSeries3D());\r\n        series.dataFields.value = \"count\";\r\n        series.dataFields.category = \"item\";\r\n        // series.dataFields.depthValue = \"count\";\r\n        series.dataFields.radiusValue = \"count\";\r\n        series.colors.step = 3;\r\n\r\n        // Configure tooltips\r\n        series.slices.template.tooltipText = \"{item}: {count}\";\r\n        series.slices.template.tooltipX = am4core.percent(50);\r\n        series.slices.template.tooltipY = am4core.percent(50);\r\n\r\n        // Disable ticks and labels\r\n        series.labels.template.disabled = true;\r\n        series.ticks.template.disabled = true;\r\n\r\n        series.hiddenState.properties.endAngle = -90;//initial animation\r\n\r\n        // Configure legend\r\n        chart.legend = new am4charts.Legend();\r\n        chart.legend.position = \"right\";\r\n        chart.legend.maxHeight = 230;\r\n        chart.legend.scrollable = true;\r\n        chart.legend.itemContainers.template.paddingTop = 5;\r\n        chart.legend.itemContainers.template.paddingBottom = 5;\r\n        chart.legend.labels.template.truncate = false;\r\n        chart.legend.labels.template.wrap = true;\r\n\r\n        chart.data = data;\r\n\r\n        this.chart = chart;\r\n        this.series = series;\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<VariableRadiusDonutPieChartProps>, prevState: Readonly<VariableRadiusDonutPieChartState>, snapshot?: any) {\r\n        const { data, minimized } = this.props;\r\n\r\n        if (this.chart) {\r\n            this.chart.data = data;\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { className, name, color, divName, minimized } = this.props;\r\n\r\n        let cn = \"variable-radius-donut-pie-chart d-flex flex-column h-100\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n        if (minimized) {\r\n            cn += ` minimized`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={\"p-5 w-100 h-100\"}>\r\n                    <div id={divName} className={'w-100 h-100'}/>\r\n                </div>\r\n                <div className={\"legend d-flex flex-column position-absolute shadow-lg mt-2 ml-3\"}>\r\n                    <div className={\"legend-title p-3 header-3 cursor-pointer\"} style={{background: color,}}>{name}</div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './searchGraphsPanel.css';\r\nimport ScrollBar from \"../../theme/widgets/scrollBar/scrollBar\";\r\nimport {XYChart} from \"../../theme/widgets/amcharts/xyChart/xyChart\";\r\nimport {WordCloud} from \"../../theme/widgets/amcharts/wordCloud/wordCloud\";\r\nimport {CirclePieChart} from \"../../theme/widgets/amcharts/circlePieChart/circlePieChart\";\r\nimport {DonutPieChart} from \"../../theme/widgets/amcharts/donutPieChart/donutPieChart\";\r\nimport {VariableRadiusDonutPieChart} from \"../../theme/widgets/amcharts/variableRadiusDonutPieChart/variableRadiusDonutPieChart\";\r\nimport {SearchGraphsProps, SearchGraphsState} from \"./searchGraphsModel\";\r\n\r\nexport class SearchGraphsPanelView extends Component<SearchGraphsProps, SearchGraphsState> {\r\n\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            isAlternate: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<SearchGraphsProps>, prevState: Readonly<SearchGraphsState>, snapshot?: any) {\r\n\r\n    }\r\n\r\n    toggleAlternate() {\r\n        const { isAlternate } = this.state;\r\n        this.setState({\r\n            ...this.state,\r\n            isAlternate: !isAlternate,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            className, departmentData, purposeData, totalUploadsData, customTagsData, docTypeData, isExpanded,\r\n        } = this.props;\r\n\r\n        const { isAlternate } = this.state;\r\n\r\n        let cn = 'search-graphs-panel d-flex flex-column py-3 px-4';\r\n\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn}>\r\n                {/*<Button className={'toggle-view-btn'} onClick={() => this.toggleAlternate()}>Toggle Alternate View</Button>*/}\r\n                <ScrollBar className={`graphs-grid-container ${!isExpanded ? '' : 'expanded'}`} renderTrackVertical={isExpanded} renderTrackHorizontal={!isExpanded}>\r\n                    {\r\n                        isAlternate &&\r\n                        <div className={`d-grid`}>\r\n                            <CirclePieChart\r\n                                className={'span-2'}\r\n                                data={departmentData}\r\n                                divName={'docsByDeptDiv'}\r\n                                name={\"Documents by Department\"}\r\n                                color={'var(--variable-radius-pie-chart-header-background)'}\r\n                                minimized={!isExpanded}\r\n                            />\r\n                            <VariableRadiusDonutPieChart\r\n                                className={'span-2'}\r\n                                data={purposeData}\r\n                                divName={'docsByPurposeDiv'}\r\n                                name={\"Documents by Purpose\"}\r\n                                color={'var(--draggable-pie-chart-header-background)'}\r\n                                minimized={!isExpanded}\r\n                            />\r\n                            <XYChart\r\n                                className={''}\r\n                                data={totalUploadsData}\r\n                                divName={'totalUploadsDiv'}\r\n                                name={'Total Uploads'}\r\n                                color={'var(--xy-chart-header-background)'}\r\n                                minimized={!isExpanded}\r\n                            />\r\n                            <WordCloud\r\n                                className={'span-3'}\r\n                                data={customTagsData}\r\n                                divName={'commonTagsDiv'}\r\n                                name={'Common Tags on Documents'}\r\n                                color={'var(--word-cloud-header-background)'}\r\n                                minimized={!isExpanded}\r\n                            />\r\n                            <DonutPieChart\r\n                                className={'span-2'}\r\n                                data={docTypeData}\r\n                                divName={'docTypeDiv'}\r\n                                name={\"Document Type\"}\r\n                                color={'var(--donut-pie-chart-header-background)'}\r\n                                minimized={!isExpanded}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {\r\n                        !isAlternate &&\r\n                        <div className={`d-grid`}>\r\n                            <CirclePieChart\r\n                                className={''}\r\n                                data={departmentData}\r\n                                divName={\"docsByDeptDiv\"}\r\n                                name={\"Documents by Department\"}\r\n                                color={'var(--variable-radius-pie-chart-header-background)'}\r\n                                minimized={!isExpanded}\r\n                            />\r\n                            <CirclePieChart\r\n                                className={''}\r\n                                data={purposeData}\r\n                                divName={\"docsByPurposeDiv\"}\r\n                                name={\"Documents by Purpose\"}\r\n                                color={'var(--draggable-pie-chart-header-background)'}\r\n                                minimized={!isExpanded}\r\n                            />\r\n                            <XYChart\r\n                                className={''}\r\n                                data={totalUploadsData}\r\n                                divName={'totalUploadsDiv'}\r\n                                name={'Total Uploads'}\r\n                                color={'var(--xy-chart-header-background)'}\r\n                                minimized={!isExpanded}\r\n                            />\r\n                            <WordCloud\r\n                                className={''}\r\n                                data={customTagsData}\r\n                                divName={'commonTagsDiv'}\r\n                                name={'Common Tags on Documents'}\r\n                                color={'var(--word-cloud-header-background)'}\r\n                                minimized={!isExpanded}\r\n                            />\r\n                            <CirclePieChart\r\n                                className={''}\r\n                                data={docTypeData}\r\n                                divName={\"docTypeDiv\"}\r\n                                name={\"Document Type\"}\r\n                                color={'var(--donut-pie-chart-header-background)'}\r\n                                minimized={!isExpanded}\r\n                            />\r\n                        </div>\r\n                    }\r\n                </ScrollBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {SearchGraphsPanelView} from './searchGraphsPanelView'\r\nimport {Presenter} from \"../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../framework/wrappers/componentWrapper\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {ReferenceInfo, ReferenceType, StatType} from \"../../../model\";\r\nimport {forEach, forEachKVP} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {documentService, referenceService, statService} from \"../../../application/serviceComposition\";\r\nimport {ReferenceInfoVM, StatVM} from \"./searchGraphsModel\";\r\n\r\nclass SearchGraphsPanel extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id ='components/searchGraphsPanel';\r\n\r\n        this.view = SearchGraphsPanelView;\r\n\r\n        this.mapStateToProps = (state: any, props: any) => {\r\n            return {\r\n                customTagsData: this.getCustomSharedTagsStatsVMs(state),\r\n                totalUploadsData: this.getTotalUploadsStatsVMs(state),\r\n                departmentData: this.getDepartmentStatsVMs(state),\r\n                purposeData: this.getPurposeStatsVMs(state),\r\n                docTypeData: this.getDocTypeStatsVMs(state),\r\n                isExpanded: !this.hasSearchResults(state),\r\n            }\r\n        }\r\n\r\n        this.mapDispatchToProps = () => {\r\n            return {\r\n\r\n            };\r\n        }\r\n\r\n        this.displayOptions = {\r\n            containerId: 'search-banner-tools',\r\n            visible: false,\r\n            appearClass: 'fadeIn',\r\n            enterClass: 'fadeIn',\r\n            exitClass: 'fadeOut',\r\n        }\r\n    }\r\n\r\n    getCustomSharedTagsStatsVMs = createSelector(\r\n        [() => statService.getStats(StatType.CUSTOM_SHARED_TAG)],\r\n        (stats) => {\r\n\r\n            let itemVMs: Record<string, StatVM> = {};\r\n\r\n            forEach(stats, (stat: StatVM) => {\r\n                const { id, type, item, count} = stat;\r\n\r\n                itemVMs[id] = {\r\n                    item,\r\n                    count,\r\n                };\r\n            });\r\n\r\n            return Object.values(itemVMs);\r\n        }\r\n    );\r\n\r\n    getTotalUploadsStatsVMs = createSelector(\r\n        [() => statService.getStats(StatType.UPLOAD_DATE)],\r\n        (stats) => {\r\n            let itemVMs: Record<string, StatVM> = {};\r\n\r\n            forEach(stats, (stat: StatVM) => {\r\n                const { id, type, item, count} = stat;\r\n\r\n                itemVMs[id] = {\r\n                    item,\r\n                    count,\r\n                };\r\n            });\r\n\r\n            return Object.values(itemVMs);\r\n        }\r\n    );\r\n\r\n    getDepartmentVMs = createSelector(\r\n        [() => referenceService.getAllReferences(ReferenceType.DEPARTMENT)],\r\n        (departments) => {\r\n            let itemVMs: Record<string, ReferenceInfoVM> = {};\r\n\r\n            forEachKVP(departments, (itemKey: string, itemValue: ReferenceInfo) => {\r\n                itemVMs[itemKey] = {\r\n                    ...itemValue\r\n                };\r\n            })\r\n\r\n            return itemVMs;\r\n        }\r\n    )\r\n\r\n    getDepartmentStatsVMs = createSelector(\r\n        [() => statService.getStats(StatType.DEPARTMENT), this.getDepartmentVMs],\r\n        (stats, departments) => {\r\n            let itemVMs: Record<string, StatVM> = {};\r\n\r\n            console.warn('Calculating Stats');\r\n            forEach(stats, (stat: StatVM) => {\r\n                const { id, type, item, count} = stat;\r\n\r\n                itemVMs[id] = {\r\n                    item: departments[item] ? departments[item].title : 'Unknown',\r\n                    count,\r\n                };\r\n            });\r\n\r\n            return Object.values(itemVMs);\r\n        }\r\n    );\r\n\r\n    getPurposeVMs = createSelector(\r\n        [() => referenceService.getAllReferences(ReferenceType.PURPOSE)],\r\n        (purposes) => {\r\n            let itemVMs: Record<string, ReferenceInfoVM> = {};\r\n\r\n            forEachKVP(purposes, (itemKey: string, itemValue: ReferenceInfo) => {\r\n                itemVMs[itemKey] = {\r\n                    ...itemValue\r\n                };\r\n            })\r\n\r\n            return itemVMs;\r\n        }\r\n    )\r\n\r\n    getPurposeStatsVMs = createSelector(\r\n        [() => statService.getStats(StatType.PURPOSE), this.getPurposeVMs],\r\n        (stats, purposes) => {\r\n            // let purposeVMs: ReferenceInfoVM = {};\r\n            //\r\n            // forEachKVP(purposes, (itemKey: string, itemValue: ReferenceInfo) => {\r\n            //     purposeVMs[itemKey] = {\r\n            //         ...itemValue\r\n            //     };\r\n            // })\r\n\r\n            let itemVMs: Record<string, StatVM> = {};\r\n\r\n            // itemVMs[\"0\"] = {\r\n            //     item: \"Dummy\",\r\n            //     disabled: true,\r\n            //     count: 1000,\r\n            //     color: am4core.color(\"#dadada\"),\r\n            //     opacity: 0.3,\r\n            //     strokeDasharray: \"4,4\"\r\n            // };\r\n\r\n            forEach(stats, (stat: StatVM) => {\r\n                const { id, type, item, count} = stat;\r\n\r\n                itemVMs[id] = {\r\n                    item: purposes[item] ? purposes[item].title : 'Unknown',\r\n                    count,\r\n                };\r\n            });\r\n\r\n            return Object.values(itemVMs);\r\n        }\r\n    );\r\n\r\n    getDocTypeStatsVMs = createSelector(\r\n        [() => statService.getStats(StatType.FILE_TYPE)],\r\n        (stats) => {\r\n            let itemVMs: Record<string, StatVM> = {};\r\n\r\n            forEach(stats, (stat: StatVM) => {\r\n                const { id, type, item, count} = stat;\r\n\r\n                let value = item;\r\n                switch (item.toLowerCase()) {\r\n                    case \"application/msword\":\r\n                        value = \"doc\";\r\n                        break;\r\n                    case \"application/vnd.ms-word.document.macroEnabled.12\":\r\n                        value = \"docm\";\r\n                        break;\r\n                    case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n                        value = \"docx\";\r\n                        break;\r\n                    case \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":\r\n                        value = \"dotx\";\r\n                        break;\r\n                    case \"application/vnd.ms-word.template.macroEnabled.12\":\r\n                        value = \"dotm\";\r\n                        break;\r\n                    case \"text/html\":\r\n                        value = \"html\";\r\n                        break;\r\n                    case \"application/pdf\":\r\n                        value = \"pdf\";\r\n                        break;\r\n                    case \"application/vnd.ms-powerpoint.template.macroEnabled.12\":\r\n                        value = \"potm\";\r\n                        break;\r\n                    case \"application/vnd.openxmlformats-officedocument.presentationml.template\":\r\n                        value = \"potx\";\r\n                        break;\r\n                    case \"application/vnd.ms-powerpoint.addin.macroEnabled.12\":\r\n                        value = \"ppam\";\r\n                        break;\r\n                    case \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":\r\n                        value = \"ppsx\";\r\n                        break;\r\n                    case \"application/vnd.ms-powerpoint.slideshow.macroEnabled.12\":\r\n                        value = \"ppsm\";\r\n                        break;\r\n                    case \"application/vnd.ms-powerpoint\":\r\n                        value = \"ppt\";\r\n                        break;\r\n                    case \"application/vnd.ms-powerpoint.presentation.macroEnabled.12\":\r\n                        value = \"pptm\";\r\n                        break;\r\n                    case \"application/vnd.openxmlformats-officedocument.presentationml.presentation\":\r\n                        value = \"pptx\";\r\n                        break;\r\n                    case \"application/rtf\":\r\n                        value = \"rtf\";\r\n                        break;\r\n                    case \"text/rtf\":\r\n                        value = \"rtf2\";\r\n                        break;\r\n                    case \"text/plain\":\r\n                        value = \"txt\";\r\n                        break;\r\n                    case \"text/csv\":\r\n                        value = \"csv\";\r\n                        break;\r\n                    case \"application/csv\":\r\n                        value = \"csv1\";\r\n                        break;\r\n                    case \"application/json\":\r\n                        value = \"json\";\r\n                        break;\r\n                    case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\r\n                        value = \"xlsx\";\r\n                        break;\r\n                    case \"application/vnd.ms-excel.sheet.binary.macroEnabled.12\":\r\n                        value = \"xlsb\";\r\n                        break;\r\n                    case \"application/vnd.ms-excel\":\r\n                        value = \"xls\";\r\n                        break;\r\n                    case \"application/vnd.ms-excel.sheet.macroEnabled.12\":\r\n                        value = \"xlsm\";\r\n                        break;\r\n                    case \"image/bmp\":\r\n                        value = \"bmp\";\r\n                        break;\r\n                    case \"image/gif\":\r\n                        value = \"gif\";\r\n                        break;\r\n                    case \"image/jpeg\":\r\n                        value = \"jpg\";\r\n                        break;\r\n                    case \"image/png\":\r\n                        value = \"png\";\r\n                        break;\r\n                    case \"multipart/form-data\":\r\n                        value = \"file\";\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                itemVMs[id] = {\r\n                    item: value,\r\n                    count,\r\n                };\r\n            });\r\n\r\n            return Object.values(itemVMs);\r\n        }\r\n    );\r\n\r\n    hasSearchResults = createSelector(\r\n        [documentService.getSearchDocuments],\r\n        (items) => {\r\n\r\n            let length = 0;\r\n            forEach(items, () => {\r\n                length++;\r\n            });\r\n\r\n            return (length > 0);\r\n        }\r\n    );\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: SearchGraphsPanelPresenter,\r\n    componentId: SearchGraphsPanelId\r\n} = createComponentWrapper(SearchGraphsPanel);\r\n","import React, {Component, ReactNode} from 'react';\r\nimport './searchBanner.css';\r\nimport SearchBox from \"../../theme/widgets/searchBox/searchBox\";\r\nimport Button from \"../../theme/widgets/button/button\";\r\nimport {ParamType} from \"../../../model\";\r\nimport ComboBox from \"../../theme/widgets/comboBox/comboBox\";\r\nimport Portal from \"../../theme/widgets/portal/portal\";\r\nimport TextEdit from \"../../theme/widgets/textEdit/textEdit\";\r\nimport {ArrowDownSVG} from \"../../theme/svgs/arrowDownSVG\";\r\nimport {ArrowUpSVG} from \"../../theme/svgs/arrowUpSVG\";\r\nimport {SearchGraphsPanelId} from \"../searchGraphsPanel/searchGraphsPanelPresenter\";\r\nimport {bindInstanceMethods, Nullable} from \"../../../framework/extras/typeUtils\";\r\nimport {SearchBannerProps, SearchBannerState} from \"./searchBannerModel\";\r\nimport {MenuItemVM} from \"../../../framework.visual/model/menuItemVM\";\r\n\r\nclass SearchBannerView extends Component<SearchBannerProps, SearchBannerState> {\r\n\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n\r\n        bindInstanceMethods(this);\r\n\r\n        this.state = {\r\n            showAdvanced: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { onToolSelected } = this.props;\r\n        onToolSelected(SearchGraphsPanelId);\r\n    }\r\n\r\n    _setShowAdvanced(value: boolean) {\r\n        this.setState({\r\n            ...this.state,\r\n            showAdvanced: value\r\n        })\r\n    }\r\n\r\n    _onSearchTextChanged(value: string) {\r\n        const { onSearchTextChanged } = this.props;\r\n\r\n        if (onSearchTextChanged) {\r\n            onSearchTextChanged(value);\r\n        }\r\n    }\r\n\r\n    _onTextChanged(id: string, value: string) {\r\n        const { onSearchParamChanged } = this.props;\r\n\r\n        if (onSearchParamChanged) {\r\n            onSearchParamChanged(id, value);\r\n        }\r\n    }\r\n\r\n    _onNumberChanged(id: string, value: string) {\r\n        const { onSearchParamChanged } = this.props;\r\n\r\n        if (onSearchParamChanged) {\r\n            onSearchParamChanged(id, value);\r\n        }\r\n    }\r\n\r\n    _onDateChanged(state: any, id: string, propertyId: string, propertyValue: string) {\r\n        const { onSearchParamChanged } = this.props;\r\n\r\n        let nextValue = {\r\n            ...state,\r\n            [propertyId]: propertyValue\r\n        }\r\n\r\n        if (onSearchParamChanged) {\r\n            onSearchParamChanged(id, nextValue);\r\n        }\r\n    }\r\n\r\n    _onTypeChanged(id: string, value: string | string[]) {\r\n        const { onSearchParamChanged } = this.props;\r\n\r\n        if (onSearchParamChanged) {\r\n            onSearchParamChanged(id, value);\r\n        }\r\n    }\r\n\r\n    _onClearSearch() {\r\n        const { onClearSearch } = this.props;\r\n\r\n        if (onClearSearch) {\r\n            onClearSearch();\r\n        }\r\n    }\r\n\r\n    _onSearch() {\r\n        const { onSearch } = this.props;\r\n\r\n        if (onSearch) {\r\n            onSearch();\r\n        }\r\n\r\n        this._setShowAdvanced(false);\r\n    }\r\n\r\n    _onDone() {\r\n        this._setShowAdvanced(false);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            className, onSearch, onSearchTextChanged, searchText, tools, onToolSelected, onClearSearch,\r\n            searchParamsBasic, searchParamsAdvanced, onSearchParamChanged, ...rest\r\n        } = this.props;\r\n\r\n        const {\r\n            showAdvanced\r\n        } = this.state;\r\n\r\n        let toolDivs: ReactNode[] = [];\r\n\r\n        if (tools) {\r\n            toolDivs = tools.map((tool: MenuItemVM) => {\r\n                const {id, graphic:Graphic=null, title='', selected=false} = tool;\r\n                return (\r\n                    <Button key={id} onClick={() => onToolSelected(id)} selected={selected}>\r\n                        <div className={'d-flex h-gap-3 align-items-center'}>\r\n                            {\r\n                                Graphic && <Graphic className={'small-image-container'}/>\r\n                            }\r\n                            <div className={'font-weight-semi-bold'}>{title}</div>\r\n                        </div>\r\n                    </Button>\r\n                )\r\n            })\r\n        }\r\n\r\n        let basicDivs = searchParamsBasic.map((item) => {\r\n            let result = null;\r\n            const {id, title='', value, options= null} = item;\r\n\r\n            let cbTitle = title;\r\n            let dirty = false;\r\n            if (options && options[value]) {\r\n                cbTitle = options[value].title;\r\n                dirty = true;\r\n            }\r\n\r\n            let cbOptions = [\r\n                {\r\n                    id: 'all',\r\n                    title: 'All'\r\n                },\r\n                ...Object.values(options)\r\n            ]\r\n\r\n            result = (\r\n                <ComboBox key={id} className={dirty ? 'dirty rounded-lg' : 'rounded-lg'} light={true}\r\n                          title={cbTitle || ''} items={cbOptions} multiSelect={true}\r\n                          onSelect={(value: any) => this._onTypeChanged(id, value)}/>\r\n            )\r\n            return result;\r\n        })\r\n\r\n        let advancedDivs = searchParamsAdvanced.map((item) => {\r\n            const {id, type, title='', dirty, value, options= null} = item;\r\n\r\n            let cellRenderer = null;\r\n\r\n            switch (type) {\r\n                case ParamType.STRING: {\r\n                    cellRenderer = (\r\n                        <TextEdit dirty={dirty} edit={true} placeholder={title || ''} name={id} value={value} onSubmit={(id: string, value: string) => this._onTextChanged(id, value)}/>\r\n                    )\r\n                    break;\r\n                }\r\n                case ParamType.NUMBER: {\r\n                    cellRenderer = (\r\n                        <TextEdit dirty={dirty} edit={true} value={value} name={id} onSubmit={(id: string, value: string) => this._onTextChanged(id, value)}/>\r\n                    )\r\n                    break;\r\n                }\r\n                case ParamType.DATE_RANGE: {\r\n                    const { start_date, end_date } = value || {};\r\n                    cellRenderer = (\r\n                        <div className={'d-flex h-gap-4 align-items-end'}>\r\n                            <div className={'d-flex h-gap-2 align-items-center'}>\r\n                                <TextEdit dirty={dirty} edit={true} type={'date'} value={start_date} onChange={(value) => this._onDateChanged(value, id, 'start_date', value)}/>\r\n                            </div>\r\n                            <div className={'d-flex align-items-end'}>\r\n                                <div className={''}>to</div>\r\n                            </div>\r\n                            <div className={'d-flex h-gap-2 align-items-center'}>\r\n                                <TextEdit dirty={dirty} edit={true} type={'date'} value={end_date} onChange={(value) => this._onDateChanged(value, id, 'end_date', value)}/>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    break;\r\n                }\r\n                case ParamType.OPTIONS: {\r\n                    let cbTitle = title;\r\n                    let dirty = false;\r\n                    if (options && options[value]) {\r\n                        cbTitle = options[value].title;\r\n                        dirty = true;\r\n                    }\r\n\r\n                    let cbOptions = {\r\n                        'all': {\r\n                            id: 'all',\r\n                            title: 'All'\r\n                        },\r\n                        ...options\r\n                    }\r\n\r\n                    cellRenderer = (\r\n                        <ComboBox className={dirty ? 'dirty rounded-lg' : 'rounded-lg'} light={true}\r\n                                  title={cbTitle || ''} items={cbOptions} multiSelect={true}\r\n                                  onSelect={(value: any) => this._onTypeChanged(id, value)}/>\r\n                    )\r\n                    break;\r\n                }\r\n                default: {\r\n                    // cellRenderer = (\r\n                    //     <div>NO RENDERER</div>\r\n                    // )\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let cn = \"d-flex justify-content-between p-2 align-items-stretch h-gap-3\";\r\n\r\n            return (\r\n                <div key={id} className={cn}>\r\n                    <div className={'d-flex align-items-end'}>\r\n                        <div className={'font-weight-semi-bold p-3'} style={{minWidth: '15rem'}}>{title}</div>\r\n                    </div>\r\n                    {cellRenderer}\r\n                </div>\r\n            )\r\n        })\r\n\r\n        let cn = 'd-flex';\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        const maxWidth = '61.0rem';\r\n\r\n        let arrowSVG = <ArrowDownSVG className={''}/>;\r\n        if (showAdvanced) {\r\n            arrowSVG = <ArrowUpSVG className={''}/>;\r\n        }\r\n\r\n        return (\r\n            <div className={cn} {...rest}>\r\n                <div className={'flex-fill search-banner d-flex flex-column justify-content-center p-4 v-gap-5'}>\r\n                    <div className={'align-items-stretch d-flex'}>\r\n                        <div className={'flex-fill d-flex flex-column align-items-stretch v-gap-2'}>\r\n                            <div className={'d-flex flex-wrap align-items-end'}>\r\n                                <SearchBox className={'mr-3'}\r\n                                           style={{minWidth: maxWidth, maxWidth: maxWidth}} light={true}\r\n                                           onSearch={this._onSearch} text={searchText}\r\n                                           onTextChange={this._onSearchTextChanged}/>\r\n                                <div className={'d-flex h-gap-2 align-items-end mt-3'} >\r\n                                    {basicDivs}\r\n\r\n\r\n                                    <Portal\r\n                                        isOpen={showAdvanced}\r\n                                        zIndex={9999}\r\n                                        enterClass={'growVertical'}\r\n                                        exitClass={'shrinkVertical'}\r\n                                        timeout={200}\r\n                                        autoLayout={false}\r\n                                        onShouldClose={null}\r\n                                        portalContent={\r\n                                            ({}) =>\r\n                                            <div className={'portal position-absolute'}\r\n                                            >\r\n                                                <div className={'advanced d-flex flex-column v-gap-5 shadow mt-3'}>\r\n                                                    <div>\r\n                                                        {advancedDivs}\r\n                                                    </div>\r\n                                                    <div className={'d-flex flex-fill justify-content-end align-items-end'}>\r\n                                                        <div className={'d-flex flex-fill justify-content-end align-items-end footer p-4'}>\r\n                                                            <Button light={true} onClick={this._onDone}>Done</Button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        }>\r\n                                        <Button className={'combo-box-button'} orientation={\"horizontal\"} onClick={((event) => this._setShowAdvanced(!showAdvanced))}>\r\n                                            <div className={\"flex-fill\"}>More</div>\r\n                                            <div className={\"d-flex align-items-center tiny-image-container combo-box-arrow pe-none\"}>{arrowSVG}</div>\r\n                                        </Button>\r\n                                    </Portal>\r\n\r\n                                </div>\r\n                                <div className={'ml-3 mt-3 exclude-item'}>\r\n                                    <Button className={'combo-box-button'} onClick={this._onClearSearch}>\r\n                                        <div className={\"header-3 flex-fill\"}>Clear</div>\r\n                                    </Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className={\"d-flex justify-content-between\"} style={{maxWidth: maxWidth}}>\r\n                                <div className={\"d-flex h-gap-4\"}>\r\n                                    { toolDivs }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBannerView;\r\n","import {createSelector} from \"@reduxjs/toolkit\";\r\nimport SearchBannerView from \"./searchBannerView\";\r\nimport {Presenter} from \"../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../framework/wrappers/componentWrapper\";\r\nimport {forEach} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {\r\n    displayService,\r\n    documentService,\r\n    referenceService,\r\n    repoService,\r\n    tagService\r\n} from \"../../../application/serviceComposition\";\r\nimport {ReferenceInfo, ReferenceType, SearchBannerMenuItem, SearchParamInfo, TagInfo} from \"../../../model\";\r\nimport {MenuItemVM} from \"../../../framework.visual/model/menuItemVM\";\r\nimport {SearchParamItemVM} from \"./searchBannerModel\";\r\n\r\nconst VIEW_ID = 'search-banner-tools';\r\n\r\nclass SearchBanner extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id = 'components/searchBanner';\r\n\r\n        this.view = SearchBannerView;\r\n\r\n        this.mapStateToProps = (state: any) => {\r\n\r\n            return {\r\n                tools: this.getToolVMs(state),\r\n                searchText: documentService.getSearchText(),\r\n                searchParamsBasic: this.getSearchParamsBasicVMs(state),\r\n                searchParamsAdvanced: this.getSearchParamsAdvancedVMs(state)\r\n            }\r\n        }\r\n\r\n        this.mapDispatchToProps = () => {\r\n            return {\r\n                onSearch: () => {\r\n                    displayService.popNode(VIEW_ID);\r\n                    documentService.fetchDocuments()\r\n                },\r\n                onSearchParamChanged: (id: string, value: string | string[] ) => documentService.setSearchParam(id, value),\r\n                onSearchTextChanged: (value: string) => documentService.setSearchText(value),\r\n                onToolSelected: (id: string) => this.onToolSelected(id),\r\n                onClearSearch: () => documentService.clearSearch()\r\n            };\r\n        }\r\n    }\r\n\r\n    getTools = () => {\r\n        return repoService.getAll<SearchBannerMenuItem>(SearchBannerMenuItem.class);\r\n    }\r\n\r\n    onToolSelected(nextId: string) {\r\n        let currentId = displayService.getSelectedNodeId(VIEW_ID)\r\n\r\n        if (currentId === nextId) {\r\n            displayService.popNode(VIEW_ID);\r\n        } else {\r\n            displayService.pushNode(nextId);\r\n        }\r\n    }\r\n\r\n\r\n    getToolVMs = createSelector(\r\n        [() => displayService.getSelectedNodeId(VIEW_ID), () => this.getTools()], // if this changes, will re-evaluate the combiner and trigger a re-render\r\n        (selectedId, items) => {\r\n            let itemVMs: Record<string, MenuItemVM> = {};\r\n\r\n            // build the hash map used to redux data\r\n            forEach(items, (item: SearchBannerMenuItem) => {\r\n                itemVMs[item.id] = {\r\n                    id: item.id,\r\n                    title: item.title,\r\n                    graphic: item.graphic,\r\n                    context: item.context,\r\n                    selected: selectedId === item.id\r\n                };\r\n            })\r\n\r\n            return Object.values(itemVMs);\r\n        }\r\n    );\r\n\r\n    createItemVM(itemVMs: Record<string, SearchParamItemVM>, item: SearchParamInfo, referenceTypes: Record<ReferenceType, Record<string, ReferenceInfo>>, publicTags: Record<string, TagInfo>) {\r\n        const { id, type, value, title, dirty, options, optionsId} = item;\r\n\r\n        let itemVM:SearchParamItemVM = {\r\n            id,\r\n            type,\r\n            value,\r\n            title,\r\n            dirty,\r\n            options,\r\n        };\r\n\r\n        if (id === 'tags') {\r\n            itemVM.options = {\r\n                ...publicTags,\r\n            }\r\n        } else if (optionsId && referenceTypes) {\r\n            let index;\r\n            switch (optionsId) {\r\n                case 'DEPARTMENT':\r\n                    index = ReferenceType.DEPARTMENT;\r\n                    break;\r\n                case 'PURPOSE':\r\n                    index = ReferenceType.PURPOSE;\r\n                    break;\r\n                case 'ROLE':\r\n                    index = ReferenceType.ROLE;\r\n                    break;\r\n                case 'STATUS':\r\n                default:\r\n                    index = ReferenceType.STATUS;\r\n                    break;\r\n            }\r\n            itemVM.options = {\r\n                ...referenceTypes[index],\r\n            };\r\n        }\r\n\r\n        itemVMs[id] = itemVM;\r\n    }\r\n\r\n    getSearchParamsBasicVMs = createSelector(\r\n        [documentService.getSearchParams, () => referenceService.getAllReferencesGroupedByType(), tagService.getAllPublicTags],\r\n        (items, referenceTypes, publicTags) => {\r\n            console.log('calculating search param vms')\r\n            let itemVMs: Record<string, SearchParamItemVM> = {};\r\n\r\n            forEach(items, (item: SearchParamInfo) => {\r\n                if (item.visible && !item.advanced) {\r\n                    this.createItemVM(itemVMs, item, referenceTypes, publicTags)\r\n                }\r\n            });\r\n            return Object.values(itemVMs);\r\n        }\r\n    );\r\n\r\n    getSearchParamsAdvancedVMs = createSelector(\r\n        [documentService.getSearchParams, referenceService.getAllReferencesGroupedByType, tagService.getAllPublicTags],\r\n        (items, referenceTypes, publicTags) => {\r\n            let itemVMs: Record<string, SearchParamItemVM> = {};\r\n\r\n            forEach(items, (item: SearchParamInfo) => {\r\n                if (item.visible && item.advanced) {\r\n                    this.createItemVM(itemVMs, item, referenceTypes, publicTags)\r\n                }\r\n            });\r\n            return Object.values(itemVMs);\r\n        }\r\n    );\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: SearchBannerPresenter,\r\n    componentId: SearchBannerId\r\n} = createComponentWrapper(SearchBanner);\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const SortSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 0,24.912995 v -1.75367 h 5.33333 5.33334 v 1.75367 1.75367 H 5.33333 0 Z m 0,-8.91299 v -1.77175 h 10.66667 10.66666 v 1.77175 1.77175 H 10.66667 0 Z m 0,-8.89492 v -1.77175 h 16 16 v 1.77175 1.77175 H 16 0 Z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","export enum Size {\r\n    large = \"large\",\r\n    medium = \"medium\",\r\n    small = \"small\",\r\n}\r\n\r\nexport type LoadingIndicatorProps = {\r\n    className?: string;\r\n    size?: Size;\r\n}\r\n\r\nexport type LoadingIndicatorState = {\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport './searchResultsPanel.css';\r\nimport Button from \"../../theme/widgets/button/button\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {getClassNames} from \"../../../framework.visual/extras/utils/animationUtils\";\r\nimport ComboBox from \"../../theme/widgets/comboBox/comboBox\";\r\nimport {SortSVG} from \"../../theme/svgs/sortSVG\";\r\nimport {LoadingIndicator} from \"../../theme/widgets/loadingIndicator/loadingIndicator\";\r\nimport {PageWidth, SearchResultsProps, SearchResultsState} from \"./searchResultsModel\";\r\nimport {SearchResultsMenuItem} from \"../../model/searchResultsMenuItem\";\r\nimport {forEach} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\n\r\nclass SearchResultsPanelView extends Component<SearchResultsProps, SearchResultsState> {\r\n    private resizeObserver: ResizeObserver;\r\n\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            pageWidth: PageWidth.FULL,\r\n        }\r\n\r\n        this.resizeObserver = new ResizeObserver(entries => {\r\n            for (let entry of entries) {\r\n                if (entry.contentRect) {\r\n                    const width = entry.contentRect.width;\r\n                    if (width > 1850) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            pageWidth: PageWidth.FULL,\r\n                        })\r\n                    } else if (width > 900) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            pageWidth: PageWidth.ONE_HALF,\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            pageWidth: PageWidth.ONE_THIRD,\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        let element = document.getElementById('search-results-panel');\r\n        this.resizeObserver.observe(element != null ? element : new Element());\r\n    }\r\n\r\n    render() {\r\n        const { className, searchResults, onDocumentSelected, resultViews, onResultViewSelected, userLookup,\r\n            sortTypes, selectedSort, onSortSelected, isLoading, hasError, errorMessage, selectedResultView } = this.props;\r\n\r\n        // select how to render the results\r\n        let ResultRenderer = null;\r\n        if (selectedResultView) {\r\n            if (resultViews[selectedResultView] != null) {\r\n                ResultRenderer = resultViews[selectedResultView].context;\r\n            }\r\n        }\r\n\r\n        let cn = \"d-flex\";\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n        if (isLoading) {\r\n            cn += ` pe-none`;\r\n        }\r\n\r\n        let resultViewDivs: JSX.Element[] = [];\r\n        forEach(resultViews, (resultView: SearchResultsMenuItem) => {\r\n            const {id, title='test', graphic:Graphic, selected} = resultView;\r\n\r\n            let item = (\r\n                <div key={id}>\r\n                    <Button tooltip={title} selected={selected} onClick={() => onResultViewSelected(id)}>\r\n                        <Graphic className={'small-image-container'}/>\r\n                    </Button>\r\n                </div>\r\n            )\r\n            resultViewDivs.push(item);\r\n        })\r\n\r\n        const { title:sortTitle='Sort' } = selectedSort || {};\r\n\r\n        return (\r\n            <div className={cn} id={'search-results-panel'}>\r\n                <div className={'flex-fill search-results-panel d-flex flex-column align-items-center justify-content-center py-4 pl-4 v-gap-5 position-relative'}>\r\n                    <div className={'d-flex flex-fill w-100 pr-4'}>\r\n                        {\r\n                            searchResults && searchResults.length > 0 &&\r\n                            <div className={'d-flex flex-fill'}>\r\n                                <div className={'justify-content-start'}>\r\n                                    <ComboBox\r\n                                        className={'rounded-lg'}\r\n                                        style={{minWidth:'23.5rem'}}\r\n                                        onSelect={onSortSelected}\r\n                                        title={sortTitle || \"\"}\r\n                                        graphic={SortSVG}\r\n                                        items={sortTypes}\r\n                                        light={true}\r\n                                    />\r\n\r\n                                </div>\r\n                                <div className={'d-flex flex-fill justify-content-end h-gap-3'}>\r\n                                    {resultViewDivs}\r\n                                </div>\r\n                            </div>\r\n\r\n                        }\r\n                    </div>\r\n                    <CSSTransition in={searchResults && searchResults.length > 0} appear={true} timeout={300}\r\n                                   classNames={getClassNames('fadeIn', 'fadeIn', '')} unmountOnExit={true} >\r\n                        <div className={\"search-results h-100 w-100\"}>\r\n                            {\r\n                                ResultRenderer &&\r\n                                <ResultRenderer searchResults={searchResults} onDocumentSelected={onDocumentSelected}\r\n                                                userLookup={userLookup} pageWidth={this.state.pageWidth}/>\r\n                            }\r\n                        </div>\r\n                    </CSSTransition>\r\n                    {\r\n                        isLoading &&\r\n                        <div className={\"position-absolute exclude-item mr-4\"} style={{top: '0', right: '0', bottom: '0', left:'0'}}>\r\n                            <LoadingIndicator/>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        hasError &&\r\n                        <div className={\"position-absolute exclude-item mr-4\"} style={{top: '0', right: '0', bottom: '0', left:'0'}}>\r\n                            <div className={'w-100 h-100 d-flex flex-fill align-items-center justify-content-center text-secondary'}>\r\n                                <div className={'text-pre-wrap'} > {errorMessage}</div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchResultsPanelView;\r\n","import {createSelector} from \"@reduxjs/toolkit\";\r\nimport SearchResultsPanelView from \"./searchResultsPanelView\";\r\nimport {Presenter} from \"../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../framework/wrappers/componentWrapper\";\r\nimport {forEach, forEachKVP} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {DocumentPanelId} from \"../documentPanel/documentPanelPresenter\";\r\nimport {DocumentInfo, MetadataType, ReferenceInfo, ReferenceType, SortPropertyInfo} from \"../../../model\";\r\nimport {\r\n    displayService,\r\n    documentService,\r\n    referenceService,\r\n    repoService,\r\n    selectionService, userService\r\n} from \"../../../application/serviceComposition\";\r\nimport {SearchResultsMenuItem} from \"../../model/searchResultsMenuItem\";\r\nimport {MenuItemVM} from \"../../../framework.visual/model/menuItemVM\";\r\nimport {DocumentInfoVM, ReferenceInfoVM, SortPropertyInfoVM} from \"./searchResultsModel\";\r\n\r\nclass SearchResultsPanel extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id ='components/searchResultsPanel';\r\n\r\n        this.metadataId = MetadataType.DOCUMENTS_GET_ARRAY;\r\n\r\n        this.view = SearchResultsPanelView;\r\n\r\n        this.mapStateToProps = (state: any, props: any) => {\r\n            return {\r\n                searchResults: this.getSearchResultVMs(state),\r\n                resultViews: this.getResultViewVMs(state),\r\n                selectedResultView: this.getSelectedResultViewId(state),\r\n                sortTypes: this.getSortVMs(state),\r\n                selectedSort: this.getSelectedSort(state),\r\n                userLookup: userService.getActiveUsers(),\r\n            };\r\n        }\r\n\r\n        this.mapDispatchToProps = () => {\r\n            return {\r\n                onDocumentSelected: (id: string) => this.onDocumentSelected(id),\r\n                onResultViewSelected: (id: string) => this.onResultViewSelected(id),\r\n                onSortSelected: (id: string) => this.onSortSelected(id)\r\n            };\r\n        }\r\n\r\n        //select card view by default\r\n        this.onResultViewSelected('cardViewId');\r\n    }\r\n\r\n    getDepartmentVMs = createSelector(\r\n        [() => referenceService.getAllReferences(ReferenceType.DEPARTMENT)],\r\n        (departments) => {\r\n            let itemVMs: Record<string, ReferenceInfoVM> = {};\r\n\r\n            forEachKVP(departments, (itemKey: string, itemValue: ReferenceInfo) => {\r\n                itemVMs[itemKey] = {\r\n                    ...itemValue\r\n                };\r\n            })\r\n\r\n            return itemVMs;\r\n        }\r\n    )\r\n\r\n    getStatusVMs = createSelector(\r\n        [() => referenceService.getAllReferences(ReferenceType.STATUS)],\r\n        (statuses) => {\r\n            let itemVMs: Record<string, ReferenceInfoVM> = {};\r\n\r\n            forEachKVP(statuses, (itemKey: string, itemValue: ReferenceInfo) => {\r\n                itemVMs[itemKey] = {\r\n                    ...itemValue\r\n                };\r\n            })\r\n\r\n            return itemVMs;\r\n        }\r\n    )\r\n\r\n    getPurposeVMs = createSelector(\r\n        [() => referenceService.getAllReferences(ReferenceType.PURPOSE)],\r\n        (purposes) => {\r\n            let itemVMs: Record<string, ReferenceInfoVM> = {};\r\n\r\n            forEachKVP(purposes, (itemKey: string, itemValue: ReferenceInfo) => {\r\n                itemVMs[itemKey] = {\r\n                    ...itemValue\r\n                };\r\n            })\r\n\r\n            return itemVMs;\r\n        }\r\n    )\r\n\r\n    getSelectedDocumentId = selectionService.makeGetContext(\"selected-document\");\r\n\r\n    getSearchResultVMs = createSelector(\r\n        [documentService.getSearchDocuments, this.getSelectedDocumentId, this.getDepartmentVMs, this.getStatusVMs, this.getPurposeVMs],\r\n        (items, selectedId, departments, statuses, purposes) => {\r\n            let departmentVMs: Record<string, ReferenceInfoVM> = {};\r\n\r\n            forEachKVP(departments, (itemKey: string, itemValue: ReferenceInfoVM) => {\r\n                departmentVMs[itemKey] = {\r\n                    ...itemValue\r\n                };\r\n            })\r\n\r\n            let statusVMs: Record<string, ReferenceInfoVM> = {};\r\n\r\n            forEachKVP(statuses, (itemKey: string, itemValue: ReferenceInfoVM) => {\r\n                statusVMs[itemKey] = {\r\n                    ...itemValue\r\n                };\r\n            })\r\n\r\n            let purposeVMs: Record<string, ReferenceInfoVM> = {};\r\n\r\n            forEachKVP(purposes, (itemKey: string, itemValue: ReferenceInfoVM) => {\r\n                purposeVMs[itemKey] = {\r\n                    ...itemValue\r\n                };\r\n            })\r\n\r\n            let itemVMs: Record<string, DocumentInfoVM> = {};\r\n\r\n            forEach(items, (item: DocumentInfo) => {\r\n                const {\r\n                    id,\r\n                    author=\"\",\r\n                    department=\"\",\r\n                    file_name=\"\",\r\n                    file_size=\"\",\r\n                    file_type=\"\",\r\n                    file_page_count=\"\",\r\n                    primary_sme_email=\"\",\r\n                    primary_sme_name=\"\",\r\n                    primary_sme_phone=\"\",\r\n                    private_tag=[],\r\n                    project=\"\",\r\n                    public_tag=[],\r\n                    publication_date=\"\",\r\n                    purpose=\"\",\r\n                    secondary_sme_email=\"\",\r\n                    secondary_sme_name=\"\",\r\n                    secondary_sme_phone=\"\",\r\n                    status=\"\",\r\n                    title=\"\",\r\n                    upload_date=\"\",\r\n                    uploadedBy_id=\"\",\r\n                    preview_url=\"\",\r\n                    original_url=\"\",\r\n                    isUpdating,\r\n                } = item;\r\n\r\n                itemVMs[item.id] = {\r\n                    id: id,\r\n                    author: author,\r\n                    department: departmentVMs[department] ? departmentVMs[department].title : department,\r\n                    file_name: title ? file_name : undefined,\r\n                    file_size: file_size,\r\n                    // type: file_type,\r\n                    page_count: file_page_count,\r\n                    primary_sme_email: primary_sme_email ? primary_sme_email : \"N/A\",\r\n                    primary_sme_name: primary_sme_name ? primary_sme_name : \"N/A\",\r\n                    primary_sme_phone: primary_sme_phone ? primary_sme_email : \"N/A\",\r\n                    private_tag: private_tag,\r\n                    project: project,\r\n                    public_tag: public_tag,\r\n                    publication_date: publication_date ? new Date(publication_date).toLocaleString() : 'No Publication Date',\r\n                    purpose: purposeVMs[purpose] ? purposeVMs[purpose].title : purpose,\r\n                    secondary_sme_email: secondary_sme_email ? secondary_sme_email : \"N/A\",\r\n                    secondary_sme_name: secondary_sme_name ? secondary_sme_name : \"N/A\",\r\n                    secondary_sme_phone: secondary_sme_phone ? secondary_sme_phone : \"N/A\",\r\n                    status: statusVMs[status] ? statusVMs[status].title : status,\r\n                    title: title ? title : file_name,\r\n                    timestamp: upload_date ? new Date(upload_date).toLocaleString() : 'No Upload Date',\r\n                    uploadedBy_id: uploadedBy_id,\r\n                    selected: id === selectedId,\r\n                    isUpdating: isUpdating,\r\n                };\r\n\r\n            })\r\n            return Object.values(itemVMs);\r\n        }\r\n    );\r\n\r\n    onDocumentSelected(id: string) {\r\n        selectionService.setContext(\"selected-document\", id);\r\n        displayService.showNode(DocumentPanelId);\r\n    }\r\n\r\n    getResultViews = () => {\r\n        return repoService.getAll<SearchResultsMenuItem>(SearchResultsMenuItem.class);\r\n    }\r\n\r\n    getSelectedResultViewId = selectionService.makeGetContext(\"search-panel-result-view\");\r\n\r\n    getResultViewVMs = createSelector(\r\n        [this.getResultViews, this.getSelectedResultViewId],\r\n        (items, selectedId) => {\r\n            let itemVMs: Record<string, MenuItemVM> = {};\r\n\r\n            forEach(items, (item: SearchResultsMenuItem) => {\r\n                const { id, graphic, context, title} = item;\r\n\r\n                itemVMs[id] = {\r\n                    id,\r\n                    graphic,\r\n                    context,\r\n                    title,\r\n                    selected: id === selectedId,\r\n                };\r\n            });\r\n\r\n            return itemVMs;\r\n        }\r\n    )\r\n\r\n    onResultViewSelected(id: string) {\r\n        selectionService.setContext(\"search-panel-result-view\", id);\r\n    }\r\n\r\n    getSortVMs = createSelector(\r\n        [documentService.getSortTypes, documentService.getActiveSortId],\r\n        (items, selectedId) => {\r\n            let itemVMs: Record<string, SortPropertyInfoVM> = {};\r\n\r\n            forEach(items, (item: SortPropertyInfo) => {\r\n                const { id, title, value} = item;\r\n\r\n                itemVMs[item.id] = {\r\n                    id,\r\n                    title,\r\n                    value,\r\n                    selected: id === selectedId\r\n                };\r\n            });\r\n\r\n            return Object.values(itemVMs);\r\n        }\r\n    );\r\n\r\n    getSelectedSort = createSelector(\r\n        [documentService.getSortTypes, documentService.getActiveSortId],\r\n        (items, selectedId) => {\r\n            let result = null;\r\n\r\n            forEach(items, (item: SortPropertyInfo) => {\r\n                if (item.id === selectedId) {\r\n                    result = item;\r\n                    return true;\r\n                }\r\n            })\r\n\r\n            return result;\r\n        }\r\n    )\r\n\r\n    onSortSelected(id: string) {\r\n        documentService.setSortParam(id);\r\n        documentService.fetchDocuments();\r\n    }\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: SearchResultsPanelPresenter,\r\n    componentId: SearchResultsPanelId\r\n} = createComponentWrapper(SearchResultsPanel);\r\n","import React, {Component} from 'react';\r\nimport './searchView.css';\r\n\r\nimport {SearchBannerPresenter} from \"../../../../components/searchBanner/searchBannerPresenter\";\r\nimport {SearchResultsPanelPresenter} from \"../../../../components/searchResultsPanel/searchResultsPanelPresenter\";\r\nimport {SearchGraphsPanelPresenter} from \"../../../../components/searchGraphsPanel/searchGraphsPanelPresenter\";\r\n\r\nimport {Props, State} from \"./searchModel\";\r\n\r\nexport class SearchView extends Component<Props, State> {\r\n    render() {\r\n        const { className, toolsVisible, ...rest } = this.props;\r\n\r\n        let cn = `${className ? className : ''} d-flex flex-column h-100`;\r\n\r\n        return (\r\n            <div id={'search-view'} {...rest} className={cn}>\r\n                {/*<ServiceContext.Consumer>*/}\r\n                {/*    {*/}\r\n                {/*        application => {*/}\r\n                {/*           return <SearchBannerPresenter application={application}/>*/}\r\n                {/*        }*/}\r\n                {/*    }*/}\r\n                {/*</ServiceContext.Consumer>*/}\r\n                <SearchBannerPresenter />\r\n\r\n                <div className={`search-view-tools position-relative ${toolsVisible ? 'expanded': 'collapsed'}`}>\r\n                    {/*<SearchAdvancedPanelPresenter className={'position-absolute w-100 h-100'}/>*/}\r\n                    <SearchGraphsPanelPresenter/>\r\n                </div>\r\n\r\n                <SearchResultsPanelPresenter className={'flex-fill'}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {displayService} from \"../../../../../application/serviceComposition\";\r\nimport {Presenter} from '../../../../../framework.visual/extras/presenter';\r\nimport {SearchView} from \"./searchView\";\r\nimport {createComponentWrapper} from \"../../../../../framework/wrappers/componentWrapper\";\r\n\r\nclass Search extends Presenter {\r\n    constructor(props: any) {\r\n        super();\r\n\r\n        this.id ='view/search';\r\n\r\n        this.view = SearchView;\r\n\r\n        this.displayOptions = {\r\n            containerId: 'view/app',\r\n            visible: true,\r\n            appearClass: '',\r\n            enterClass: '',\r\n            exitClass: '',\r\n            timeout: 0\r\n        };\r\n\r\n        this.mapDispatchToProps = (dispatch: any) => {\r\n            return {\r\n\r\n            }\r\n        }\r\n\r\n        this.mapStateToProps = (state: any, props: any) => {\r\n            return {\r\n                toolsVisible: displayService.getContainer('search-banner-tools').currentNodeId\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: SearchPresenter,\r\n    componentId: SearchPresenterId\r\n} = createComponentWrapper(Search);\r\n\r\n","import React, {Component, createRef} from 'react';\r\nimport './fileInput.css';\r\nimport {UploadSVG} from \"../../svgs/uploadSVG\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport {FileInputProps, FileInputState} from \"./fileInputModel\";\r\n\r\nclass FileInput extends Component<FileInputProps, FileInputState>  {\r\n\tprivate readonly fileInputRef: React.RefObject<HTMLInputElement>;\r\n\tconstructor(props: FileInputProps | Readonly<FileInputProps>) {\r\n\t\tsuper(props);\r\n\r\n\t\tbindInstanceMethods(this);\r\n\r\n\r\n\t\tthis.state = {\r\n\t\t\tisDragging: false\r\n\t\t}\r\n\r\n\t\tthis.fileInputRef = createRef();\r\n\t}\r\n\r\n\t_onInputChanged(event: { target: { files: any; }; }) {\r\n\t\tconst { onSelected } = this.props;\r\n\r\n\t\tif (onSelected) {\r\n\t\t\tonSelected(event.target.files);\r\n\t\t}\r\n\r\n\t\tthis.setIsDragging(false);\r\n\r\n\t\tif (this.fileInputRef.current) {\r\n\t\t\tthis.fileInputRef.current.value = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\t_dragEnter(event: { preventDefault: () => void; }) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setIsDragging(true);\r\n\t}\r\n\r\n\t_dragLeave(event: { preventDefault: () => void; }) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setIsDragging(false);\r\n\t}\r\n\r\n\t_dragOver(event: { preventDefault: () => void; }) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (!this.isDragging()) {\r\n\t\t\tthis.setIsDragging(true);\r\n\t\t}\r\n\t}\r\n\r\n\tisDragging() {\r\n\t\tconst { isDragging=false } = this.state;\r\n\t\treturn isDragging;\r\n\t}\r\n\r\n\tsetIsDragging(value: boolean) {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tisDragging: value\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { className, selected } = this.props;\r\n\r\n\t\tconst { isDragging } = this.state;\r\n\r\n\t\tlet cn = 'file-input d-flex flex-column border border-dark border-xlg border-dashed position-relative';\r\n\r\n\t\tif (className) {\r\n\t\t\tcn += className;\r\n\t\t}\r\n\r\n\t\tif (isDragging) {\r\n\t\t\tcn += ' drag-hover';\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={cn} onDragOver={this._dragOver} onDragLeave={this._dragLeave}>\r\n\t\t\t\t<div className={'d-flex flex-column v-gap-4 p-5 align-items-center header-1'}>\r\n\t\t\t\t\t<UploadSVG className={'medium-image-container file-input-svg'} />\r\n\t\t\t\t\t<div>Drop Documents Here</div>\r\n\t\t\t\t\t<div className={'text-decoration-underline file-input-browse-text'}>Click to Browse</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input id=\"fileInputField\" key={selected} className={'position-absolute w-100 h-100'}\r\n\t\t\t\t\t   multiple\r\n\t\t\t\t\t   type=\"file\"\r\n\t\t\t\t\t   ref={this.fileInputRef}\r\n\t\t\t\t\t   title=\"\"\r\n\t\t\t\t\t   onChange={this._onInputChanged}\r\n\t\t\t\t\t   accept={\"application/msword,\" +\r\n\t\t\t\t\t\t   \"application/vnd.ms-word.document.macroEnabled.12,\" +\r\n\t\t\t\t\t\t   \"application/vnd.openxmlformats-officedocument.wordprocessingml.document,\" +\r\n\t\t\t\t\t\t   \"application/vnd.openxmlformats-officedocument.wordprocessingml.template,\" +\r\n\t\t\t\t\t\t   \"application/vnd.ms-word.template.macroEnabled.12,\" +\r\n\t\t\t\t\t\t   \"application/pdf,\" +\r\n\t\t\t\t\t\t   \"application/vnd.ms-powerpoint.template.macroEnabled.12,\" +\r\n\t\t\t\t\t\t   \"application/vnd.openxmlformats-officedocument.presentationml.template,\" +\r\n\t\t\t\t\t\t   \"application/vnd.ms-powerpoint.addin.macroEnabled.12,\" +\r\n\t\t\t\t\t\t   \"application/vnd.openxmlformats-officedocument.presentationml.slideshow,\" +\r\n\t\t\t\t\t\t   \"application/vnd.ms-powerpoint.slideshow.macroEnabled.12,\" +\r\n\t\t\t\t\t\t   \"application/vnd.ms-powerpoint,\" +\r\n\t\t\t\t\t\t   \"application/vnd.ms-powerpoint.presentation.macroEnabled.12,\" +\r\n\t\t\t\t\t\t   \"application/vnd.openxmlformats-officedocument.presentationml.presentation,\" +\r\n\t\t\t\t\t\t   \"text/plain,\" +\r\n\t\t\t\t\t\t   \"text/csv,\" +\r\n\t\t\t\t\t\t   \"application/csv,\" +\r\n\t\t\t\t\t\t   \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,\" +\r\n\t\t\t\t\t\t   \"application/vnd.ms-excel.sheet.binary.macroEnabled.12,\" +\r\n\t\t\t\t\t\t   \"application/vnd.ms-excel,\" +\r\n\t\t\t\t\t\t   \"application/vnd.ms-excel.sheet.macroEnabled.12,\" +\r\n\t\t\t\t\t\t   \"image/jpeg,\"}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FileInput;\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const RemoveSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 14.600561,31.950983 c -3.13023,-0.28759 -6.1872498,-1.51832 -8.6351898,-3.47646 -0.69131,-0.55298 -1.8829,-1.74572 -2.42502,-2.42735 -2.30969,-2.90407 -3.53225004,-6.38779 -3.53403004,-10.07033 -0.002,-4.31144 1.78535004,-8.5140398 4.89344004,-11.5054798 3.56624,-3.43239 8.5310898,-5.02058996 13.4467698,-4.30146996 2.77866,0.4065 5.4873,1.58573996 7.71086,3.35702996 0.68065,0.54221 1.87162,1.73589 2.42272,2.42823 1.87596,2.35675 2.98177,4.9592098 3.42294,8.0556798 0.1212,0.85064 0.12074,3.11971 -7.9e-4,3.98067 -0.43537,3.08414 -1.54483,5.696 -3.42187,8.05567 -0.54754,0.68833 -1.73845,1.88092 -2.423,2.42642 -2.90976,2.31869 -6.46992,3.55329 -10.16764,3.52596 -0.45486,-0.003 -1.035,-0.0252 -1.28919,-0.0486 z m -5.7162598,-7.54425 c 0.0535,-0.0264 1.6789298,-1.62735 3.6120298,-3.5576 l 3.51472,-3.50954 3.53937,3.53605 c 2.53485,2.53247 3.5808,3.54685 3.68533,3.57408 0.20746,0.0541 0.57542,0.0369 0.71135,-0.0332 0.44337,-0.22856 0.64526,-0.68394 0.50696,-1.14348 -0.0666,-0.22125 -0.32762,-0.49444 -3.58803,-3.75508 l -3.51623,-3.51648 3.53605,-3.53938 c 2.53247,-2.5348398 3.54685,-3.5807898 3.57408,-3.6853198 0.0579,-0.22224 0.0351,-0.57683 -0.0472,-0.73448 -0.15959,-0.30569 -0.54602,-0.55472 -0.86079,-0.55472 -0.082,0 -0.23046,0.0336 -0.32994,0.0747 -0.12661,0.0523 -1.23522,1.12847 -3.69576,3.5877398 l -3.51488,3.51307 -3.51489,-3.51307 C 10.035931,8.6907532 8.9273312,7.6145432 8.8007112,7.5622832 c -0.0995,-0.0411 -0.24795,-0.0747 -0.32994,-0.0747 -0.31477,0 -0.7012,0.24903 -0.86079,0.55472 -0.0823,0.15765 -0.10508,0.51224 -0.0472,0.73448 0.0272,0.10453 1.04156,1.15043 3.5739098,3.6851598 l 3.53589,3.53921 -3.53413,3.53921 c -3.4824298,3.48745 -3.5348698,3.5428 -3.5846498,3.78415 -0.0508,0.24655 -0.0217,0.49518 0.0804,0.68603 0.0837,0.15633 0.38517,0.40211 0.53333,0.43476 0.0731,0.0161 0.15479,0.0371 0.18154,0.0466 0.0724,0.0258 0.42362,-0.0301 0.53514,-0.0852 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const ApproveSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 15.147124,31.9757 c -1.5879,-0.0721 -3.27542,-0.42219 -4.74694,-0.98472 -3.7785296,-1.44445 -6.7662396,-4.09444 -8.6164196,-7.64247 -0.91024997,-1.74557 -1.47131997,-3.6132 -1.71430997,-5.7064 -0.0798,-0.68759 -0.0786,-2.61812 0.002,-3.31069 0.42854,-3.67893 1.90914997,-6.85707 4.40314997,-9.45136 2.35593,-2.45067 5.47436,-4.09763003 8.8335296,-4.66534003 1.13793,-0.19232 1.81175,-0.23696 3.10479,-0.20572 1.23526,0.0299 2.03357,0.12087 3.0916,0.35247 C 23.618404,1.262 27.328374,3.8907 29.579364,7.5 c 1.26703,2.03159 2.01544,4.17918 2.34674,6.73405 0.0948,0.731 0.0809,2.90774 -0.0236,3.70018 -0.3948,2.99292 -1.46298,5.55166 -3.32311,7.96026 -0.53444,0.69201 -1.859,2.02867 -2.57516,2.59867 -2.60281,2.0716 -5.91821,3.34587 -9.01411,3.46457 -0.37099,0.0142 -0.76216,0.0321 -0.86927,0.0396 -0.10711,0.008 -0.54529,-0.002 -0.97373,-0.0216 z m -2.08054,-8.87494 c 0.17932,-0.0909 1.0141,-0.84854 2.94287,-2.67103 1.4809,-1.3993 4.02882,-3.80354 5.66205,-5.34275 1.63323,-1.53921 3.01924,-2.85743 3.08003,-2.92938 0.14372,-0.17012 0.29075,-0.5056 0.33048,-0.75407 0.0747,-0.46691 -0.18574,-1.05606 -0.58956,-1.3339 -0.25159,-0.1731 -0.74862,-0.31023 -1.0015,-0.27631 -0.49546,0.0665 -0.44921,0.0259 -5.86081,5.14148 l -5.16078,4.87849 -1.82574,-1.84983 C 8.5879744,15.88072 8.6026344,15.89207 7.9658544,15.89052 c -0.29202,-7e-4 -0.41166,0.0229 -0.59744,0.11768 -0.52651,0.26875 -0.81352,0.72495 -0.81352,1.2931 0,0.61905 -0.0303,0.58101 2.56567,3.21691 1.2795096,1.29918 2.4259796,2.42629 2.5476996,2.50468 0.42543,0.27399 0.9533,0.30338 1.39832,0.0779 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport './popup.css';\r\nimport {PopupProps, PopupState} from \"./popupModel\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport Button from \"../button/button\";\r\nimport {DeleteSVG} from \"../../svgs/deleteSVG\";\r\n\r\nclass Popup extends Component<PopupProps, PopupState> {\r\n    constructor(props: PopupProps | Readonly<PopupProps>) {\r\n        super(props);\r\n\r\n        bindInstanceMethods(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PopupProps>, prevState: Readonly<PopupState>, snapshot?: any) {\r\n    }\r\n\r\n    _onCancel() {\r\n        const { onCancel } = this.props;\r\n\r\n        if (onCancel) {\r\n            onCancel();\r\n        }\r\n    }\r\n\r\n    _onProceed() {\r\n        const { onProceed } = this.props;\r\n\r\n        if (onProceed) {\r\n            onProceed();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { className, graphic:Graphic, text, cancelText, proceedText, padding, isVisible } = this.props\r\n\r\n        let cn = `popup ${isVisible ? \"d-block\" : \"d-none\"} position-fixed w-100 h-100 overflow-auto`;\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn} style={{paddingTop: padding}}>\r\n                <div className={\"popup-content d-flex flex-column justify-content-center align-items-center v-gap-4 rounded-lg shadow pt-3 pb-4 px-5 position-relative display-4\"}>\r\n                    <div className={\"position-absolute close\"}>\r\n                        <Button className={\"bg-transparent\"} onClick={() => this._onCancel()}>\r\n                            <DeleteSVG className={\"nano-image-container\"}/>\r\n                        </Button>\r\n\r\n                    </div>\r\n                    {\r\n                        Graphic &&\r\n                        <Graphic className={\"large-image-container\"}/>\r\n                    }\r\n                    <div className={\"text-center text-wrap\"}>{text}</div>\r\n                    <div className={\"v-gap-2\"}>\r\n                        <Button className={\"option\"} text={proceedText} light={true} onClick={() => this._onProceed()}/>\r\n                        <Button className={\"option\"} text={cancelText} light={true} highlight={true} onClick={() => this._onCancel()}/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Popup;\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const FileSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 5.2566389,31.95213 c -0.4554,-0.0771 -0.896,-0.39399 -1.07645,-0.77427 -0.0477,-0.10049 -0.1091,-0.30385 -0.13647,-0.45191 -0.032,-0.17339 -0.0451,-5.47608 -0.0367,-14.90128 l 0.0131,-14.6320996 0.13132,-0.27848997 c 0.16527,-0.35051 0.39875,-0.58353 0.75478,-0.7533 l 0.27848,-0.13279 6.3911901,-0.014 6.39119,-0.014000003404 0.014,4.4191199734038 0.014,4.41911 0.11642,0.25317 c 0.14686,0.31936 0.41892,0.60318 0.74435,0.77654 l 0.25317,0.1348696 4.44313,0.014 4.44312,0.014 v 10.26671 c 0,11.29507 0.0185,10.6251 -0.30635,11.06689 -0.0834,0.11341 -0.24606,0.26961 -0.36146,0.34711 -0.4632,0.3111 0.27856,0.2923 -11.27832,0.28578 -5.80835,-0.003 -10.6649801,-0.0236 -10.7925101,-0.0452 z M 19.995119,4.0027504 V 0.00267043 l 0.13925,3e-4 c 0.25048,5.3e-4 0.7158,0.0936 0.91051,0.18209 0.21066,0.0958 6.39413,6.21929997 6.65016,6.58571997 0.16636,0.23808 0.30024,0.69061 0.30024,1.01484 v 0.21721 h -4.00008 -4.00008 z\"/>\r\n    </svg>\r\n);\r\n","export type LoginPanelStateProps = {\r\n    className?: string;\r\n    registrationStatus: RegistrationStatusVMType;\r\n}\r\n\r\nexport enum RegistrationStatusVMType {\r\n    NONE,\r\n    SUBMITTED,\r\n    APPROVED,\r\n    REJECTED\r\n}\r\n\r\nexport type LoginPanelDispatchProps = {\r\n    onLogin: () => void;\r\n    onRegister: (user: UserInfoVM) => void;\r\n}\r\n\r\nexport type LoginPanelProps = LoginPanelStateProps & LoginPanelDispatchProps;\r\n\r\nexport type LoginPanelState = {\r\n    tmpUser: UserInfoVM;\r\n}\r\n\r\nexport type UserInfoVM = {\r\n    dod_id: string;\r\n    first_name: string;\r\n    last_name: string;\r\n    email: string;\r\n    phone?: string;\r\n}\r\n","import React, {Component} from 'react';\r\nimport './uploadPanel.css';\r\nimport '../../../theme/stylesheets/panel.css';\r\nimport FileInput from \"../../../theme/widgets/fileInput/fileInput\";\r\nimport Card from \"../../../theme/widgets/card/card\";\r\nimport Button from \"../../../theme/widgets/button/button\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\nimport {getClassNames} from \"../../../../framework.visual/extras/utils/animationUtils\";\r\nimport ScrollBar from \"../../../theme/widgets/scrollBar/scrollBar\";\r\nimport {LoadingIndicator} from \"../../../theme/widgets/loadingIndicator/loadingIndicator\";\r\nimport {PendingDocumentVM, UploadPanelProps, UploadPanelState} from \"./uploadPanelModel\";\r\nimport {RemoveSVG} from \"../../../theme/svgs/removeSVG\";\r\nimport {ApproveSVG} from \"../../../theme/svgs/approveSVG\";\r\nimport Popup from \"../../../theme/widgets/popup/popup\";\r\nimport {FileSVG} from \"../../../theme/svgs/fileSVG\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport {Size} from \"../../../theme/widgets/loadingIndicator/loadingIndicatorModel\";\r\n\r\nclass UploadPanelView extends Component<UploadPanelProps, UploadPanelState> {\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n\r\n        bindInstanceMethods(this);\r\n\r\n        this.state = {\r\n            showPopup: false,\r\n            selectedId: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<UploadPanelProps>, prevState: Readonly<UploadPanelState>, snapshot?: any) {\r\n\r\n    }\r\n\r\n    _onApproved = (id: string) => {\r\n        const { onPendingDocumentApproved } = this.props;\r\n\r\n        if ( onPendingDocumentApproved ) {\r\n            onPendingDocumentApproved(id);\r\n        }\r\n    }\r\n\r\n    _onSelected = (files: PendingDocumentVM[]) => {\r\n        const { onPendingDocumentAdded } = this.props;\r\n        if (onPendingDocumentAdded) {\r\n            onPendingDocumentAdded(files)\r\n        }\r\n    }\r\n\r\n    _onDocumentSelected = (id: string, event?: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        const { pendingFiles, onDocumentSelected } = this.props;\r\n        const { selectedId } = this.state;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (pendingFiles[id]) {\r\n            pendingFiles[id].selected = true;\r\n        }\r\n\r\n        if (id !== selectedId) {\r\n            this._setSelectedId(id);\r\n        }\r\n\r\n        onDocumentSelected(id);\r\n    }\r\n\r\n    _setSelectedId(id: string) {\r\n        this.setState({\r\n            ...this.state,\r\n            selectedId: id,\r\n        })\r\n    }\r\n\r\n    _setPopupVisible(visible: boolean) {\r\n        this.setState({\r\n            ...this.state,\r\n            showPopup: visible,\r\n        })\r\n    }\r\n\r\n    _onPendingDocumentRemoved = (id: string) => {\r\n        const { onPendingDocumentRemoved } = this.props;\r\n\r\n        onPendingDocumentRemoved(id);\r\n        this._setPopupVisible(false);\r\n    }\r\n\r\n    _onCancelUpload = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, id: string) => {\r\n        const { onCancelUpload } = this.props;\r\n\r\n        event.stopPropagation();\r\n        if (onCancelUpload) {\r\n            onCancelUpload(id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            className,\r\n            pendingFiles,\r\n        } = this.props;\r\n\r\n        const { showPopup, selectedId } = this.state;\r\n\r\n        let cn = \"system-tool-panel upload-panel p-4 d-flex flex-column align-items-start justify-content-between\";\r\n\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        let pendingDocumentsDiv: JSX.Element[] = [];\r\n\r\n        if (pendingFiles) {\r\n            pendingDocumentsDiv = Object.entries(pendingFiles).map(([key, pendingDocument]) => {\r\n                const { id, file_name, status, isUpdating, selected, deleted} = pendingDocument;\r\n\r\n                return (\r\n                    <CSSTransition key={file_name} timeout={300} classNames={getClassNames('fadeIn', 'fadeIn', 'slideRightOut') }>\r\n                        <div className={'position-relative pending-item'}>\r\n                            <Card className={`d-flex flex-column align-items-stretch v-gap-3 p-0 ${isUpdating ? 'loading' : ''} ${deleted || status === \"failed\" ? \"deleted\" : \"\"}`} selected={selected} onClick={() => this._onDocumentSelected(id)}\r\n                                  header={\r\n                                      <div className={'d-flex'}>\r\n                                          <div className={'flex-fill d-flex justify-content-between align-items-center pending-item-container'}>\r\n                                              <div className={'pending-item-body flex-fill d-flex justify-content-between align-items-center shadow'}>\r\n                                                  <div className={`d-flex h-gap-1 px-3 pt-3 ${deleted || status === \"failed\" || status === \"Cancelled\" ? \"pb-3\" : \"pb-5\"}`}>\r\n                                                      {\r\n                                                          deleted && status !== \"Cancelled\" &&\r\n                                                          <div className={\"display-2 font-weight-semi-bold\"}>Deleted</div>\r\n                                                      }\r\n                                                      {\r\n                                                          status === \"Cancelled\" &&\r\n                                                          <div className={\"display-2 font-weight-semi-bold\"}>Cancelled</div>\r\n                                                      }\r\n                                                      {\r\n                                                          status === \"failed\" &&\r\n                                                          <div className={\"display-2 font-weight-semi-bold\"}>Failed</div>\r\n                                                      }\r\n                                                      <div className={`display-2 ${deleted || status === \"failed\" || status === \"Cancelled\" ? \"text-info\" : \"text-secondary\"}`}>{file_name}</div>\r\n                                                  </div>\r\n                                                  {\r\n                                                      (status === \"Uploading\" || isUpdating) &&\r\n                                                      <div className={\"d-flex flex-fill text-right justify-content-end display-2 font-weight-semi-bold text-info\"}>Pending...</div>\r\n                                                  }\r\n                                                  {\r\n                                                      (status === \"Processing\") &&\r\n                                                      <div className={\"d-flex flex-fill\"}>\r\n                                                          <LoadingIndicator className={\"mr-4\"} size={Size.small}/>\r\n                                                      </div>\r\n\r\n                                                  }\r\n                                                  {\r\n                                                      (!deleted && (status === \"Processing\" || isUpdating || status === \"Uploading\")) &&\r\n                                                      <div className={'d-flex align-items-center justify-content-center p-2 mr-4'}>\r\n                                                          <Button className={'btn-transparent loading-button'} disabled={status !== \"Uploading\"} onClick={(event) => this._onCancelUpload(event, id)}>\r\n                                                              <RemoveSVG className={\"small-image-container\"}/>\r\n                                                          </Button>\r\n                                                      </div>\r\n                                                  }\r\n\r\n\r\n\r\n                                              </div>\r\n                                              {\r\n                                                  (!isUpdating && selected && !deleted && status !== \"Processing\" && status !== \"Uploading\") &&\r\n                                                  <div className={'d-flex h-gap-3 px-4'}>\r\n                                                      <Button className={'p-2 reject'} onClick={() => this._setPopupVisible(true)}>\r\n                                                          <RemoveSVG className={\"small-image-container\"}/>\r\n                                                      </Button>\r\n                                                      {\r\n                                                          status !== \"failed\" &&\r\n                                                          <Button className={'p-2 accept'} onClick={() => this._onApproved(id)}>\r\n                                                              <ApproveSVG className={\"small-image-container\"}/>\r\n                                                          </Button>\r\n                                                      }\r\n                                                  </div>\r\n                                              }\r\n                                          </div>\r\n                                      </div>\r\n                                  }\r\n                            />\r\n                            {/*{*/}\r\n                            {/*    (isUpdating || status === \"Processing\" || status === \"Uploading\") &&*/}\r\n                            {/*    <div className={\"position-absolute\"} style={{top: '0', right: '0', bottom: '1.6rem', left:'0', zIndex: 2}}>*/}\r\n                            {/*        <LoadingIndicator small={true}/>*/}\r\n                            {/*    </div>*/}\r\n                            {/*}*/}\r\n                        </div>\r\n                    </CSSTransition>\r\n                );\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={'header-1 title py-3'}>UPLOAD MANAGER</div>\r\n                <div className={'header align-self-stretch d-flex align-items-center justify-content-between p-3 mt-3'}>\r\n                    <div className={\"py-3\"}>UPLOADS</div>\r\n                </div>\r\n                <Popup\r\n                    text={\"Are you sure you want to remove the selected file?\"}\r\n                    proceedText={\"Delete\"}\r\n                    cancelText={\"Cancel\"}\r\n                    graphic={FileSVG}\r\n                    isVisible={showPopup}\r\n                    padding={\"30%\"}\r\n                    onCancel={() => this._setPopupVisible(false)}\r\n                    onProceed={() => this._onPendingDocumentRemoved(selectedId)}/>\r\n                {\r\n                    pendingDocumentsDiv && pendingDocumentsDiv.length > 0 ?\r\n                        <ScrollBar renderTrackHorizontal={false}>\r\n                            <div className={\"search-results pr-3\"}>\r\n                                <TransitionGroup component={null}>\r\n                                    {pendingDocumentsDiv}\r\n                                </TransitionGroup>\r\n                            </div>\r\n                        </ScrollBar>\r\n                        :\r\n                        <div className={'flex-fill align-self-stretch d-flex align-items-center justify-content-center'}>\r\n                            <div className={'text-primary header-1'}>No Pending Files</div>\r\n                        </div>\r\n                }\r\n\r\n                <div className={'align-self-stretch d-flex flex-column align-items-stretch v-gap-3'}>\r\n                    <FileInput className={'flex-fill'} onSelected={this._onSelected}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadPanelView;\r\n","import UploadPanelView from \"./uploadPanelView\";\r\nimport {Presenter} from \"../../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../../framework/wrappers/componentWrapper\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {forEach} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {DocumentPanelId} from \"../../documentPanel/documentPanelPresenter\";\r\nimport {DocumentInfo, ReferenceType} from \"../../../../model\";\r\nimport {\r\n    displayService,\r\n    documentService,\r\n    referenceService,\r\n    selectionService\r\n} from \"../../../../application/serviceComposition\";\r\nimport {PendingDocumentVM} from \"./uploadPanelModel\";\r\n\r\nclass UploadPanel extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id ='components/uploadPanel';\r\n\r\n        this.view = UploadPanelView;\r\n\r\n        this.displayOptions = {\r\n            containerId: 'system-tool-panel',\r\n            visible: false,\r\n            appearClass: 'fadeIn',\r\n            enterClass: 'fadeIn',\r\n        };\r\n\r\n        this.mapStateToProps = (state: any, props: any) => {\r\n            return {\r\n                pendingFiles: this.getPendingFilesVMs(state)\r\n            }\r\n        }\r\n\r\n        this.mapDispatchToProps = () => {\r\n            return {\r\n                onPendingDocumentAdded: (fileList: PendingDocumentVM[]) => documentService.startUpload(fileList),\r\n                onPendingDocumentRemoved: (id: string) => this._removePendingDocument(id),\r\n                onDocumentSelected: (id: string) => this._onDocumentSelected(id),\r\n                onPendingDocumentApproved: (id: string) => this._approvePendingDocument(id),\r\n                onCancelUpload: (id: string) => this._cancelUpload(id),\r\n            };\r\n        }\r\n    }\r\n\r\n    _onDocumentSelected(id: string) {\r\n        selectionService.setContext(\"selected-document\", id);\r\n        displayService.showNode(DocumentPanelId);\r\n    }\r\n\r\n    _approvePendingDocument(id: string) {\r\n        documentService.approvePendingFile(id);\r\n    }\r\n\r\n    _removePendingDocument(id: string) {\r\n        documentService.removePendingFile(id)\r\n    }\r\n\r\n    _cancelUpload(id: string) {\r\n        documentService.cancelUpload(id);\r\n    }\r\n\r\n    getSelectedDocumentId = selectionService.makeGetContext(\"selected-document\");\r\n\r\n    getPendingFilesVMs = createSelector(\r\n        [documentService.getPendingDocuments, this.getSelectedDocumentId, () => referenceService.getAllReferences(ReferenceType.STATUS)],\r\n        (items, selectedId, statusReferenceInfos) => {\r\n            let itemVMs: Record<string, PendingDocumentVM> = {};\r\n\r\n            forEach(items, (itemVM: DocumentInfo) => {\r\n                const {\r\n                    id,\r\n                    file_name,\r\n                    isUpdating,\r\n                    isDeleted,\r\n                } = itemVM;\r\n\r\n                let statusReferenceInfo = statusReferenceInfos[itemVM.status];\r\n\r\n\r\n                let status = '';\r\n                if (statusReferenceInfo) {\r\n                    status = statusReferenceInfo.title;\r\n                }\r\n                else {\r\n                    status = itemVM.status;\r\n                }\r\n\r\n                itemVMs[itemVM.file_name] = {\r\n                    id: id,\r\n                    file_name: file_name,\r\n                    isUpdating: isUpdating,\r\n                    status,\r\n                    selected: id === selectedId,\r\n                    deleted: isDeleted,\r\n                }\r\n\r\n            });\r\n\r\n            return itemVMs;\r\n        }\r\n    )\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: UploadPanelPresenter,\r\n    componentId: UploadPanelId\r\n} = createComponentWrapper(UploadPanel);\r\n","import React, {Component} from 'react';\r\nimport './profilePanel.css';\r\nimport Button from \"../../../theme/widgets/button/button\";\r\nimport Card from \"../../../theme/widgets/card/card\";\r\nimport ComboBox from \"../../../theme/widgets/comboBox/comboBox\";\r\nimport TextEdit from \"../../../theme/widgets/textEdit/textEdit\";\r\nimport {arrayEquals, forEach} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport {ProfilePanelProps, ProfilePanelState, UserInfoVM} from \"./profilePanelModel\";\r\nimport Popup from \"../../../theme/widgets/popup/popup\";\r\nimport {FileSVG} from \"../../../theme/svgs/fileSVG\";\r\n\r\nclass ProfileInfoView extends Component<ProfilePanelProps, ProfilePanelState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        bindInstanceMethods(this);\r\n\r\n        this.state = {\r\n            tmpUser: {},\r\n            isDirty: false,\r\n            editProperties: [\r\n                {\r\n                    id: 'first_name',\r\n                    placeholder: 'First Name',\r\n                },\r\n                {\r\n                    id: 'last_name',\r\n                    placeholder: 'Last Name',\r\n                },\r\n                {\r\n                    id: 'department',\r\n                    placeholder: 'Department',\r\n                },\r\n                {\r\n                    id: 'role',\r\n                    placeholder: 'Role',\r\n                },\r\n                {\r\n                    id: 'email_address',\r\n                    placeholder: 'Email',\r\n                },\r\n                {\r\n                    id: 'phone_number',\r\n                    placeholder: 'Phone',\r\n                },\r\n                // {\r\n                //     id: 'dod_id',\r\n                //     readonly: true\r\n                // },\r\n                {\r\n                    id: 'account_status',\r\n                    placeholder: 'Account Status',\r\n                },\r\n                {\r\n                    id: 'approved_by',\r\n                    placeholder: 'Approved By',\r\n                    readonly: true,\r\n                }\r\n            ],\r\n            selected: false,\r\n            showPopup: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props;\r\n\r\n        this.setTmpUser(user || {});\r\n        this._setPopupVisible(false);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfilePanelProps>, prevState: Readonly<ProfilePanelState>, snapshot?: any) {\r\n        const { user } = this.props;\r\n\r\n        if (user !== prevProps.user) {\r\n            this.refreshDirtyFlag();\r\n\r\n            const {id} = user || {};\r\n            const {id: prevId } = prevProps.user || {};\r\n\r\n            if (id !== prevId) {\r\n                this.setTmpUser(user || {});\r\n            }\r\n        }\r\n    }\r\n\r\n    setTmpUser(user: UserInfoVM) {\r\n        this.setState({\r\n            ...this.state,\r\n            tmpUser: user\r\n        }, () => this.refreshDirtyFlag());\r\n    }\r\n\r\n    refreshDirtyFlag() {\r\n        const {user} = this.props;\r\n        const {tmpUser } = this.state;\r\n\r\n        if (!user) return;\r\n\r\n        let nextTmpUser = {\r\n            ...tmpUser\r\n        };\r\n        let dirty = false;\r\n\r\n        let keysToDelete = [];\r\n        let itemKeys = Object.keys(nextTmpUser), itemsLength = itemKeys.length;\r\n        for (let index = 0; index < itemsLength; index++) {\r\n            let key = itemKeys[index];\r\n\r\n            if (Array.isArray(tmpUser[key])) {\r\n                if (arrayEquals(tmpUser[key], user[key])) {\r\n                    keysToDelete.push(key)\r\n                }\r\n                else {\r\n                    dirty = true;\r\n                }\r\n            }\r\n            else {\r\n                if (tmpUser[key] === user[key]) {\r\n                    keysToDelete.push(key);\r\n                }\r\n                else {\r\n                    dirty = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        forEach(keysToDelete, (key: string) => {\r\n            if (key !== 'id') {\r\n                delete nextTmpUser[key];\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            tmpUser: nextTmpUser,\r\n            isDirty: dirty\r\n        })\r\n    }\r\n\r\n    onTmpUserChanged(name: string, value: string | undefined) {\r\n\r\n        const {tmpUser} = this.state;\r\n        const {user} = this.props;\r\n        const {currentUser} = this.props;\r\n\r\n        if (name === 'account_status' && value === 'active') {\r\n            if (user) {\r\n                let nextUser: UserInfoVM = {\r\n                    ...tmpUser,\r\n                    [name]: value,\r\n                    ['approved_by']: currentUser?  currentUser.id : \"\",\r\n                    ['date_approved']: Date.now().toString(),\r\n                };\r\n                if (user[name] === value) {\r\n                    delete nextUser[name];\r\n                    delete nextUser['approved_by'];\r\n                    delete nextUser['date_approved'];\r\n                }\r\n                this.setTmpUser(nextUser);\r\n            }\r\n        } else {\r\n            if (user) {\r\n                let nextUser = {\r\n                    ...tmpUser,\r\n                    [name]: value\r\n                };\r\n                if (user[name] === value) {\r\n                    delete nextUser[name];\r\n                }\r\n                this.setTmpUser(nextUser);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateUser() {\r\n        const { onUserUpdated } = this.props;\r\n        const { isDirty, tmpUser } = this.state;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            isDirty: !isDirty,\r\n        });\r\n\r\n        if (onUserUpdated) {\r\n            onUserUpdated({...tmpUser});\r\n        }\r\n    }\r\n\r\n    removeUser() {\r\n        const { onUserRemoved, user } = this.props;\r\n\r\n        if (user && onUserRemoved) {\r\n            onUserRemoved(user.id || \"\");\r\n        }\r\n\r\n        this._setPopupVisible(false);\r\n    }\r\n\r\n    _setPopupVisible(visible: boolean) {\r\n        this.setState({\r\n            ...this.state,\r\n            showPopup: visible,\r\n        })\r\n    }\r\n\r\n    cancelEdit() {\r\n        const { user } = this.props;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            isDirty: false,\r\n            tmpUser: user || {},\r\n        }, () => this.refreshDirtyFlag());\r\n    }\r\n\r\n    toggleEdit() {\r\n        this.setState({\r\n            ...this.state,\r\n            isDirty: true,\r\n        })\r\n    }\r\n\r\n    toggleSelected() {\r\n        const { onSelect } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            selected: !selected,\r\n        })\r\n        if (selected && onSelect) {\r\n            onSelect();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {user, currentUser, onSelect, onUserUpdated, onUserRemoved, roles, departments, accountStatuses, userLookUp, permissions } = this.props;\r\n\r\n        const { isDirty, editProperties, tmpUser, selected, showPopup } = this.state;\r\n\r\n        let cn = \"profile-info-header p-3 d-flex align-items-center justify-content-between\";\r\n\r\n        if (isDirty) {\r\n            cn += ` dirty`;\r\n        }\r\n\r\n        if (selected) {\r\n            cn += ` selected`;\r\n        }\r\n\r\n        const editDivs = editProperties.map((editProperty) => {\r\n            const { id, placeholder, readonly } = editProperty;\r\n\r\n            const originalValue = user ? user[id] : '';\r\n            const editValue = tmpUser ? tmpUser[id] : '';\r\n\r\n            let renderDiv;\r\n            let cn = 'align-self-center';\r\n\r\n            switch (id) {\r\n                case 'department':\r\n                    let departmentId = editValue ? editValue : originalValue;\r\n                    let departmentTitle = '';\r\n                    if (departments && departments[departmentId]) {\r\n                        departmentTitle = departments[departmentId].title;\r\n                    }\r\n                    else {\r\n                        departmentTitle = departmentId;\r\n                    }\r\n\r\n                    renderDiv = (\r\n                        <ComboBox\r\n                            className={cn}\r\n                            disable={!isDirty}\r\n                            onSelect={(value: string) => this.onTmpUserChanged(id, value)}\r\n                            title={departmentTitle}\r\n                            items={departments}\r\n                        />\r\n                    );\r\n                    break;\r\n                case 'role':\r\n                    let roleId = editValue ? editValue : originalValue;\r\n                    let roleTitle = '';\r\n                    if (roles && roles[roleId]) {\r\n                        roleTitle = roles[roleId].title;\r\n                    }\r\n                    else {\r\n                        roleTitle = roleId;\r\n                    }\r\n\r\n                    renderDiv = (\r\n                        <ComboBox\r\n                            className={cn}\r\n                            disable={!isDirty}\r\n                            onSelect={(value: string) => this.onTmpUserChanged(id, value)}\r\n                            title={roleTitle}\r\n                            items={roles}\r\n                        />\r\n                    );\r\n                    break;\r\n                case 'account_status':\r\n                    let accountStatusId = editValue ? editValue : originalValue;\r\n                    let accountStatusTitle = '';\r\n                    if (accountStatuses && accountStatuses[accountStatusId]) {\r\n                        accountStatusTitle = accountStatuses[accountStatusId].title;\r\n                    } else {\r\n                        accountStatusTitle = accountStatusId;\r\n                    }\r\n\r\n                    renderDiv = (\r\n                        <ComboBox\r\n                            className={cn}\r\n                            disable={!isDirty}\r\n                            onSelect={(value: string) => this.onTmpUserChanged(id, value)}\r\n                            title={accountStatusTitle}\r\n                            items={accountStatuses}\r\n                        />\r\n                    );\r\n                    break;\r\n                case 'approved_by':\r\n                    let name = originalValue;\r\n                    let user = null;\r\n                    if (userLookUp) {\r\n                        user = userLookUp[name];\r\n                    }\r\n                    if (user) {\r\n                        if (user.first_name) {\r\n                            name = user.first_name\r\n                        }\r\n                        // if (user.middle_initial) {//TODO add middle initial to UserInfo\r\n                        //     name += ` ${user.middle_initial}`;\r\n                        // }\r\n                        if (user.last_name) {\r\n                            name += ` ${user.last_name}`;\r\n                        }\r\n                    }\r\n                    renderDiv =(\r\n                        <TextEdit\r\n                            className={cn}\r\n                            disable={!readonly ? !isDirty : true}\r\n                            placeholder={placeholder}\r\n                            name={id}\r\n                            dirty={!!editValue}\r\n                            value={name}\r\n                            edit={!readonly ? isDirty : false}\r\n                            onSubmit={this.onTmpUserChanged}/>\r\n                    )\r\n                    break;\r\n                case 'first_name':\r\n                case 'last_name':\r\n                case 'email_address':\r\n                case 'phone_number':\r\n                case 'dod_id':\r\n                default:\r\n                    renderDiv = (\r\n                        <TextEdit\r\n                            className={cn}\r\n                            disable={!readonly ? !isDirty : true}\r\n                            placeholder={placeholder}\r\n                            name={id}\r\n                            dirty={!!editValue}\r\n                            value={editValue ? editValue : originalValue}\r\n                            edit={!readonly ? isDirty : false}\r\n                            onSubmit={this.onTmpUserChanged}/>\r\n                    );\r\n                    break;\r\n            }\r\n\r\n            return renderDiv;\r\n        });\r\n\r\n        return (\r\n            <Card className={'profile-info flex-column justify-content-start header-4 align-items-stretch'}\r\n                  header={\r\n                      <div\r\n                          onClick={() => this.toggleSelected()}\r\n                          className={cn}>\r\n                          <div className={'d-flex h-gap-4 px-5 py-4'}>\r\n                              <div className={'header-1 font-weight-semi-bold'}>{user?.first_name + ' ' + user?.last_name}</div>\r\n                          </div>\r\n\r\n                          {/*<div className={\"header-4\"}>{Company}</div>*/}\r\n                      </div>\r\n                  }\r\n                  body={\r\n                      <div className={'p-3'}>\r\n                          <Popup\r\n                              text={\"Are you sure you want to remove this User?\"}\r\n                              proceedText={\"Remove\"}\r\n                              cancelText={\"Cancel\"}\r\n                              graphic={FileSVG}\r\n                              padding={\"65%\"}\r\n                              isVisible={showPopup}\r\n                              onCancel={() => this._setPopupVisible(false)}\r\n                              onProceed={() => this.removeUser()}/>\r\n                          <div className={`personal-info-grid w-100 ${isDirty ? 'dirty' : ''}`}>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>First Name:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Last Name:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Department:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Role:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Email:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Phone:</div>\r\n                              {/*<div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>DoD ID:</div>*/}\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Account Status:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Approved By:</div>\r\n                              {editDivs}\r\n                          </div>\r\n                          {\r\n                              !isDirty &&\r\n                              <div className={\"d-flex justify-content-end h-gap-2\"}>\r\n                                  <Button text={\"Edit\"} orientation={\"horizontal\"} onClick={() => this.toggleEdit()} selected={false} disabled={false} className={\"px-5\"}/>\r\n                              </div>\r\n                          }\r\n                          {\r\n                              isDirty &&\r\n                              <div className={\"d-flex h-gap-2 justify-content-end\"}>\r\n                                  {\r\n                                      permissions.canDelete &&\r\n                                      <Button text={\"Remove User\"} orientation={\"horizontal\"} highlight={true} onClick={() => this._setPopupVisible(true)} selected={false} disabled={false} className={\"px-5\"}/>\r\n                                  }\r\n                                  <Button text={\"Cancel\"} orientation={\"horizontal\"} highlight={true} onClick={() => this.cancelEdit()} selected={false} disabled={false} className={\"px-5\"}/>\r\n                                  <Button text={\"Save\"} orientation={\"horizontal\"} onClick={() => this.updateUser()} selected={false} disabled={false} className={\"px-5\"}/>\r\n                              </div>\r\n                          }\r\n                      </div>\r\n                  }\r\n                  selected={selected}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileInfoView;\r\n","import React, {Component} from \"react\";\r\nimport './profilePanel.css';\r\nimport ComboBox from \"../../../theme/widgets/comboBox/comboBox\";\r\nimport TextEdit from \"../../../theme/widgets/textEdit/textEdit\";\r\nimport Card from \"../../../theme/widgets/card/card\";\r\nimport Button from \"../../../theme/widgets/button/button\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport {ProfilePanelProps, ProfilePanelState} from \"./profilePanelModel\";\r\n\r\nexport class NewUserProfileInfoView extends Component<ProfilePanelProps, ProfilePanelState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        bindInstanceMethods(this);\r\n\r\n        this.state = {\r\n            tmpUser: {},\r\n            editProperties: [\r\n                {\r\n                    id: 'first_name',\r\n                    placeholder: 'First Name',\r\n                },\r\n                {\r\n                    id: 'last_name',\r\n                    placeholder: 'Last Name',\r\n                },\r\n                {\r\n                    id: 'department',\r\n                    placeholder: 'Department'\r\n                },\r\n                {\r\n                    id: 'role',\r\n                    placeholder: 'Role',\r\n                },\r\n                {\r\n                    id: 'email_address',\r\n                    placeholder: 'Email',\r\n                },\r\n                {\r\n                    id: 'phone_number',\r\n                    placeholder: 'Phone',\r\n                },\r\n                {\r\n                    id: 'dod_id',\r\n                    placeholder: 'DoD ID',\r\n                },\r\n                {\r\n                    id: 'account_status',\r\n                    placeholder: 'Account Status',\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    onTmpUserChanged(name: string, value: string) {\r\n        const { tmpUser } = this.state;\r\n\r\n        if (tmpUser) {\r\n            let nextUser = {\r\n                ...tmpUser,\r\n                [name]: value\r\n            };\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                tmpUser: nextUser,\r\n            })\r\n        }\r\n    }\r\n\r\n    addUser() {\r\n        const { onUserAdded } = this.props;\r\n        const { tmpUser } = this.state;\r\n\r\n        if (onUserAdded) {\r\n            onUserAdded(tmpUser);\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            tmpUser: {},\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n        const { onCancel } = this.props;\r\n\r\n        if (onCancel) {\r\n            onCancel();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { roles, departments, accountStatuses, } = this.props;\r\n        const { tmpUser, editProperties, } = this.state;\r\n\r\n        const editDivs = editProperties.map((editProperty) => {\r\n            const { id, placeholder } = editProperty;\r\n\r\n            const originalValue = '';\r\n            const editValue = tmpUser ? tmpUser[id] : '';\r\n\r\n            let renderDiv;\r\n            let cn = 'align-self-center';\r\n\r\n            switch (id) {\r\n                case 'department':\r\n                    let departmentId = editValue ? editValue : originalValue;\r\n                    let departmentTitle = '';\r\n                    if ( departments && departments[departmentId]) {\r\n                        departmentTitle = departments[departmentId].title;\r\n                    }\r\n                    else {\r\n                        departmentTitle = departmentId;\r\n                    }\r\n\r\n                    renderDiv = (\r\n                        <ComboBox\r\n                            className={cn}\r\n                            onSelect={(value: string) => this.onTmpUserChanged(id, value)}\r\n                            title={departmentTitle}\r\n                            items={departments}\r\n                        />\r\n                    );\r\n                    break;\r\n                case 'role':\r\n                    let roleId = editValue ? editValue : originalValue;\r\n                    let roleTitle = '';\r\n                    if (roles && roles[roleId]) {\r\n                        roleTitle = roles[roleId].title;\r\n                    }\r\n                    else {\r\n                        roleTitle = roleId;\r\n                    }\r\n\r\n                    renderDiv = (\r\n                        <ComboBox\r\n                            className={cn}\r\n                            onSelect={(value: string) => this.onTmpUserChanged(id, value)}\r\n                            title={roleTitle}\r\n                            items={roles}\r\n                        />\r\n                    );\r\n                    break;\r\n                case 'account_status':\r\n                    let accountStatusId = editValue ? editValue : originalValue;\r\n                    let accountStatusTitle = '';\r\n                    if (accountStatuses && accountStatuses[accountStatusId]) {\r\n                        accountStatusTitle = accountStatuses[accountStatusId].title;\r\n                    }\r\n                    else {\r\n                        accountStatusTitle = accountStatusId;\r\n                    }\r\n\r\n                    renderDiv = (\r\n                        <ComboBox\r\n                            className={cn}\r\n                            onSelect={(value: string) => this.onTmpUserChanged(id, value)}\r\n                            title={accountStatusTitle}\r\n                            items={accountStatuses}\r\n                        />\r\n                    );\r\n                    break;\r\n                case 'first_name':\r\n                case 'last_name':\r\n                case 'email_address':\r\n                case 'phone_number':\r\n                case 'dod_id':\r\n                default:\r\n                    renderDiv = (\r\n                        <TextEdit\r\n                            className={cn}\r\n                            placeholder={placeholder}\r\n                            name={id}\r\n                            dirty={!!editValue}\r\n                            value={editValue ? editValue : originalValue}\r\n                            edit={true}\r\n                            onSubmit={this.onTmpUserChanged}/>\r\n                    );\r\n                    break;\r\n            }\r\n\r\n            return renderDiv;\r\n        });\r\n\r\n        return (\r\n            <Card className={'profile-info flex-column justify-content-start header-4 align-items-stretch'}\r\n                  header={\r\n                      <div className={'profile-info-header d-flex align-items-center justify-content-between dirty mt-3 mb-5 p-3'}>\r\n                          <div className={'px-5 py-4 font-weight-semi-bold header-1'}>NEW USER</div>\r\n                      </div>\r\n                  }\r\n                  body={\r\n                      <div className={'px-3 pb-3'}>\r\n                          <div className={\"w-100 personal-info-grid dirty\"}>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>First Name:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Last Name:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Department:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Role:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Email:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Phone:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>DoD ID:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Account Status:</div>\r\n                              {editDivs}\r\n                          </div>\r\n                          <div className={\"d-flex h-gap-2 justify-content-end\"}>\r\n                              <Button text={\"Cancel\"} orientation={\"horizontal\"} onClick={() => this.cancel()} selected={false} disabled={false} className={\"px-5\"}/>\r\n                              <Button text={\"Save\"} orientation={\"horizontal\"} onClick={() => this.addUser()} selected={false} disabled={false} className={\"px-5\"}/>\r\n                          </div>\r\n                      </div>\r\n                  }\r\n                  selected={true}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {ProfilePanelProps, ProfilePanelState, UserInfoVM} from \"./profilePanelModel\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport Button from \"../../../theme/widgets/button/button\";\r\nimport Card from \"../../../theme/widgets/card/card\";\r\nimport {InfoSVG} from \"../../../theme/svgs/infoSVG\";\r\nimport ComboBox from \"../../../theme/widgets/comboBox/comboBox\";\r\n\r\n\r\nexport class UserRequestInfoView extends Component<ProfilePanelProps, ProfilePanelState> {\r\n    constructor(props: ProfilePanelProps | Readonly<ProfilePanelProps>) {\r\n        super(props);\r\n\r\n        bindInstanceMethods(this);\r\n\r\n        this.state = {\r\n            tmpUser: {},\r\n            editProperties: [],\r\n            selected: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfilePanelProps>, prevState: Readonly<ProfilePanelState>, snapshot?: any) {\r\n\r\n    }\r\n\r\n    toggleSelected() {\r\n        const { onSelect } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            selected: !selected,\r\n        })\r\n        if (selected && onSelect) {\r\n            onSelect();\r\n        }\r\n    }\r\n\r\n    onTmpUserChanged(name: string, value: string | undefined) {\r\n\r\n        const {tmpUser} = this.state;\r\n        const {userRequest} = this.props;\r\n        const {currentUser} = this.props;\r\n\r\n        if (name === 'account_status' && value === 'active') {\r\n            if (userRequest) {\r\n                let nextUser: UserInfoVM = {\r\n                    ...tmpUser,\r\n                    [name]: value,\r\n                    ['approved_by']: currentUser?  currentUser.id : \"\",\r\n                    ['date_approved']: Date.now().toString(),\r\n                };\r\n                if (userRequest[name] === value) {\r\n                    delete nextUser[name];\r\n                    delete nextUser['approved_by'];\r\n                    delete nextUser['date_approved'];\r\n                }\r\n                this.setTmpUser(nextUser);\r\n            }\r\n        } else {\r\n            if (userRequest) {\r\n                let nextUser = {\r\n                    ...tmpUser,\r\n                    [name]: value\r\n                };\r\n                if (userRequest[name] === value) {\r\n                    delete nextUser[name];\r\n                }\r\n                this.setTmpUser(nextUser);\r\n            }\r\n        }\r\n    }\r\n\r\n    setTmpUser(userRequest: UserInfoVM) {\r\n        this.setState({\r\n            ...this.state,\r\n            tmpUser: userRequest\r\n        });\r\n    }\r\n\r\n    onAccept() {\r\n        const { onAcceptUserRequest, userRequest } = this.props;\r\n        const { tmpUser } = this.state;\r\n\r\n        // this.onTmpUserChanged(\"account_status\", \"Active\");\r\n\r\n        if (userRequest) {\r\n            const { id } = userRequest;\r\n            if (onAcceptUserRequest) onAcceptUserRequest(id || \"\", tmpUser.role || \"\");\r\n        }\r\n    }\r\n\r\n    onDecline() {\r\n        const { onDeclineUserRequest, userRequest } = this.props;\r\n\r\n        if (userRequest) {\r\n            const { id } = userRequest;\r\n            if (onDeclineUserRequest) onDeclineUserRequest(id || \"\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { userRequest, roles } = this.props;\r\n\r\n        const { selected } = this.state;\r\n\r\n        let cn = \"user-request-header p-3 d-flex align-items-center justify-content-between\";\r\n\r\n        let roleId = userRequest?.role;\r\n        let roleTitle = '';\r\n        if (roleId) {\r\n            if (roles && roles[roleId]) {\r\n                roleTitle = roles[roleId].title;\r\n            }\r\n            else {\r\n                roleTitle = roleId;\r\n            }\r\n        }\r\n\r\n        // let durationTitle = userRequest?.duration || '';\r\n\r\n        return (\r\n            <Card className={'user-request flex-column justify-content-start header-4 align-items-stretch'}\r\n                  header={\r\n                      <div\r\n                          onClick={() => this.toggleSelected()}\r\n                          className={cn}>\r\n                          <div className={'d-flex h-gap-4 px-5 py-4'}>\r\n                              <div className={'header-1 font-weight-semi-bold'}>Request: {userRequest?.first_name + (userRequest?.last_name ? \" \" + userRequest?.last_name : \"\")}</div>\r\n                          </div>\r\n                      </div>\r\n                  }\r\n                  body={\r\n                      <div className={'p-3'}>\r\n                          {/*<div className={'request-info-grid'}>*/}\r\n                          {/*    <div className={'header-2 text-right'}>Role:</div>*/}\r\n                          {/*    <div className={'header-2 text-right text-wrap'}>Reason for Authentication:</div>*/}\r\n                          {/*    <div className={'d-flex justify-content-between'}>*/}\r\n                          {/*        <ComboBox title={roleTitle} disable={true}/>*/}\r\n                          {/*        <div className={'header-2 text-accent'}>for</div>*/}\r\n                          {/*        <ComboBox title={durationTitle} disable={true}/>*/}\r\n                          {/*    </div>*/}\r\n                          {/*    <div className={'header-1 font-italic font-weight-light text-info'}>{userRequest?.comment}</div>*/}\r\n                          {/*</div>*/}\r\n\r\n                          <div className={'pending-user-grid'}>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Email:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Phone:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Role:</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center'}>{userRequest?.email_address}</div>\r\n                              <div className={'header-1 font-weight-semi-bold align-self-center'}>{userRequest?.phone_number}</div>\r\n                              <ComboBox\r\n                                  className={\"align-self-center\"}\r\n\r\n                                  onSelect={(value: string) => this.onTmpUserChanged(\"role\", value)}\r\n                                  title={roleTitle}\r\n                                  items={roles}\r\n                              />\r\n                          </div>\r\n\r\n                          <div className={\"d-flex flex-fill justify-content-between\"}>\r\n                              {/*<div className={\"d-flex info-button justify-content-start\"}>*/}\r\n                              {/*    <div className={'d-flex h-gap-3 align-items-center'}>*/}\r\n                              {/*        <InfoSVG className={'small-image-container'}/>*/}\r\n                              {/*        <div className={'header-2'}>More Info</div>*/}\r\n                              {/*    </div>*/}\r\n                              {/*</div>*/}\r\n                              <div className={'d-flex flex-fill h-gap-2 justify-content-end'}>\r\n                                  <Button text={\"Decline\"} highlight={true} orientation={\"horizontal\"} onClick={() => this.onDecline()} selected={false} disabled={false} className={\"px-5\"}/>\r\n                                  <Button text={\"Accept\"} orientation={\"horizontal\"} onClick={() => this.onAccept()} selected={false} disabled={false} className={\"px-5\"}/>\r\n                              </div>\r\n\r\n                          </div>\r\n                      </div>\r\n                  }\r\n                  selected={selected}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React, {Component, Fragment} from 'react';\r\nimport './profilePanel.css';\r\nimport ProfileInfoView from \"./profileInfoView\";\r\nimport ScrollBar from \"../../../theme/widgets/scrollBar/scrollBar\";\r\nimport '../../../theme/stylesheets/panel.css';\r\nimport Button from \"../../../theme/widgets/button/button\";\r\nimport ComboBox from \"../../../theme/widgets/comboBox/comboBox\";\r\nimport TextEdit from \"../../../theme/widgets/textEdit/textEdit\";\r\nimport {arrayEquals, forEach} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {NewUserProfileInfoView} from \"./newUserProfileInfoView\";\r\nimport {bindInstanceMethods} from \"../../../../framework/extras/typeUtils\";\r\nimport {ProfilePanelProps, ProfilePanelState, UserInfoVM} from \"./profilePanelModel\";\r\nimport {UserRequestInfoView} from \"./userRequestInfoView\";\r\nimport SearchBox from \"../../../theme/widgets/searchBox/searchBox\";\r\nimport {userService} from \"../../../../application/serviceComposition\";\r\n\r\nclass ProfilePanelView extends Component<ProfilePanelProps, ProfilePanelState> {\r\n\r\n    interval!: NodeJS.Timer;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        bindInstanceMethods(this);\r\n\r\n        this.state = {\r\n            tmpUser: {},\r\n            isDirty: false,\r\n            isAddingNewUser: false,\r\n            editProperties: [\r\n                {\r\n                    id: 'first_name',\r\n                    placeholder: 'First Name',\r\n                },\r\n                {\r\n                    id: 'last_name',\r\n                    placeholder: 'Last Name',\r\n                },\r\n                {\r\n                    id: 'department',\r\n                    placeholder: 'Department'\r\n                },\r\n                {\r\n                    id: 'role',\r\n                    placeholder: 'Role',\r\n                    readonly: true,\r\n                },\r\n                {\r\n                    id: 'email_address',\r\n                    placeholder: 'Email',\r\n                },\r\n                {\r\n                    id: 'phone_number',\r\n                    placeholder: 'Phone',\r\n                },\r\n                // {\r\n                //     id: 'dod_id',\r\n                //     placeholder: 'DoD ID',\r\n                //     readonly: true\r\n                // },\r\n                {\r\n                    id: 'account_status',\r\n                    placeholder: 'Account Status',\r\n                    readonly: true\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { currentUser } = this.props;\r\n\r\n        this.setTmpUser(currentUser ? currentUser : {});\r\n\r\n\r\n        // this should probably be in presenter...or somewhere other than...here\r\n        if (this.props.permissions.canModify) {\r\n            this.interval = setInterval(() => {\r\n                userService.fetchUsers();\r\n            }, 60000); // refresh every 60 seconds\r\n            userService.fetchUsers();\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval != null) {\r\n            clearInterval(this.interval);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfilePanelProps>, prevState: Readonly<ProfilePanelState>, snapshot?: any) {\r\n        const { currentUser } = this.props;\r\n\r\n        if (currentUser !== prevProps.currentUser) {\r\n            this.refreshDirtyFlag();\r\n\r\n            const {id} = currentUser || {};\r\n            const {id: prevId } = prevProps.currentUser || {};\r\n\r\n            if (id !== prevId) {\r\n                this.setTmpUser(currentUser || {});\r\n            }\r\n        }\r\n    }\r\n\r\n    setTmpUser(currentUser: UserInfoVM) {\r\n        this.setState({\r\n            ...this.state,\r\n            tmpUser: currentUser\r\n        }, () => this.refreshDirtyFlag());\r\n    }\r\n\r\n    refreshDirtyFlag() {\r\n        const {currentUser} = this.props;\r\n        const {tmpUser} = this.state;\r\n\r\n        if (!currentUser) return;\r\n\r\n        let nextTmpUser = {\r\n            ...tmpUser\r\n        };\r\n        let dirty = false;\r\n\r\n        let keysToDelete = [];\r\n        let itemKeys = Object.keys(nextTmpUser), itemsLength = itemKeys.length;\r\n        for (let index = 0; index < itemsLength; index++) {\r\n            let key = itemKeys[index];\r\n\r\n            if (Array.isArray(tmpUser[key])) {\r\n                if (arrayEquals(tmpUser[key], currentUser[key])) {\r\n                    keysToDelete.push(key)\r\n                }\r\n                else {\r\n                    dirty = true;\r\n                }\r\n            }\r\n            else {\r\n                if (tmpUser[key] === currentUser[key]) {\r\n                    keysToDelete.push(key);\r\n                }\r\n                else {\r\n                    dirty = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        forEach(keysToDelete, (key: string) => {\r\n            if (key !== 'id') {\r\n                delete nextTmpUser[key];\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            tmpUser: nextTmpUser,\r\n            isDirty: dirty\r\n        })\r\n    }\r\n\r\n    onTmpUserChanged(name: string, value: string) {\r\n        const {tmpUser} = this.state;\r\n        const {currentUser} = this.props;\r\n\r\n        if (currentUser) {\r\n            let nextUser = {\r\n                ...tmpUser,\r\n                [name]: value\r\n            };\r\n            if (currentUser[name] === value) {\r\n                delete nextUser[name];\r\n            }\r\n            this.setTmpUser(nextUser);\r\n        }\r\n    }\r\n\r\n    updateUser() {\r\n        const { onUserUpdated } = this.props;\r\n        const { isDirty, tmpUser } = this.state;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            isDirty: !isDirty,\r\n        })\r\n        if (onUserUpdated) {\r\n            onUserUpdated({...tmpUser});\r\n        }\r\n    }\r\n\r\n    cancelEdit() {\r\n        const { currentUser } = this.props;\r\n        const { isDirty } = this.state;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            isDirty: !isDirty,\r\n            tmpUser: currentUser || {},\r\n        }, () => this.refreshDirtyFlag());\r\n    }\r\n\r\n    addUser(newUser: UserInfoVM) {\r\n        const { onUserAdded } = this.props;\r\n\r\n        if (onUserAdded) {\r\n            onUserAdded(newUser);\r\n        }\r\n\r\n        this.toggleIsAddingNewUser();\r\n    }\r\n\r\n    toggleEdit() {\r\n        const { isDirty } = this.state;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            isDirty: !isDirty,\r\n        })\r\n    }\r\n\r\n    toggleIsAddingNewUser() {\r\n        const { isAddingNewUser } = this.state;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            isAddingNewUser: !isAddingNewUser,\r\n        })\r\n    }\r\n\r\n    onAcceptUserRequest(id: string, role: string) {\r\n        const { onAcceptUserRequest } = this.props;\r\n\r\n\r\n        if (onAcceptUserRequest) onAcceptUserRequest(id, role);\r\n    }\r\n\r\n    onDeclineUserRequest(id: string) {\r\n        const { onDeclineUserRequest } = this.props;\r\n\r\n        if (onDeclineUserRequest) onDeclineUserRequest(id);\r\n    }\r\n\r\n    render() {\r\n        const { className, users, currentUser, onUserUpdated, onUserRemoved, onUserAdded, roles, departments,\r\n            accountStatuses, userLookUp, userRequests, permissions, ...rest } = this.props;\r\n\r\n        const { editProperties, tmpUser, isDirty, isAddingNewUser } = this.state;\r\n\r\n        let cn = \"d-flex position-absolute w-100 h-100 align-items-center justify-content-center\";\r\n\r\n        let profileInfoViews;\r\n\r\n        if (users) {\r\n            profileInfoViews = users.map((user: UserInfoVM) => {\r\n                return (\r\n                    <ProfileInfoView permissions={permissions} currentUser={currentUser} roles={roles} departments={departments}\r\n                                     accountStatuses={accountStatuses} user={user} onUserUpdated={onUserUpdated}\r\n                                     onUserRemoved={onUserRemoved} userLookUp={userLookUp}/>\r\n                )\r\n            });\r\n        }\r\n\r\n        let userRequestViews;\r\n\r\n        if (userRequests) {\r\n            userRequestViews = userRequests.map((userRequest) => {\r\n                return (\r\n                    <UserRequestInfoView permissions={permissions} roles={roles} userRequest={userRequest} onAcceptUserRequest={this.onAcceptUserRequest}\r\n                                         onDeclineUserRequest={this.onDeclineUserRequest}/>\r\n                )\r\n            })\r\n        }\r\n\r\n        const editDivs = editProperties.map((editProperty) => {\r\n            const { id, placeholder, readonly } = editProperty;\r\n\r\n            const originalValue = currentUser ? currentUser[id] : '';\r\n            const editValue = tmpUser ? tmpUser[id] : '';\r\n\r\n            let renderDiv;\r\n            let cn = 'align-self-center';\r\n\r\n            switch (id) {\r\n                case 'department':\r\n                    let departmentId = editValue ? editValue : originalValue;\r\n                    let departmentTitle = '';\r\n\r\n                    if (departments && departments[departmentId]) {\r\n                        departmentTitle = departments[departmentId].title;\r\n                    }\r\n                    else {\r\n                        departmentTitle = departmentId;\r\n                    }\r\n\r\n                    renderDiv = (\r\n                        <ComboBox\r\n                            className={cn}\r\n                            disable={!isDirty}\r\n                            onSelect={(value: string) => this.onTmpUserChanged(id, value)}\r\n                            title={departmentTitle}\r\n                            items={departments}\r\n                        />\r\n                    );\r\n                    break;\r\n                case 'role':\r\n                    let roleId = editValue ? editValue : originalValue;\r\n                    let roleTitle = '';\r\n                    if (roles && roles[roleId]) {\r\n                        roleTitle = roles[roleId].title;\r\n                    } else {\r\n                        roleTitle = roleId;\r\n                    }\r\n                    renderDiv =(\r\n                        <TextEdit\r\n                            className={cn}\r\n                            disable={!readonly ? !isDirty : true}\r\n                            placeholder={placeholder}\r\n                            name={id}\r\n                            dirty={!!editValue}\r\n                            value={roleTitle || \"N/A\"}\r\n                            edit={!readonly ? isDirty : false}\r\n                            onSubmit={this.onTmpUserChanged}/>\r\n                    )\r\n                    break;\r\n                case 'first_name':\r\n                case 'last_name':\r\n                case 'email_address':\r\n                case 'phone_number':\r\n                case 'account_status':\r\n                default:\r\n                    renderDiv = (\r\n                        <TextEdit\r\n                            className={cn}\r\n                            disable={!readonly ? !isDirty : true}\r\n                            placeholder={placeholder}\r\n                            name={id}\r\n                            dirty={!!editValue}\r\n                            value={editValue ? editValue : originalValue}\r\n                            edit={!readonly ? isDirty : false}\r\n                            onSubmit={this.onTmpUserChanged}/>\r\n                    );\r\n            }\r\n            return renderDiv;\r\n        });\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={'profile-panel system-tool-panel flex-fill h-100 py-4 pl-4 d-flex flex-column'}>\r\n                    <div className={'header-1 title py-3'}>PROFILE MANAGER</div>\r\n\r\n                    <ScrollBar renderTrackHorizontal={false}>\r\n                        <div className={`header mt-3 d-flex align-items-center justify-content-start mr-4 ${isDirty ? 'dirty' : ''}`}>\r\n                            <div className={'d-flex h-gap-3 align-items-center py-3'}>\r\n                                <div>PERSONAL INFORMATION</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={'p-3 mr-4'}>\r\n                            <div className={'personal-info-grid w-100'}>\r\n                                <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end '}>First Name:</div>\r\n                                <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Last Name:</div>\r\n                                <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Department:</div>\r\n                                <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Role:</div>\r\n                                <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Email:</div>\r\n                                <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Phone:</div>\r\n                                {/*<div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>DoD ID:</div>*/}\r\n                                <div className={'header-1 font-weight-semi-bold align-self-center justify-self-end'}>Account Status:</div>\r\n                                {editDivs}\r\n                            </div>\r\n                            {\r\n                                !isDirty &&\r\n                                <div className={\"d-flex justify-content-end h-gap-2\"}>\r\n                                    {\r\n                                        permissions.canModifySelf &&\r\n                                        <Button text={\"Edit\"} orientation={\"horizontal\"} onClick={() => this.toggleEdit()} selected={false} disabled={false} className={\"px-5\"}/>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            {\r\n                                isDirty &&\r\n                                <div className={\"d-flex justify-content-end h-gap-2\"}>\r\n                                    <Button text={\"Cancel\"} orientation={\"horizontal\"} onClick={() => this.cancelEdit()} selected={false} disabled={false} className={\"px-5\"}/>\r\n                                    <Button text={\"Save\"} orientation={\"horizontal\"} onClick={() => this.updateUser()} selected={false} disabled={false} className={\"px-5\"}/>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {\r\n                            permissions.canModify &&\r\n                            <Fragment>\r\n                                <div className={\"header d-flex align-items-center justify-content-between mt-3 mb-5 mr-4\"}>\r\n                                    <div className={'py-3'}>User Requests</div>\r\n                                </div>\r\n                                <div className={'mr-4'}>\r\n                                    <div className={'v-gap-3 mr-4'}>\r\n                                        {userRequestViews}\r\n                                    </div>\r\n                                    <ScrollBar renderTrackHorizontal={false}>\r\n\r\n                                    </ScrollBar>\r\n                                </div>\r\n\r\n                                <div className={\"header d-flex align-items-center justify-content-between mt-3 mb-5 mr-4 position-sticky\"}>\r\n                                    <div className={'py-3'}>User Manager</div>\r\n                                    <SearchBox placeholder={\"Search for User\"}/>\r\n                                    {\r\n                                        permissions.canCreate &&\r\n                                        <Button text={\"Add User\"} orientation={\"horizontal\"} onClick={() => this.toggleIsAddingNewUser()} selected={false} disabled={false} className={\"px-5 mr-5\"}/>\r\n                                    }\r\n                                </div>\r\n                                <div className={'h-100 mr-4'}>\r\n                                    <div className={'v-gap-3 mr-4'}>\r\n                                        {\r\n                                            isAddingNewUser &&\r\n                                            <NewUserProfileInfoView permissions={permissions} onUserAdded={(newUser) => this.addUser(newUser)}\r\n                                                                    onCancel={() => this.toggleIsAddingNewUser()}\r\n                                                                    accountStatuses={accountStatuses} departments={departments}\r\n                                                                    roles={roles}/>\r\n                                        }\r\n                                        {profileInfoViews}\r\n                                    </div>\r\n                                    {/*<ScrollBar renderTrackHorizontal={false}>*/}\r\n                                    {/*    */}\r\n                                    {/*</ScrollBar>*/}\r\n                                </div>\r\n                            </Fragment>\r\n                        }\r\n                    </ScrollBar>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfilePanelView;\r\n","import ProfilePanelView from \"./profilePanelView\";\r\nimport {Presenter} from \"../../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../../framework/wrappers/componentWrapper\";\r\nimport {forEach, forEachKVP} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {ReferenceType, UserInfo} from \"../../../../model\";\r\nimport {authorizationService, referenceService, userService} from \"../../../../application/serviceComposition\";\r\nimport {AccountStatusVM, DepartmentVM, PermissionsVM, RoleVM, UserInfoVM, UserRequestInfoVM} from \"./profilePanelModel\";\r\nimport {PermissionInfo} from \"../../../../model/permissionInfo\";\r\nimport {PERMISSION_ENTITY, PERMISSION_OPERATOR} from \"../../../../api\";\r\nimport {UserRequestInfo} from \"../../../../model/userRequestInfo\";\r\n\r\nclass ProfilePanel extends Presenter {\r\n    private readonly accountStatuses: AccountStatusVM[];\r\n    constructor() {\r\n        super();\r\n\r\n        this.id ='components/profilePanel';\r\n\r\n        this.view = ProfilePanelView;\r\n\r\n        this.displayOptions = {\r\n            containerId: 'system-tool-panel',\r\n            visible: false,\r\n            appearClass: 'fadeIn',\r\n            enterClass: 'fadeIn',\r\n        };\r\n\r\n        // this does not belong here\r\n        this.accountStatuses = [\r\n            {\r\n                id: 'Created',\r\n                title: 'Created',\r\n            },\r\n            {\r\n                id: 'Active',\r\n                title: 'Active',\r\n            },\r\n            {\r\n                id: 'Inactive',\r\n                title: 'Inactive',\r\n            },\r\n        ]\r\n\r\n        this.mapStateToProps = (state: any, props: any) => {\r\n            return {\r\n                users: this.getManagedUserVMs(state),\r\n                userLookUp: userService.getActiveUsers(),\r\n                currentUser: this.getCurrentUserVM(state),\r\n                roles: this.getRolesVMs(state),\r\n                departments: this.getDepartmentVMs(state),\r\n                accountStatuses: this.accountStatuses,\r\n                permissions: this.getPermissions(state),\r\n                userRequests: this.getUserRequestVMs(state),\r\n            }\r\n        }\r\n\r\n        this.mapDispatchToProps = () => {\r\n            return {\r\n                onUserAdded: (user: UserInfoVM) => userService.createUser(user),\r\n                onUserUpdated: (user: UserInfo) => userService.updateUser(user),\r\n                onUserRemoved: (id: string) => userService.removeUser(id),\r\n                onAcceptUserRequest: (id: string, role: string) => userService.acceptUserRequest(id, role),\r\n                onDeclineUserRequest: (id: string) => userService.declineUserRequest(id),\r\n            };\r\n        }\r\n    }\r\n\r\n    getPermissions = createSelector<any, string, Record<string, PermissionInfo>, PermissionsVM>(\r\n        [() => userService.getCurrentUserId(), authorizationService.getPermissions],\r\n        (currentUserId, permissionInfoLookup) => {\r\n\r\n            return {\r\n                canModifySelf: authorizationService.hasPermission(PERMISSION_ENTITY.USER, PERMISSION_OPERATOR.MODIFY, currentUserId, currentUserId),\r\n                canCreate: authorizationService.hasPermission(PERMISSION_ENTITY.USER, PERMISSION_OPERATOR.POST),\r\n                canDelete: authorizationService.hasPermission(PERMISSION_ENTITY.USER, PERMISSION_OPERATOR.DELETE),\r\n                canModify: authorizationService.hasPermission(PERMISSION_ENTITY.USER, PERMISSION_OPERATOR.MODIFY)\r\n            }\r\n        }\r\n    )\r\n\r\n    getManagedUserVMs = createSelector(\r\n        [() => userService.getActiveUsers(), () => userService.getCurrentUser()],\r\n        (items, currentUser) => {\r\n            let itemVMs: Record<string, UserInfoVM> = {};\r\n\r\n            const { id:currentUserId} = currentUser || {};\r\n\r\n            forEach(items, (item: UserInfo) => {\r\n\r\n                const { id, dod_id, first_name, last_name, email_address, phone_number, department,\r\n                    account_status, role, approved_by, date_approved} = item;\r\n\r\n                let itemVM:UserInfoVM = {\r\n                    id,\r\n                    dod_id: dod_id,\r\n                    first_name,\r\n                    last_name,\r\n                    email_address,\r\n                    phone_number,\r\n                    department,\r\n                    account_status,\r\n                    role,\r\n                    approved_by: approved_by ? approved_by : \"\",\r\n                    date_approved: date_approved ? date_approved : \"\",\r\n                };\r\n\r\n                if (currentUserId) {\r\n                    if (id !== currentUserId) {\r\n                        itemVMs[id] = itemVM;\r\n                    }\r\n                } else {\r\n                    itemVMs[id] = itemVM;\r\n                }\r\n            });\r\n            return Object.values(itemVMs);\r\n        }\r\n    )\r\n\r\n    getCurrentUserVM = createSelector(\r\n        [() => userService.getCurrentUser()],\r\n        (currentUser) => {\r\n            const { id=\"\", dod_id='', first_name=\"\", last_name=\"\", email_address=\"\", phone_number=\"\", department=\"\",\r\n                account_status=\"\", role=\"\", approved_by=\"\", date_approved=\"\"} = currentUser || {};\r\n\r\n            let itemVM: UserInfoVM = {\r\n                id,\r\n                dod_id: dod_id,\r\n                first_name,\r\n                last_name,\r\n                email_address,\r\n                phone_number,\r\n                department,\r\n                account_status,\r\n                role,\r\n                approved_by: approved_by ? approved_by : \"\",\r\n                date_approved: date_approved ? date_approved : \"\",\r\n            };\r\n\r\n            return itemVM;\r\n        }\r\n    )\r\n\r\n    getRolesVMs = createSelector(\r\n        [() => referenceService.getAllReferences(ReferenceType.ROLE)],\r\n        (roles) => {\r\n            let itemVMs: Record<string, RoleVM> = {};\r\n\r\n            forEachKVP(roles, (itemKey: string, itemValue: RoleVM) => {\r\n                itemVMs[itemKey] = {\r\n                    ...itemValue\r\n                };\r\n            })\r\n\r\n            return itemVMs;\r\n        }\r\n    )\r\n\r\n    getDepartmentVMs = createSelector(\r\n        [() => referenceService.getAllReferences(ReferenceType.DEPARTMENT)],\r\n        (departments) => {\r\n            let itemVMs: Record<string, DepartmentVM> = {};\r\n\r\n            forEachKVP(departments, (itemKey: string, itemValue: DepartmentVM) => {\r\n                itemVMs[itemKey] = {\r\n                    ...itemValue\r\n                };\r\n            })\r\n\r\n            return itemVMs;\r\n        }\r\n    )\r\n\r\n    getUserRequestVMs = createSelector(\r\n        [() => userService.getPendingUsers()],\r\n        (items) => {\r\n            // let itemVMs: Record<string, UserRequestInfoVM> = {};\r\n            //\r\n            // forEach(items, (item: UserRequestInfo) => {\r\n            //     const {\r\n            //         id,\r\n            //         user_id,\r\n            //         role,\r\n            //         duration,\r\n            //         comment\r\n            //     } = item;\r\n            //\r\n            //     let name = \"\";\r\n            //     let user = userService.getUser(user_id);\r\n            //\r\n            //     if (user) {\r\n            //         name = user.first_name + user.last_name ? \" \" + user.last_name : \"\";\r\n            //     }\r\n            //\r\n            //     let itemVM: UserRequestInfoVM = {\r\n            //         id,\r\n            //         name,\r\n            //         role,\r\n            //         duration,\r\n            //         comment\r\n            //     }\r\n            //\r\n            //     itemVMs[id] = itemVM;\r\n            // });\r\n            //\r\n            // return Object.values(itemVMs);\r\n\r\n            let itemVMs: Record<string, UserInfoVM> = {};\r\n\r\n            forEach(items, (item: UserInfo) => {\r\n\r\n                const { id, dod_id, first_name, last_name, email_address, phone_number, department,\r\n                    account_status, role, approved_by, date_approved} = item;\r\n\r\n                let itemVM:UserInfoVM = {\r\n                    id,\r\n                    dod_id: dod_id,\r\n                    first_name,\r\n                    last_name,\r\n                    email_address,\r\n                    phone_number,\r\n                    department,\r\n                    account_status,\r\n                    role,\r\n                    approved_by: approved_by ? approved_by : \"\",\r\n                    date_approved: date_approved ? date_approved : \"\",\r\n                };\r\n\r\n                itemVMs[id] = itemVM;\r\n            });\r\n            return Object.values(itemVMs);\r\n        }\r\n    )\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: ProfilePanelPresenter,\r\n    componentId: ProfilePanelId\r\n} = createComponentWrapper(ProfilePanel);\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const AcceptSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d=\"m 11.685021,27.899338 c -0.0943,-0.018 -0.27201,-0.0797 -0.395,-0.13726 -0.20948,-0.098 -0.56466,-0.4456 -5.6217003,-5.50208 -5.82198999,-5.82134 -5.51523999,-5.49508 -5.63145999,-5.98969 -0.0948,-0.40336 -0.003,-0.89531 0.2303,-1.22824 0.16778,-0.23991 2.57874999,-2.64768 2.74740999,-2.74376 0.53885,-0.30698 1.13456,-0.30728 1.67756,-8.5e-4 0.10121,0.0571 1.42887,1.36169 3.72264,3.6579 1.9609303,1.96301 3.5761503,3.56911 3.5893803,3.56911 0.0132,0 3.42449,-3.40096 7.58057,-7.55768 4.15608,-4.1567301 7.62996,-7.6051701 7.71973,-7.6632101 0.50247,-0.32485 1.21295,-0.31449 1.72592,0.0252 0.0944,0.0625 0.73822,0.68249 1.43058,1.37764 1.32327,1.3286 1.36386,1.37796 1.48998,1.81182 0.11483,0.39499 0.0234,0.92431 -0.22337,1.29333 -0.0555,0.083 -4.30967,4.3575901 -9.45366,9.4990301 -10.05358,10.04862 -9.44792,9.46431 -9.92737,9.57735 -0.2407,0.0568 -0.4086,0.0596 -0.66151,0.0114 z\"/>\r\n    </svg>\r\n);\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './tagsPanel.css';\r\nimport '../../../theme/stylesheets/panel.css';\r\nimport {TagsPanelProps, TagsPanelState} from \"./tagsPanelModel\";\r\nimport {getClassNames} from \"../../../../framework.visual/extras/utils/animationUtils\";\r\nimport ScrollBar from \"../../../theme/widgets/scrollBar/scrollBar\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\nimport Card from \"../../../theme/widgets/card/card\";\r\nimport Button from \"../../../theme/widgets/button/button\";\r\nimport {DeleteSVG} from \"../../../theme/svgs/deleteSVG\";\r\nimport {AcceptSVG} from \"../../../theme/svgs/acceptSVG\";\r\nimport Tag from \"../../../theme/widgets/tag/tag\";\r\n\r\nclass TagsPanelView extends Component<TagsPanelProps, TagsPanelState> {\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n    }\r\n\r\n    render() {\r\n        const { className, nominatedTags, tags } = this.props;\r\n\r\n        let cn = \"d-flex position-absolute w-100 h-100 align-items-center justify-content-center\";\r\n\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        let nominatedTagsDiv: JSX.Element[] = [];\r\n\r\n        if (nominatedTags) {\r\n            nominatedTagsDiv = Object.entries(nominatedTags).map(([key, nominatedTag]) => {\r\n                const { id, tag, document } = nominatedTag;\r\n                return (\r\n                    <CSSTransition key={id} timeout={300} classNames={getClassNames('fadeIn', 'fadeIn', 'slideRightOut') }>\r\n                        <div className={'position-relative pending-item'}>\r\n                            <Card className={`d-flex flex-column align-items-stretch v-gap-3 p-0`}\r\n                                  header={\r\n                                      <div className={'d-flex'}>\r\n                                          <div className={'flex-fill d-flex justify-content-between align-items-center'}>\r\n                                              <div className={'pending-item-body flex-fill d-flex justify-content-between align-items-center'}>\r\n                                                  <div className={'d-flex flex-column v-gap-3 p-4'}>\r\n                                                      <Tag name={tag} text={tag}/>\r\n                                                      <div className={\"header-4 text-secondary\"}>{document}</div>\r\n                                                  </div>\r\n\r\n                                              </div>\r\n                                              <div className={'d-flex h-gap-3 px-5'}>\r\n                                                  <Button className={'p-2 reject'}>\r\n                                                      <DeleteSVG className={\"small-image-container\"}/>\r\n                                                  </Button>\r\n                                                  <Button className={'p-2 accept'} >\r\n                                                      <AcceptSVG className={\"small-image-container\"}/>\r\n                                                  </Button>\r\n                                              </div>\r\n                                          </div>\r\n                                      </div>\r\n                                  }\r\n                            />\r\n                        </div>\r\n                    </CSSTransition>\r\n                );\r\n            })\r\n        }\r\n\r\n        let tagDivs = Object.entries(tags).map(([key, tag]) => {\r\n        })\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={'system-tool-panel tags-panel flex-fill h-100 py-4 pl-4 d-flex flex-column'}>\r\n                    <div className={'header-1 title py-3'}>TAGS MANAGER</div>\r\n                    <div className={\"header d-flex align-items-center justify-content-between mt-3 mb-5 mr-4\"}>\r\n                        <div className={'py-3'}>NOMINATED TAGS</div>\r\n                    </div>\r\n                    {\r\n                        nominatedTagsDiv && nominatedTagsDiv.length > 0 ?\r\n                            <ScrollBar renderTrackHorizontal={false}>\r\n                                <div className={\"search-results pr-3 v-gap-3\"}>\r\n                                    <TransitionGroup component={null}>\r\n                                        {nominatedTagsDiv}\r\n                                    </TransitionGroup>\r\n                                </div>\r\n                            </ScrollBar>\r\n                            :\r\n                            <div className={'flex-fill align-self-stretch d-flex align-items-center justify-content-center'}>\r\n                                <div className={'text-primary header-1'}>No Nominated Tags</div>\r\n                            </div>\r\n                    }\r\n                    <div className={\"header d-flex align-items-center justify-content-between mt-3 mb-5 mr-4\"}>\r\n                        <div className={'py-3'}>TAGS LIBRARIES</div>\r\n                    </div>\r\n                    <ScrollBar renderTrackHorizontal={false}>\r\n                        {tagDivs}\r\n                    </ScrollBar>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TagsPanelView;\r\n","import TagsPanelView from \"./tagsPanelView\";\r\nimport {Presenter} from \"../../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../../framework/wrappers/componentWrapper\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {tagService} from \"../../../../application/serviceComposition\";\r\nimport {TagInfoVM} from \"./tagsPanelModel\";\r\nimport {forEach} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {TagInfo} from \"../../../../model\";\r\n\r\nclass TagsPanel extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id ='components/tagsPanel';\r\n\r\n        this.view = TagsPanelView;\r\n\r\n        this.displayOptions = {\r\n            containerId: 'system-tool-panel',\r\n            visible: false,\r\n            appearClass: 'fadeIn',\r\n            enterClass: 'fadeIn',\r\n        };\r\n\r\n        this.mapStateToProps = (state: any, props: any) => {\r\n            return {\r\n                tags: this.getTagVMs(state),\r\n            }\r\n        }\r\n\r\n        this.mapDispatchToProps = (dispatch: any) => {\r\n            return {\r\n\r\n            };\r\n        }\r\n    }\r\n\r\n    getTagVMs = createSelector(\r\n        [tagService.getAllPublicTags],\r\n        (items) => {\r\n            let itemVMs: TagInfoVM[] = [];\r\n\r\n            forEach(items, (item: TagInfo) => {\r\n                const { id, title } = item;\r\n\r\n                let itemVM: TagInfoVM = {\r\n                    id,\r\n                    title: title.toLowerCase(),\r\n                }\r\n\r\n                itemVMs.push(itemVM);\r\n            });\r\n\r\n            let sortedArray: TagInfoVM[];\r\n\r\n            sortedArray = itemVMs.sort((a, b) => {\r\n                return a.title.localeCompare(b.title);\r\n            })\r\n\r\n            return sortedArray;\r\n        }\r\n    )\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: TagsPanelPresenter,\r\n    componentId: TagsPanelId\r\n} = createComponentWrapper(TagsPanel);\r\n","import React, {Component} from 'react';\r\nimport './statsPanel.css';\r\nimport '../../../theme/stylesheets/panel.css';\r\nimport {StatsPanelProps, StatsPanelState} from \"./statsPanelModel\";\r\n\r\nclass StatsPanelView extends Component<StatsPanelProps, StatsPanelState> {\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n    }\r\n\r\n    render() {\r\n        const { className } = this.props;\r\n\r\n        let cn = \"d-flex\";\r\n\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={'stats-panel system-tool-panel flex-fill p-4 d-flex align-items-center justify-content-center'}>\r\n                    <div className={'header-1 text-primary'}>Stats Panel</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatsPanelView;\r\n","import StatsPanelView from \"./statsPanelView\";\r\nimport {Presenter} from \"../../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../../framework/wrappers/componentWrapper\";\r\n\r\nclass StatsPanel extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id ='components/statsPanel';\r\n\r\n        this.view = StatsPanelView;\r\n\r\n        this.displayOptions = {\r\n            containerId: 'system-tool-panel',\r\n            visible: false,\r\n            appearClass: 'fadeIn',\r\n            enterClass: 'fadeIn',\r\n        };\r\n\r\n        this.mapStateToProps = (state: any, props: any) => {\r\n            return {\r\n\r\n            }\r\n        }\r\n\r\n        this.mapDispatchToProps = (dispatch: any) => {\r\n            return {\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: StatsPanelPresenter,\r\n    componentId: StatsPanelId\r\n} = createComponentWrapper(StatsPanel);\r\n","import React from \"react\";\r\nimport './toolbar.css';\r\nimport Button from \"../button/button\";\r\nimport {ToolbarProps} from \"./toolbarModel\";\r\n\r\nclass Toolbar extends React.Component<ToolbarProps> {\r\n    render() {\r\n        const {className, tools, onToolSelected: defaultHandler, children, orientation, ...rest} = this.props;\r\n\r\n            let cn = 'toolbar d-flex align-items-center justify-content-center'\r\n            if (className) {\r\n                cn += ` ${className}`;\r\n            }\r\n\r\n            if (orientation === 'vertical') {\r\n                cn += ' flex-column v-gap-3';\r\n            } else {\r\n                cn += ' h-gap-3';\r\n            }\r\n\r\n            const onToolClick = (tool: { id: any; title?: any; graphic?: any; selected?: any; onClick?: any }) => {\r\n                const {id, onClick: buttonHandler} = tool;\r\n                if (buttonHandler) {\r\n                    buttonHandler(id);\r\n                } else if (defaultHandler) {\r\n                    defaultHandler(id);\r\n                }\r\n            }\r\n\r\n            let toolDivs = tools.map((tool: { id: any; title?: any; graphic?: any; selected?: any; onClick?: any; }) => {\r\n                const {id, title = '', graphic: Graphic, selected = false,} = tool;\r\n                return (\r\n                    <li key={id} className={'tool-item'}>\r\n                        <Button tooltip={title} onClick={() => onToolClick(tool)} selected={selected}>\r\n                            {Graphic && <Graphic className={'small-image-container'}/>}\r\n                        </Button>\r\n                    </li>\r\n\r\n                )\r\n            });\r\n\r\n            return (\r\n                <ul className={cn} {...rest}>\r\n                    {toolDivs}\r\n                </ul>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\nimport {SVGModel} from '../../../framework.visual/model/svgModel';\r\n\r\nexport const DocPreviewSVG = ({className} : SVGModel) => (\r\n    <svg className={className} viewBox=\"0 0 32 32\">\r\n        <path d={\"M 1.8091064,31.955351 C 1.4359325,31.880052 1.1405344,31.624435 1.0453189,31.294423 1.0094846,31.170224 0.99848154,26.588893 1.0082809,15.872959 L 1.0222212,0.62818337 1.1659293,0.42139422 C 1.2499486,0.30049383 1.3977524,0.17003732 1.521787,0.10730253 L 1.7339365,0 h 8.6217875 8.621788 v 4.5094333 c 0,3.092213 0.01631,4.5742131 0.0519,4.7155558 0.06685,0.2654631 0.294741,0.5401753 0.54085,0.6519559 0.184509,0.083802 0.42289,0.088225 4.808142,0.089221 l 4.614009,0.00105 v 4.55654 4.556541 l -0.376044,-0.562504 c -1.02454,-1.532548 -2.555567,-2.666459 -4.321422,-3.200538 -0.95095,-0.287613 -1.16535,-0.319066 -2.146051,-0.314831 -0.785233,0.0034 -0.98577,0.02063 -1.503254,0.129215 -1.136459,0.238471 -2.336138,0.728983 -3.241902,1.325514 -0.568729,0.374561 -1.52613,1.323619 -1.956693,1.93964 -1.664804,2.381895 -1.911282,5.478553 -0.644442,8.096527 1.108587,2.290939 3.28296,3.929009 5.820211,4.384672 0.95353,0.171244 2.323277,0.130387 3.172138,-0.09462 l 0.261543,-0.06933 0.643598,0.642977 L 25.343696,32 13.659858,31.994516 c -6.4261101,-0.003 -11.7589483,-0.02064 -11.8507516,-0.03917 z m 26.4679586,-0.01556 c -0.125232,-0.03787 -0.601975,-0.48326 -1.909039,-1.783507 -0.958169,-0.953171 -1.764603,-1.733038 -1.792076,-1.733038 -0.02747,0 -0.18481,0.0548 -0.349638,0.121773 -0.83196,0.338055 -1.807401,0.484914 -2.701702,0.406757 -1.799457,-0.157262 -3.311865,-0.991498 -4.371559,-2.411327 -0.492822,-0.660306 -0.924787,-1.643254 -1.090227,-2.480839 -0.09867,-0.499525 -0.08528,-1.757608 0.02409,-2.263345 0.343248,-1.587276 1.228783,-2.923287 2.504951,-3.779231 1.07164,-0.718766 2.110051,-1.039392 3.366272,-1.039392 1.241007,0 2.353166,0.335952 3.418432,1.03261 0.451009,0.294949 1.246764,1.086114 1.551603,1.542651 1.149662,1.72178 1.371999,3.793425 0.610906,5.692176 l -0.131093,0.327048 1.741466,1.747467 c 1.840898,1.847241 1.844942,1.852249 1.845678,2.285512 5.39e-4,0.315809 -0.132961,0.497688 -1.014926,1.382745 -0.765681,0.768367 -0.896421,0.879934 -1.103747,0.941878 -0.267122,0.07981 -0.36337,0.08143 -0.599392,0.01006 z m -5.538108,-5.020466 c 0.815402,-0.15468 1.41733,-0.48146 2.061248,-1.11903 0.525886,-0.520702 0.775597,-0.912772 1.006878,-1.580896 0.148039,-0.427651 0.154392,-0.476229 0.154999,-1.185125 7.3e-4,-0.852921 -0.05243,-1.106375 -0.375095,-1.788375 -0.88943,-1.879936 -3.098048,-2.746695 -5.059549,-1.985589 -1.160872,0.450443 -2.082789,1.483807 -2.416604,2.708736 -0.142352,0.522358 -0.140561,1.451353 0.0038,1.995183 0.550703,2.073914 2.546423,3.349257 4.624276,2.955096 z M 20.980493,4.5067064 c 0,-1.9016393 0.01615,-3.4575261 0.03589,-3.4575261 0.01974,0 1.591666,1.5558868 3.49317,3.4575261 l 3.457279,3.4575261 h -3.49317 -3.49317 z\"} />\r\n    </svg>\r\n);\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './systemToolbar.css';\r\nimport Toolbar from \"../../theme/widgets/toolbar/toolbar\";\r\nimport Button from \"../../theme/widgets/button/button\";\r\nimport {DocPreviewSVG} from \"../../theme/svgs/docPreviewSVG\";\r\nimport {SystemToolbarProps, SystemToolbarState} from \"./systemToolbarModel\";\r\n\r\nclass SystemToolbarView extends Component<SystemToolbarProps, SystemToolbarState> {\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n    }\r\n\r\n    render() {\r\n        const { className, tools, onToolSelected, documentPreviewTool, onDocumentPreviewSelected, ...rest } = this.props;\r\n\r\n        let cn = \"system-toolbar px-2 py-4 d-flex align-items-top justify-content-center\";\r\n\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        let toolbarDiv = null;\r\n        if (tools) {\r\n            toolbarDiv = <Toolbar tools={tools} onToolSelected={onToolSelected} orientation={'vertical'}/>\r\n        }\r\n\r\n        const {selected:docSelected, title: docTitle} = documentPreviewTool;\r\n\r\n        return (\r\n            <div className={cn} {...rest}>\r\n                <div className={'d-flex flex-column v-gap-3'}>\r\n                    <div className={'tool-item'}>\r\n                        <Button tooltip={docTitle} onClick={onDocumentPreviewSelected} selected={docSelected}>\r\n                            <DocPreviewSVG className={'small-image-container'}/>\r\n                        </Button>\r\n                    </div>\r\n                    <div className={\"border-top align-self-stretch justify-self-stretch border-muted\"}/>\r\n                    {toolbarDiv}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SystemToolbarView;\r\n","import SystemToolbarView from \"./systemToolbarView\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {Presenter} from \"../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../framework/wrappers/componentWrapper\";\r\nimport {DocumentPanelId} from \"../documentPanel/documentPanelPresenter\";\r\nimport {DocPreviewSVG} from \"../../theme/svgs/docPreviewSVG\";\r\nimport {forEach} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {\r\n    authorizationService,\r\n    displayService,\r\n    repoService,\r\n    selectionService\r\n} from \"../../../application/serviceComposition\";\r\nimport {SystemToolMenuItem} from \"../../model/systemToolMenuItem\";\r\nimport {SystemToolVM} from \"./systemToolbarModel\";\r\nimport {PERMISSION_ENTITY, PERMISSION_LEVEL, PERMISSION_OPERATOR} from \"../../../api\";\r\n\r\n\r\nexport const SYSTEM_TOOLBAR_VIEW_ID = 'system-tool-panel';\r\n\r\nclass SystemToolbar extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id ='components/systemToolbar';\r\n\r\n        this.view = SystemToolbarView;\r\n\r\n        this.mapStateToProps = (state: any, props: any) => {\r\n            return {\r\n                documentPreviewTool: this.getDocumentPreviewToolVM(state),\r\n                tools: this.getToolVMs(state)\r\n            }\r\n        }\r\n\r\n        this.mapDispatchToProps = () => {\r\n            return {\r\n                onDocumentPreviewSelected: () => this.onDocumentPreviewSelected(),\r\n                onToolSelected: (id: string) => this.onToolSelected(id)\r\n            };\r\n        }\r\n    }\r\n\r\n    getTools = () => {\r\n        return repoService.getAll<SystemToolMenuItem>(SystemToolMenuItem.class);\r\n    }\r\n\r\n    onToolSelected(nextId: string) {\r\n        let currentId = displayService.getSelectedNodeId(SYSTEM_TOOLBAR_VIEW_ID)\r\n\r\n        if (currentId === nextId) {\r\n            displayService.popNode(SYSTEM_TOOLBAR_VIEW_ID);\r\n        }\r\n        else {\r\n            displayService.pushNode(nextId);\r\n        }\r\n    }\r\n\r\n\r\n    getSelectedNode = () => {\r\n        return displayService.getSelectedNodeId(SYSTEM_TOOLBAR_VIEW_ID);\r\n    }\r\n\r\n    getDocumentNodeInfo = () => {\r\n        return displayService.getNodeInfo(DocumentPanelId);\r\n    }\r\n\r\n\r\n    getToolVMs = createSelector(\r\n        [ this.getSelectedNode, this.getTools, authorizationService.getPermissions], // if this changes, will re-evaluate the combiner and trigger a re-render\r\n        (selectedId, items) => {\r\n            let itemVMs: Record<string, SystemToolVM> = {};\r\n\r\n            forEach(items, (item: SystemToolMenuItem) => {\r\n\r\n                let enabled = true;\r\n                switch(item.id) {\r\n                    case 'components/uploadPanel':\r\n                        enabled = authorizationService.hasPermission(PERMISSION_ENTITY.DOCUMENT, PERMISSION_OPERATOR.POST);\r\n                        break;\r\n                }\r\n\r\n                if (enabled) {\r\n                    itemVMs[item.id] = {\r\n                        ...item,\r\n                        selected: selectedId === item.id\r\n                    };\r\n                }\r\n            });\r\n\r\n            return Object.values(itemVMs);\r\n        }\r\n    );\r\n\r\n    onDocumentPreviewSelected() {\r\n        console.log('doc toggle selected');\r\n        displayService.toggleNode(DocumentPanelId);\r\n\r\n        if (selectionService.getContext(\"selected-document\") !== '') {\r\n            selectionService.setContext(\"selected-document\", '');\r\n        }\r\n    }\r\n\r\n    getDocumentPreviewToolVM = createSelector(\r\n        [this.getDocumentNodeInfo],\r\n        (nodeInfo) => {\r\n            const itemVM = {\r\n                id: DocumentPanelId,\r\n                graphic: DocPreviewSVG,\r\n                selected: nodeInfo ? nodeInfo.visible : false,\r\n                title: 'Preview'\r\n            }\r\n            return itemVM;\r\n        }\r\n    );\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: SystemToolbarPresenter,\r\n    componentId: SystemToolbarId\r\n} = createComponentWrapper(SystemToolbar);\r\n","import React, {Component} from \"react\";\r\nimport {Props, State, StateProps} from \"./appModel\";\r\nimport {SearchPresenter} from \"./search/searchPresenter\";\r\nimport {DocumentPanelPresenter} from \"../../../components/documentPanel/documentPanelPresenter\";\r\nimport {UploadPanelPresenter} from \"../../../components/systemToolPanels/uploadPanel/uploadPanelPresenter\";\r\nimport {ProfilePanelPresenter} from \"../../../components/systemToolPanels/profilePanel/profilePanelPresenter\";\r\nimport {TagsPanelPresenter} from \"../../../components/systemToolPanels/tagsPanel/tagsPanelPresenter\";\r\nimport {StatsPanelPresenter} from \"../../../components/systemToolPanels/statsPanel/statsPanelPresenter\";\r\nimport {SystemToolbarPresenter} from \"../../../components/systemToolbar/systemToolbarPresenter\";\r\nimport {referenceService, statService, tagService} from \"../../../../application/serviceComposition\";\r\nimport {forEachKVP} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {ReferenceType} from \"../../../../model\";\r\nimport {LoadingIndicator} from \"../../../theme/widgets/loadingIndicator/loadingIndicator\";\r\nimport {Size} from \"../../../theme/widgets/loadingIndicator/loadingIndicatorModel\";\r\nimport {LandingPanelPresenter} from \"../../../components/landingPanel/landingPanelPresenter\";\r\n\r\nexport class AppView extends Component<Props, State> {\r\n    private interval!: NodeJS.Timer;\r\n    private timeout!: NodeJS.Timeout;\r\n\r\n    constructor(props: StateProps | Readonly<StateProps>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            this.fetchData();\r\n        }, 300000); // 5 minutes\r\n        this.fetchData();\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.setLoading(false);\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    fetchData() {\r\n        statService.fetchStats();\r\n        tagService.fetchTags();\r\n        forEachKVP(ReferenceType, (key: any, value: ReferenceType) => {\r\n            referenceService.fetchReferences(value);\r\n        });\r\n    }\r\n\r\n    setLoading(value: boolean) {\r\n        this.setState({\r\n            ...this.state,\r\n            loading: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {className, currentSystemTool, docPreviewTool, permissions, admin, ...rest} = this.props;\r\n\r\n        const { loading } = this.state;\r\n\r\n        const {visible: docVisible} = docPreviewTool || {};\r\n\r\n        let cn = `${className ? className : ''} d-flex h-100`;\r\n\r\n        return (\r\n            <div id={'analysis'} {...rest} className={cn}>\r\n                {\r\n                    permissions.canSearch ?\r\n                        <SearchPresenter className={\"flex-fill flex-basis-0\"} style={{zIndex: '1'}}/>\r\n                        :\r\n                        <div className={\"d-flex flex-fill\"}>\r\n                            {\r\n                                loading ?\r\n                                    <LoadingIndicator size={Size.large}/> :\r\n                                    <div className={'flex-fill d-flex align-items-center justify-content-center'}>\r\n                                        <div className={'display-1'}>You do not have permissions to perform this request (Search)</div>\r\n                                    </div>\r\n\r\n                            }\r\n                        </div>\r\n\r\n                }\r\n\r\n                <div className={docVisible ? \"view-container system-tools-panel flex-fill flex-basis-0 position-relative slideRightIn-active\" : 'view-container slideRightOut-active'}>\r\n                    <DocumentPanelPresenter className={docVisible ? 'flex-fill flex-basis-0' : ''}\r\n                                            style={{zIndex: '9999'}}/>\r\n                </div>\r\n                <div className={currentSystemTool ? \"view-container system-tools-panel flex-fill flex-basis-0 position-relative slideRightIn-active\" : 'view-container slideRightOut-active'}>\r\n                    <UploadPanelPresenter/>\r\n                    <ProfilePanelPresenter/>\r\n                    <TagsPanelPresenter/>\r\n                    <StatsPanelPresenter/>\r\n                </div>\r\n                <SystemToolbarPresenter style={{zIndex: '1'}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {DocumentPanelId} from \"../../../components/documentPanel/documentPanelPresenter\";\r\nimport {Presenter} from \"../../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../../framework/wrappers/componentWrapper\";\r\nimport {ReferenceType} from \"../../../../model\";\r\nimport {forEachKVP} from \"../../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {\r\n    authorizationService,\r\n    displayService,\r\n    referenceService,\r\n    statService,\r\n    tagService,\r\n    userService\r\n} from \"../../../../application/serviceComposition\";\r\nimport {AppView} from \"./appView\";\r\nimport {PermissionsVM, StateProps} from \"./appModel\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {PermissionInfo} from \"../../../../model/permissionInfo\";\r\nimport {PERMISSION_ENTITY, PERMISSION_OPERATOR} from \"../../../../api\";\r\n\r\nclass App extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id ='view/app';\r\n\r\n        this.view = AppView;\r\n\r\n        this.displayOptions = {\r\n            containerId: 'view/knowledge-management',\r\n            visible: true,\r\n            appearClass: '',\r\n            enterClass: '',\r\n            exitClass: '',\r\n            timeout: 0\r\n        };\r\n\r\n        this.mapDispatchToProps = (dispatch: any) => {\r\n            return {\r\n\r\n            }\r\n        }\r\n\r\n        this.mapStateToProps = (state: any, props: any): StateProps => {\r\n            return {\r\n                currentSystemTool: displayService.getSelectedNodeId('system-tool-panel'),\r\n                docPreviewTool: displayService.getNodeInfo(DocumentPanelId),\r\n                permissions: this.getPermissions(state)\r\n            }\r\n        }\r\n    }\r\n\r\n    getPermissions = createSelector<any, string, Record<string, PermissionInfo>, PermissionsVM>(\r\n        [() => userService.getCurrentUserId(), authorizationService.getPermissions],\r\n        (currentUserId, permissionInfoLookup) => {\r\n            let result: PermissionsVM = {\r\n                canSearch: authorizationService.hasPermission(PERMISSION_ENTITY.DOCUMENT, PERMISSION_OPERATOR.GET, currentUserId, currentUserId)\r\n            }\r\n            return result;\r\n        }\r\n    )\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: AppPresenter,\r\n    componentId: AppPresenterId\r\n} = createComponentWrapper(App);\r\n\r\n","import React, {Component} from 'react';\r\nimport './systemBanner.css';\r\nimport Button from \"../../theme/widgets/button/button\";\r\nimport {bindInstanceMethods} from \"../../../framework/extras/typeUtils\";\r\nimport {SystemBannerProps, SystemBannerState} from \"./systemBannerModel\";\r\n\r\nclass SystemBannerView extends Component<SystemBannerProps, SystemBannerState> {\r\n\r\n\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n\r\n        bindInstanceMethods(this);\r\n    }\r\n\r\n    _onReturnHome() {\r\n        const { onReturnHome } = this.props;\r\n\r\n        if (onReturnHome) {\r\n            onReturnHome();\r\n        }\r\n    }\r\n\r\n    _onLogout() {\r\n        const { onLogout } = this.props;\r\n\r\n        if (onLogout) {\r\n            onLogout();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {className, onLogout, userName, onReturnHome, ...rest} = this.props;\r\n\r\n        let cn = 'system-banner d-flex p-3';\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n\r\n        return (\r\n            <div className={cn} {...rest}>\r\n                <div className={\"d-flex flex-fill flex-basis-0 align-items-center h-gap-3\"}>\r\n                    <Button className={\"btn-transparent\"} onClick={this._onReturnHome}>\r\n                        <div className={\"bumed-logo\"}/>\r\n                    </Button>\r\n                    <div className={\"display-1 title font-weight-bold\"}>CIC</div>\r\n                    <div className={\"header-1 pt-1 font-weight-semi-bold text-nowrap text\"}>Consolidated Information Center</div>\r\n                    <div className={\"header-1 pt-1 text-nowrap text\"}>|</div>\r\n                    <div className={\"header-1 system-banner-text-accent pt-1 text-nowrap\"}>Knowledge Management</div>\r\n                </div>\r\n                <div className={\"flex-fill flex-basis-0\"}/>\r\n                <div className={\"d-flex flex-fill flex-shrink-0 align-self-stretch justify-content-end\"}>\r\n                    <div className={`d-flex align-items-center h-gap-5`}>\r\n                        <Button>{userName}</Button>\r\n                        <Button onClick={this._onLogout}>Logout</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SystemBannerView;\r\n","import SystemBannerView from './systemBannerView'\r\nimport {Presenter} from \"../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../framework/wrappers/componentWrapper\";\r\nimport {authenticationService, documentService, userService} from \"../../../application/serviceComposition\";\r\nimport {UserInfo} from \"../../../model\";\r\nimport {makeGuid} from \"../../../framework.visual/extras/utils/uniqueIdUtils\";\r\n\r\nclass SystemBanner extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id ='components/systemBanner';\r\n\r\n        this.view = SystemBannerView;\r\n\r\n        this.mapStateToProps = (state: any, props: any) => {\r\n            return {\r\n                userName: this.formatUserName()\r\n            }\r\n        }\r\n\r\n        this.mapDispatchToProps = () => {\r\n            return {\r\n                onReturnHome: () => this.onReturnHome(),\r\n                onLogout: () => this.onLogout()\r\n            };\r\n        }\r\n    }\r\n\r\n    formatUserName() {\r\n        const {id, first_name, last_name } = userService.getCurrentUser() || new UserInfo(makeGuid());\r\n\r\n\r\n        let result = id;\r\n        if (first_name !== undefined) {\r\n            result = first_name;\r\n        }\r\n\r\n        if (last_name !== undefined) {\r\n            result += ` ${last_name}`;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    onLogout() {\r\n        authenticationService.logout();\r\n        documentService.clearDocuments();\r\n    }\r\n\r\n    onReturnHome = () => {\r\n        documentService.clearSearch();\r\n    }\r\n}\r\n\r\n\r\nexport const {\r\n    connectedPresenter: SystemBannerPresenter,\r\n    componentId: SystemBannerId\r\n} = createComponentWrapper(SystemBanner);\r\n","import React, {Component} from \"react\";\r\nimport './landingPanel.css';\r\nimport {LoginPanelProps, LoginPanelState, RegistrationStatusVMType, UserInfoVM} from \"./landingPanelModel\";\r\nimport {bindInstanceMethods, nameOf} from \"../../../framework/extras/typeUtils\";\r\nimport Button from \"../../theme/widgets/button/button\";\r\nimport TextEdit from \"../../theme/widgets/textEdit/textEdit\";\r\n\r\nclass LandingPanelView extends Component<LoginPanelProps, LoginPanelState> {\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n\r\n        bindInstanceMethods(this);\r\n\r\n        this.state = {\r\n            tmpUser: {\r\n                dod_id: '',\r\n                first_name: '',\r\n                last_name: '',\r\n                email: '',\r\n                phone: ''\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<LoginPanelProps>, prevState: Readonly<LoginPanelState>, snapshot?: any) {\r\n\r\n    }\r\n\r\n    _onLogin() {\r\n        const {onLogin} = this.props;\r\n\r\n        if (onLogin != null) {\r\n            onLogin();\r\n        }\r\n    }\r\n\r\n    _onRegister() {\r\n        const { onRegister } = this.props;\r\n        const { tmpUser } = this.state;\r\n\r\n        // need to validate the entries here TODO Josiah\r\n\r\n        if (onRegister != null) {\r\n            onRegister(tmpUser);\r\n        }\r\n    }\r\n\r\n    onTmpUserChanged(name: string, value: string) {\r\n        const { tmpUser } = this.state;\r\n\r\n        let nextUser = {\r\n            ...tmpUser,\r\n            [name]: value\r\n        };\r\n\r\n        this.setTmpUser(nextUser);\r\n    }\r\n\r\n    setTmpUser(user: UserInfoVM) {\r\n        this.setState({\r\n            ...this.state,\r\n            tmpUser: user\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { className, registrationStatus } = this.props;\r\n\r\n        const { tmpUser } = this.state;\r\n\r\n        let cn = 'landing-panel d-flex flex-fill justify-content-center align-items-center';\r\n        if (className) {\r\n            cn += ` ${className}`;\r\n        }\r\n        // if (!isError && !isUnregistered && !isLogout) {\r\n        //     cn += \" bg-transparent\"\r\n        // }\r\n\r\n        return (\r\n            <div className={cn}>\r\n                <div className={\"d-flex flex-fill position-relative h-100\"}>\r\n                    <div className={\"position-absolute\"}/>\r\n                    <div className={'d-flex flex-fill justify-content-between'} style={{zIndex: 999}}>\r\n\r\n                        <div className={\"d-flex flex-fill align-items-center justify-content-center\"}>\r\n                            <div className={\"d-flex flex-column\"}>\r\n                                <div className={\"d-flex flex-column light-popup v-gap-5\"}>\r\n                                    <div className={\"d-flex text-selected font-weight-semi-bold px-5 pt-5\"}>\r\n                                        <div>Returning User</div>\r\n                                    </div>\r\n                                    <div className={\"light-info px-5 text-wrap display-3\"}>\r\n                                        If you have already created a profile, click \"submit\" to access the CIC Knowledge Management Dashboard\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className={\"d-flex justify-content-end py-4 pr-5 bg-advisory\"}>\r\n                                    <Button text={\"I Already Have Access\"} light={true} onClick={() => this._onLogin()}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {\r\n                            (registrationStatus === RegistrationStatusVMType.NONE) &&\r\n                            <div className={\"d-flex flex-column dark w-50 align-items-center justify-content-center\"}>\r\n                                <div className={\"d-flex flex-column\"}>\r\n                                    <div className={\"d-flex flex-column popup v-gap-5\"}>\r\n                                        <div className={\"text-selected font-weight-semi-bold px-5 pt-5\"}>\r\n                                            <div>New user</div>\r\n                                        </div>\r\n                                        <div className={\"info px-5 display-3\"}>New to the Dashboard? Submit your information below to request authorization</div>\r\n                                        <div className={\"v-gap-5\"}>\r\n                                            <div className={'register-grid px-5'}>\r\n                                                <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>DoD ID:</div>\r\n                                                <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>First Name:</div>\r\n                                                <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>Last Name:</div>\r\n                                                <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>Email:</div>\r\n                                                <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>Phone:</div>\r\n                                                <TextEdit value={tmpUser.dod_id} name={nameOf<UserInfoVM>(\"dod_id\")} autoFocus={true} placeholder={\"DoD ID\"} onSubmit={this.onTmpUserChanged}/>\r\n                                                {/*<div className={\"align-self-center text-info font-weight-light display-4\"}>{user?.name}</div>*/}\r\n                                                <TextEdit value={tmpUser.first_name} name={nameOf<UserInfoVM>(\"first_name\")} autoFocus={true} placeholder={\"First Name\"} onSubmit={this.onTmpUserChanged}/>\r\n                                                <TextEdit value={tmpUser.last_name} name={nameOf<UserInfoVM>(\"last_name\")} autoFocus={true} placeholder={\"Last Name\"} onSubmit={this.onTmpUserChanged}/>\r\n                                                <TextEdit value={tmpUser.email} name={nameOf<UserInfoVM>(\"email\")} autoFocus={true} placeholder={\"Email Address\"} onSubmit={this.onTmpUserChanged}/>\r\n                                                <TextEdit value={tmpUser.phone} name={nameOf<UserInfoVM>(\"phone\")} placeholder={\"Phone Number\"} onSubmit={this.onTmpUserChanged}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"d-flex justify-content-end py-4 pr-5 bg-advisory\"}>\r\n                                        <Button text={\"Submit\"} light={true} onClick={() => this._onRegister()}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        }\r\n\r\n                        {\r\n                            (registrationStatus === RegistrationStatusVMType.SUBMITTED) &&\r\n                            <div className={\"popup v-gap-5 w-33\"}>\r\n                                <div className={\"text-selected font-weight-semi-bold px-5 pt-5\"}>\r\n                                    <div className={\"d-flex justify-content-center mt-5 pt-5\"}>Your Authorization is Pending...</div>\r\n                                </div>\r\n\r\n                                <div className={\"d-flex flex-column justify-content-center align-items-center v-gap-5 px-5 mx-5\"}>\r\n                                    {\r\n                                        <div className={\"d-flex flex-column justify-content-center align-items-center v-gap-5\"}>\r\n                                            <div className={\"text-info font-weight-light display-3 pt-5\"}>An admin needs to authorize you in order to access CIC Knowledge Management</div>\r\n                                            {/*<div className={\"d-flex admin header-2 h-gap-5 pt-5\"}>*/}\r\n                                            {/*    <div>{admin.name}</div>*/}\r\n                                            {/*    <div className={\"d-flex h-gap-2\"}>*/}\r\n                                            {/*        <div>PHONE</div>*/}\r\n                                            {/*        <div>{admin.phone}</div>*/}\r\n                                            {/*    </div>*/}\r\n                                            {/*    <div className={\"d-flex h-gap-2\"}>*/}\r\n                                            {/*        <div>EMAIL</div>*/}\r\n                                            {/*        <div>{admin.email}</div>*/}\r\n                                            {/*    </div>*/}\r\n                                            {/*</div>*/}\r\n                                        </div>\r\n                                    }\r\n                                    <div className={\"text-info font-weight-light display-3 pt-5\"}>Please check back once your authorization has been approved.</div>\r\n                                </div>\r\n\r\n                                <div className={\"d-flex justify-content-end py-4 pr-5 bg-advisory mx-5\"}/>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            (registrationStatus === RegistrationStatusVMType.APPROVED) &&\r\n                            <div className={\"d-flex justify-content-center align-items-center\"}>\r\n                                <div className={\"d-flex flex-column popup v-gap-5\"}>\r\n                                    <div className={\"text-selected font-weight-semi-bold px-5 pt-5\"}>\r\n                                        <div className={\"d-flex justify-content-center mt-5 pt-5\"}>Authorization Complete</div>\r\n                                    </div>\r\n\r\n                                    <div className={\"d-flex flex-column justify-content-center align-items-center v-gap-5 px-5 mx-5\"}>\r\n                                        <div className={\"text-info font-weight-light display-3 pt-5\"}>You may now sign in.</div>\r\n                                    </div>\r\n\r\n                                    <div className={\"d-flex justify-content-end py-4 pr-5 bg-advisory\"}/>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {/*{*/}\r\n                        {/*    (isAuthPending || isLogin || isAuthRequest || isRegister) &&*/}\r\n                        {/*    <div className={\"d-flex flex-column popup v-gap-5\"}>*/}\r\n                        {/*        <div className={\"text-selected font-weight-semi-bold px-5 pt-5\"}>*/}\r\n                        {/*            {*/}\r\n                        {/*                isAuthRequest &&*/}\r\n                        {/*                <div>Authorization Request</div>*/}\r\n                        {/*            }*/}\r\n                        {/*            {*/}\r\n                        {/*                isLogin &&*/}\r\n                        {/*                <div>Sign In</div>*/}\r\n                        {/*            }*/}\r\n                        {/*            {*/}\r\n                        {/*                isRegister &&*/}\r\n                        {/*                <div>Register</div>*/}\r\n                        {/*            }*/}\r\n                        {/*            {*/}\r\n                        {/*                isAuthPending &&*/}\r\n                        {/*                <div className={\"d-flex justify-content-center mt-5 pt-5\"}>Your Authorization is Pending...</div>*/}\r\n                        {/*            }*/}\r\n                        {/*        </div>*/}\r\n\r\n                        {/*        {*/}\r\n                        {/*            isAuthRequest &&*/}\r\n                        {/*            <div className={\"v-gap-5\"}>*/}\r\n                        {/*                <div className={\"d-flex h-gap-5 justify-content-start px-5\"}>*/}\r\n                        {/*                    <div className={\"d-flex h-gap-2\"}>*/}\r\n                        {/*                        <div className={\"align-self-center display-3 font-weight-semi-bold\"}>Full Name:</div>*/}\r\n                        {/*                        <div className={\"align-self-center text-info font-weight-light display-4\"}>{user?.name}</div>*/}\r\n                        {/*                    </div>*/}\r\n                        {/*                    <div className={\"d-flex h-gap-2\"}>*/}\r\n                        {/*                        <div className={\"align-self-center display-3 font-weight-semi-bold\"}>DoD ID:</div>*/}\r\n                        {/*                        <div className={\"align-self-center text-info font-weight-light display-4\"}>{user?.dodId}</div>*/}\r\n                        {/*                    </div>*/}\r\n                        {/*                    <div className={\"d-flex h-gap-2 pl-1\"}>*/}\r\n                        {/*                        <div className={\"align-self-center display-3 font-weight-semi-bold\"}>Role:</div>*/}\r\n                        {/*                        <ComboBox onSelect={(value: string) => this.onTmpUserChanged(\"role\", value)} title={roleTitle} items={roles}/>*/}\r\n                        {/*                    </div>*/}\r\n                        {/*                </div>*/}\r\n                        {/*                <div className={\"px-5\"}>*/}\r\n                        {/*                    <TextArea value={tmpUser[\"request\"] ? tmpUser[\"request\"] : user?.request} autoFocus={true} name={\"request\"}*/}\r\n                        {/*                              placeholder={\"Please provide organizational affiliation and reason for accessing the CIC Knowledge Management System\"}*/}\r\n                        {/*                              rows={9} cols={85} onSubmit={this.onTmpUserChanged}/>*/}\r\n                        {/*                </div>*/}\r\n                        {/*            </div>*/}\r\n                        {/*        }*/}\r\n\r\n                        {/*        {*/}\r\n                        {/*            isLogin &&*/}\r\n                        {/*            <div className={\"v-gap-5\"}>*/}\r\n                        {/*                <div className={'login-grid px-5'}>*/}\r\n                        {/*                    <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>DoD ID:</div>*/}\r\n                        {/*                    <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>User Name:</div>*/}\r\n                        {/*                    <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>Email:</div>*/}\r\n                        {/*                    <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>CAC PIN:</div>*/}\r\n                        {/*                    <div className={\"align-self-center text-info font-weight-light display-4\"}>{user?.dodId}</div>*/}\r\n                        {/*                    <div className={\"align-self-center text-info font-weight-light display-4\"}>{user?.name}</div>*/}\r\n                        {/*                    <div className={\"align-self-center text-info font-weight-light display-4\"}>{user?.email}</div>*/}\r\n                        {/*                    <TextEdit value={tmpUser[\"pin\"] ? tmpUser[\"pin\"] : user?.pin} name={\"pin\"} autoFocus={true} placeholder={\"CAC PIN\"} onSubmit={this.onTmpUserChanged}/>*/}\r\n                        {/*                </div>*/}\r\n                        {/*                <div className={\"d-flex h-gap-2 justify-content-end px-5\"}>*/}\r\n                        {/*                    <CheckBox selected={isRemember} onClick={() => this._toggleRemember()}/>*/}\r\n                        {/*                    <div className={\"align-self-center text-info header-3\"}>Remember Me</div>*/}\r\n                        {/*                </div>*/}\r\n                        {/*            </div>*/}\r\n                        {/*        }*/}\r\n\r\n                        {/*        {*/}\r\n                        {/*            isRegister &&*/}\r\n                        {/*            <div className={\"v-gap-5\"}>*/}\r\n                        {/*                <div className={'register-grid px-5'}>*/}\r\n                        {/*                    <div className={\"align-self-center text-info display-3 font-weight-semi-bold justify-self-end\"}>DoD ID:</div>*/}\r\n                        {/*                    <div className={\"align-self-center text-info display-3 font-weight-semi-bold justify-self-end\"}>User Name:</div>*/}\r\n                        {/*                    <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>Email:</div>*/}\r\n                        {/*                    <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>Phone:</div>*/}\r\n                        {/*                    <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>Organization:</div>*/}\r\n                        {/*                    <div className={\"align-self-center display-3 font-weight-semi-bold justify-self-end\"}>PIN:</div>*/}\r\n                        {/*                    <div className={\"align-self-center text-info font-weight-light display-4\"}>{user?.dodId}</div>*/}\r\n                        {/*                    <div className={\"align-self-center text-info font-weight-light display-4\"}>{user?.name}</div>*/}\r\n                        {/*                    <TextEdit value={tmpUser[\"email\"] ? tmpUser[\"email\"] : user?.email} name={\"email\"} autoFocus={true} placeholder={\"Email Address\"} onSubmit={this.onTmpUserChanged}/>*/}\r\n                        {/*                    <TextEdit value={tmpUser[\"phone\"] ? tmpUser[\"phone\"] : user?.phone} name={\"phone\"} placeholder={\"Phone Number\"} onSubmit={this.onTmpUserChanged}/>*/}\r\n                        {/*                    <TextEdit value={tmpUser[\"organization\"] ? tmpUser[\"organization\"] : user?.organization} name={\"organization\"} placeholder={\"Organization\"} onSubmit={this.onTmpUserChanged}/>*/}\r\n                        {/*                    <TextEdit value={tmpUser[\"pin\"] ? tmpUser[\"pin\"] : user?.pin} name={\"pin\"} placeholder={\"CAC PIN\"} onSubmit={this.onTmpUserChanged}/>*/}\r\n                        {/*                </div>*/}\r\n                        {/*                <div className={\"d-flex h-gap-2 justify-content-end px-5\"}>*/}\r\n                        {/*                    <CheckBox selected={isRemember} onClick={() => this._toggleRemember()}/>*/}\r\n                        {/*                    <div className={\"align-self-center text-info header-3\"}>Remember Me</div>*/}\r\n                        {/*                </div>*/}\r\n                        {/*            </div>*/}\r\n                        {/*        }*/}\r\n\r\n                        {/*        {*/}\r\n                        {/*            isAuthPending &&*/}\r\n                        {/*            <div className={\"d-flex flex-column justify-content-center align-items-center v-gap-5 px-5 mx-5\"}>*/}\r\n                        {/*                <div className={\"text-info font-weight-light display-3 pt-5\"}>The following admin needs to authorize you in order to access CIC Knowledge Management</div>*/}\r\n                        {/*                <div className={\"d-flex admin header-2 h-gap-5 pt-5\"}>*/}\r\n                        {/*                    <div>{admin && admin.name}</div>*/}\r\n                        {/*                    <div className={\"d-flex h-gap-2\"}>*/}\r\n                        {/*                        <div>PHONE</div>*/}\r\n                        {/*                        <div>{admin && admin.phone}</div>*/}\r\n                        {/*                    </div>*/}\r\n                        {/*                    <div className={\"d-flex h-gap-2\"}>*/}\r\n                        {/*                        <div>EMAIL</div>*/}\r\n                        {/*                        <div>{admin && admin.email}</div>*/}\r\n                        {/*                    </div>*/}\r\n                        {/*                </div>*/}\r\n                        {/*                <div className={\"text-info font-weight-light display-3 pt-5\"}>Please check back once your authorization has been approved.</div>*/}\r\n                        {/*            </div>*/}\r\n                        {/*        }*/}\r\n\r\n                        {/*        <div className={\"d-flex justify-content-end py-4 pr-5 bg-advisory\"}>*/}\r\n                        {/*            {*/}\r\n                        {/*                !isAuthPending &&*/}\r\n                        {/*                <Button text={\"Submit\"} light={true} onClick={() => this._onSubmit()}/>*/}\r\n                        {/*            }*/}\r\n                        {/*        </div>*/}\r\n                        {/*    </div>*/}\r\n                        {/*}*/}\r\n\r\n                        {/*<div className={\"d-flex flex-column justify-content-center align-items-center text-wrap v-gap-5\"}>*/}\r\n                        {/*    <div className={\"text-advisory\"}>*/}\r\n                        {/*        {*/}\r\n                        {/*            isError &&*/}\r\n                        {/*            <div>There is no valid Common Access Card (CAC) found.</div>*/}\r\n                        {/*        }*/}\r\n                        {/*        {*/}\r\n                        {/*            isUnregistered &&*/}\r\n                        {/*            <div>You are not recognized as an authorized user.</div>*/}\r\n                        {/*        }*/}\r\n                        {/*        {*/}\r\n                        {/*            isLogout &&*/}\r\n                        {/*            <div>*Please Exit your Browser*</div>*/}\r\n                        {/*        }*/}\r\n                        {/*    </div>*/}\r\n                        {/*    <div className={\"display-1 text-accent\"}>*/}\r\n                        {/*        {*/}\r\n                        {/*            isError &&*/}\r\n                        {/*            <div>Please verify that your card is properly inserted in the reader and close and reopen your browser.</div>*/}\r\n                        {/*        }*/}\r\n                        {/*        {*/}\r\n                        {/*            isUnregistered &&*/}\r\n                        {/*            <div className={\"text-center\"}>If you are already authorized, please verify that your card is properly inserted in the reader and Reload.*/}\r\n                        {/*                <br/> If you have received this message in error or need to be authorized, click Get Info.</div>*/}\r\n                        {/*        }*/}\r\n                        {/*        {*/}\r\n                        {/*            isLogout &&*/}\r\n                        {/*            <div className={\"text-center\"}>You have successfully logged out of the CIC Knowledge Management Product*/}\r\n                        {/*                <br/>Please close your current browser to ensure secure logout</div>*/}\r\n                        {/*        }*/}\r\n                        {/*    </div>*/}\r\n                        {/*    <div className={\"d-flex h-gap-5\"}>*/}\r\n                        {/*        {*/}\r\n                        {/*            isUnregistered &&*/}\r\n                        {/*            <Button text={\"Get Info\"} onClick={() => this._onGetInfo()}/>*/}\r\n                        {/*        }*/}\r\n                        {/*        {*/}\r\n                        {/*            !isLogout &&*/}\r\n                        {/*            <Button text={\"Reload\"} onClick={() => this._onReload()}/>*/}\r\n                        {/*        }*/}\r\n                        {/*        {*/}\r\n                        {/*            isLogout &&*/}\r\n                        {/*            <Button text={\"Close Browser\"} onClick={() => this._onClose()}/>*/}\r\n                        {/*        }*/}\r\n                        {/*    </div>*/}\r\n                        {/*</div>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPanelView;\r\n","import {Presenter} from \"../../../framework.visual/extras/presenter\";\r\nimport LandingPanelView from \"./landingPanelView\";\r\nimport {LoginPanelDispatchProps, LoginPanelStateProps, RegistrationStatusVMType, UserInfoVM} from \"./landingPanelModel\";\r\nimport {createComponentWrapper} from \"../../../framework/wrappers/componentWrapper\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {authenticationService, referenceService} from \"../../../application/serviceComposition\";\r\nimport {ReferenceType, UserInfo} from \"../../../model\";\r\nimport {RoleVM} from \"../systemToolPanels/profilePanel/profilePanelModel\";\r\nimport {forEachKVP} from \"../../../framework.visual/extras/utils/collectionUtils\";\r\nimport {makeGuid} from \"../../../framework.visual/extras/utils/uniqueIdUtils\";\r\nimport {RegistrationStatus} from \"../../../api\";\r\n\r\nclass LandingPanel extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id = 'components/LandingPanel';\r\n\r\n        this.view = LandingPanelView;\r\n\r\n        this.mapStateToProps = (state: any, props: any): LoginPanelStateProps => {\r\n            return {\r\n                registrationStatus: this.getRegistrationStatus(authenticationService.getAuthenticationState()),\r\n            };\r\n        }\r\n\r\n        this.mapDispatchToProps = (): LoginPanelDispatchProps => {\r\n            return {\r\n                onLogin: () =>  {\r\n                    authenticationService.login();\r\n                },\r\n                onRegister: (user: UserInfoVM) => {\r\n                    this.register(user);\r\n                }\r\n            };\r\n        }\r\n\r\n        this.displayOptions = {\r\n            containerId: 'bumed',\r\n            visible: true,\r\n            appearClass: 'fadeIn',\r\n            enterClass: 'fadeIn',\r\n            exitClass: 'fadeOut',\r\n        }\r\n    }\r\n\r\n    getRegistrationStatus = createSelector<any, RegistrationStatus, RegistrationStatusVMType>(\r\n        [() => authenticationService.getRegistrationStatus()],\r\n        (registerStatus) => {\r\n            let result = RegistrationStatusVMType.NONE;\r\n\r\n            switch (registerStatus) {\r\n                case RegistrationStatus.NONE:\r\n                    result = RegistrationStatusVMType.NONE;\r\n                    break;\r\n                case RegistrationStatus.SUBMITTED:\r\n                    result = RegistrationStatusVMType.SUBMITTED;\r\n                    break;\r\n                case RegistrationStatus.APPROVED:\r\n                    result = RegistrationStatusVMType.APPROVED;\r\n                    break;\r\n                case RegistrationStatus.REJECTED:\r\n                    result = RegistrationStatusVMType.REJECTED;\r\n                    break;\r\n\r\n            }\r\n\r\n            return result;\r\n        }\r\n    )\r\n\r\n    register(userVM: UserInfoVM) {\r\n        let user = new UserInfo(makeGuid());\r\n\r\n        user.dod_id = userVM.dod_id || '';\r\n        user.first_name = userVM.first_name || '';\r\n        user.last_name = userVM.last_name || '';\r\n        user.email_address = userVM.email || '';\r\n        user.phone_number = userVM.phone || '';\r\n\r\n        authenticationService.register(user);\r\n    }\r\n\r\n    getRolesVMs = createSelector(\r\n        [() => referenceService.getAllReferences(ReferenceType.ROLE)],\r\n        (roles) => {\r\n            let itemVMs: Record<string, RoleVM> = {};\r\n\r\n            forEachKVP(roles, (itemKey: string, itemValue: RoleVM) => {\r\n                itemVMs[itemKey] = {\r\n                    ...itemValue\r\n                };\r\n            })\r\n\r\n            return itemVMs;\r\n        }\r\n    )\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: LandingPanelPresenter,\r\n    componentId: LandingPanelId,\r\n} = createComponentWrapper(LandingPanel)\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport {LandingProps, LandingState} from \"./landingModel\";\r\nimport {LandingPanelPresenter} from \"../../../components/landingPanel/landingPanelPresenter\";\r\nimport {Size} from \"../../../theme/widgets/loadingIndicator/loadingIndicatorModel\";\r\nimport {LoadingIndicator} from \"../../../theme/widgets/loadingIndicator/loadingIndicator\";\r\n\r\nexport class LandingView extends Component<LandingProps, LandingState> {\r\n\r\n    timeout!: NodeJS.Timeout;\r\n\r\n    constructor(props: Readonly<LandingProps> | LandingProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.setLoading(false);\r\n        }, 1500);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    setLoading(value: boolean) {\r\n        this.setState({\r\n            ...this.state,\r\n            loading: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { className, ...rest } = this.props;\r\n\r\n        const { loading } = this.state;\r\n\r\n        let cn = `${className ? className : ''} d-flex flex h-100`;\r\n\r\n        return (\r\n            <div id={'landing'} {...rest} className={cn}>\r\n                {\r\n                    loading ?\r\n                        <LoadingIndicator size={Size.large}/> :\r\n                        <LandingPanelPresenter/>\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './landing.css';\r\n\r\nimport {Presenter} from \"../../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../../framework/wrappers/componentWrapper\";\r\nimport {LandingDispatchProps, LandingStateProps} from \"./landingModel\";\r\nimport {LandingView} from \"./landingView\";\r\n\r\n\r\nclass Landing extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id ='view/landing';\r\n\r\n        this.view = LandingView;\r\n\r\n        this.displayOptions = {\r\n            containerId: 'view/knowledge-management',\r\n            visible: true,\r\n            appearClass: '',\r\n            enterClass: '',\r\n            exitClass: '',\r\n            timeout: 0\r\n        };\r\n\r\n        this.mapDispatchToProps = (dispatch: any): LandingDispatchProps => {\r\n            return {\r\n\r\n            }\r\n        }\r\n\r\n        this.mapStateToProps = (state: any, props: any): LandingStateProps => {\r\n            return {\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const {\r\n    connectedPresenter: LandingPresenter,\r\n    componentId: LandingId\r\n} = createComponentWrapper(Landing);\r\n\r\n","import React, { Component } from 'react';\r\nimport \"./knowledgeManagement.css\";\r\nimport {AppPresenter} from \"./app/appPresenter\";\r\nimport {SystemBannerPresenter} from \"../../components/systemBanner/systemBannerPresenter\";\r\nimport { LandingPresenter } from './landing/landingPresenter';\r\nimport {KnowledgeManagementProps} from \"./knowledgeManagementModel\";\r\n\r\n\r\n\r\n\r\nclass KnowledgeManagementView extends Component<KnowledgeManagementProps> {\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        let cookie = this.getCookie('KEYCLOAK_SESSION');\r\n        console.log(cookie);\r\n    }\r\n\r\n    getCookie(key: string) {\r\n        const name = key + '=';\r\n        const ca = document.cookie.split(';');\r\n        for (let i = 0; i < ca.length; i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0) == ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) == 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return '';\r\n    };\r\n\r\n    render() {\r\n\r\n        const { isAuthenticated } = this.props;\r\n\r\n       return (\r\n           <div id={\"knowledge-management\"} className={\"h-100 d-flex flex-column header-3\"} style={{background: 'var(--app-background)'}}>\r\n               <SystemBannerPresenter/>\r\n               <div className={\"view-container flex-fill position-relative\"}>\r\n                   {\r\n                       isAuthenticated ?\r\n                       <AppPresenter/>  :\r\n                       <LandingPresenter/>\r\n                   }\r\n               </div>\r\n           </div>\r\n       )\r\n    }\r\n}\r\n\r\n\r\nexport default KnowledgeManagementView;\r\n","import React from 'react';\r\nimport './knowledgeManagement.css';\r\n\r\nimport KnowledgeManagementView from \"./knowledgeManagementView\";\r\nimport {KnowledgeManagementDispatchProps, KnowledgeManagementStateProps} from \"./knowledgeManagementModel\";\r\nimport {Presenter} from \"../../../framework.visual/extras/presenter\";\r\nimport {createComponentWrapper} from \"../../../framework/wrappers/componentWrapper\";\r\nimport {authenticationService} from \"../../../application/serviceComposition\";\r\n\r\nclass KnowledgeManagement extends Presenter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.id ='view/knowledge-management';\r\n\r\n        this.view = KnowledgeManagementView;\r\n\r\n        this.displayOptions = {\r\n            containerId: 'main',\r\n            visible: true,\r\n            appearClass: '',\r\n            enterClass: '',\r\n            exitClass: '',\r\n            timeout: 0\r\n        };\r\n\r\n        this.mapDispatchToProps = (dispatch: any): KnowledgeManagementDispatchProps => {\r\n            return {\r\n\r\n            }\r\n        }\r\n\r\n        this.mapStateToProps = (state: any, props: any): KnowledgeManagementStateProps => {\r\n            return {\r\n                isAuthenticated: authenticationService.isLoggedIn()\r\n            }\r\n        }\r\n    }\r\n\r\n    // getPermissions = createSelector<any, string, Record<string, PermissionInfo>, PermissionsVM>(\r\n    //     [() => userService.getCurrentUserId(), authorizationService.getPermissions],\r\n    //     (currentUserId, permissionInfoLookup) => {\r\n    //         let result: PermissionsVM = {\r\n    //             canSearch: authorizationService.hasPermission(PERMISSION_ENTITY.DOCUMENT, PERMISSION_OPERATOR.GET)\r\n    //         }\r\n    //         return result;\r\n    //     }\r\n    // )\r\n}\r\n\r\nconst tmp:{connectedPresenter: any, componentId: string} = createComponentWrapper(KnowledgeManagement);\r\n\r\nexport const KnowledgeManagementPresenter = tmp.connectedPresenter;\r\nexport const KnowledgeManagementId = tmp.componentId;\r\n\r\nexport default KnowledgeManagementPresenter;\r\n\r\n\r\n","import 'react-app-polyfill/stable';\r\nimport React, {Suspense} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport {appDataStore, authenticationService} from \"./application/serviceComposition\";\r\nimport { KnowledgeManagementPresenter } from './visual/views/knowledgeManagement/knowledgeManagementPresenter';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Suspense fallback={<div></div>}>\r\n            <Provider store={appDataStore.getStorage()}>\r\n                {/*<ServiceContext.Provider value={application}>*/}\r\n                <DndProvider backend={HTML5Backend} >\r\n                    <KnowledgeManagementPresenter />\r\n                </DndProvider>\r\n                {/*</ServiceContext.Provider>*/}\r\n            </Provider>\r\n        </Suspense>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// const interval = setInterval(() => {\r\n//     let href = document.location.href;\r\n//     if (href.includes('state=')) {\r\n//         clearInterval(interval);\r\n//         authenticationService.doLogin();\r\n//     }\r\n//\r\n//     if (authenticationService.isLoggedIn()) {\r\n//         clearInterval(interval);\r\n//     }\r\n//\r\n// }, 100);\r\n//\r\n// var oldHref = document.location.href;\r\n\r\n\r\nif (document.location.href.includes('state=')) {\r\n    if (!authenticationService.isLoggedIn()) {\r\n        authenticationService.login();\r\n    }\r\n}\r\n\r\n// window.onload = function() {\r\n//     const bodyList = document.querySelector(\"body\")\r\n//\r\n//     const observer = new MutationObserver(function(mutations) {\r\n//         mutations.forEach(function(mutation) {\r\n//\r\n//             if (document.location.href.includes('state=')) {\r\n//                 if (!authenticationService.isLoggedIn()) {\r\n//                     authenticationService.doLogin();\r\n//                 }\r\n//             }\r\n//\r\n//             // if (oldHref != document.location.href) {\r\n//             //     oldHref = document.location.href;\r\n//             //     /* Changed ! your code here */\r\n//             // }\r\n//         });\r\n//     });\r\n//\r\n//     const config = {\r\n//         childList: true,\r\n//         subtree: true\r\n//     };\r\n//\r\n//     if (bodyList != null) {\r\n//         observer.observe(bodyList, config);\r\n//     }\r\n// };\r\n\r\n\r\n\r\n// const renderRegister = () => {\r\n//     ReactDOM.render(\r\n//         <React.StrictMode>\r\n//             <Suspense fallback={<div></div>}>\r\n//                 <div className={'header-1 text-secondary'}>Please register</div>\r\n//             </Suspense>\r\n//         </React.StrictMode>,\r\n//         document.getElementById('root')\r\n//     );\r\n// };\r\n\r\n// window.onunload = (ev => {\r\n//     alert('unloaded!')\r\n// });\r\n\r\n// if (keycloakEnabled) {\r\n//     authenticationService.initKeycloak(renderApp, renderRegister);\r\n// }\r\n// else {\r\n//     renderApp();\r\n// }\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n\r\n\r\n"],"sourceRoot":""}