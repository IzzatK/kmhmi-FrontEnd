# Do not change version. This is the version of aws buildspec, not the version of your buldspec file.
version: 0.2

#  CI_BUILDS_DIR: "bumed/build/"
#  DEPLOY_DIR: "/opt/apps/kmweb"
#  SSH_PKEY: $SSH_PRIVATE_KEY
#  BUILD_ZIP: build.zip

env:
  variables:
    CI_BUILDS_DIR: "/docker-deploy"
    DEPLOY_DIR: "/ci_test"
    SSH_PKEY: "-----BEGIN RSA PRIVATE KEY----- MIIEpAIBAAKCAQEAhRcM13HIhl5n58qz4CzWQVUHPQtX19/3B+xfjgGuBtTDvMob bUISHwITyUmiC1Q/qucF2udB4FgOWyx74vJxi5FrDxNDege/seRtaZlEfJTjSHbT m8siTk6GrjgWzkU4fsq4zZt0/YmDewiHt/ddMLtArNEYMd16h+yOZhtMjx/BvHDi dr2he5zdEuX1uQV1+nrgHYVm6yEsSAWkOY+PRdDh7XOOkmsmIXXWNrFb/GQ3Ye7O 8NVXnUpzmIkAbJs0nUla4ASciVTZY5xQfm4CaZbB4eIW1JtGtwvJKVY+/r9RKGV2 ieqGUzOtQ2Ws9uv0dWoKssWQj/2A9h90BFpLBQIDAQABAoIBAA1ZqJIb+c9wvN+F d9Gu7bcT/mvjLWacMr16uoMWLAzHXvMbGvE0xXiSzsVMO5MDWnecQPwaYoNMkfQX XD4Br94eMi0K86PUDyibD1aeZz5P+RSVxthD4icUvXHQcokybF5bm3oUdAHSv3uh +Ws8xv5SakRrnQ+zdc0Yr5gSePWKRoEipo35MvMwUOgGlNRFxO/JD0ADm17dKFtB 52RGZYNvwXVWuAxoTbxH/l1IKQoEkqB1u4cHw7HGZg1iJZjYKUTCB/ex+IsmIIYu Yo5cpl7NT0/orgJHkZdGMPUJA8vZbvIhJDUnDAx5+oFjtPCCPw0B+CIgTMgw3H59 ycCifekCgYEA1t0CXSuzYLznDO9uhOf/ZoqPhP/OuWz1rlLR0Mw5Id+MTzCiwqqM 4jCTGus23MmLQv2xKbUMaQr0EUmCYcC4CrN8auJkplWpgjbpOqNAs4msL2qQQ49l NW5PUSc1ER+3wrKxR/GJ/pogZNTief+U6ey6iH4KWbnX0as/mZ7zy6MCgYEAnpIg koJEtO4/RaZoOGVxzXztB22qZW7iZAG7PQdlx0hPwOEaG50WVdTH1kU6OzNAg2vv 60xS1W75ofJ+XXHzv5Faa/2MozaaTAaAbtjLJcYmTbno18AMZ8dhugFGJBosIV0C /G1qN/1glQPOG/t/3mdP5vt4guieiCSLkx34+TcCgYEAi84koqEzx4dCw8zrWbln Gr6f4gdc6JQ4S+SBt12a8yp1LnXUAdxdbTP0E/jmqsTNQ5q08xFl8Nd6teDh4F84 oWXmV9nVadGlSSAXo9rj166GBhhNpFgin6CWJZTgV7MOq7X/2nMUukBpQZKvhnhB 2e/586QncfiVsEzARmIB+gcCgYB39ttXm+A49am+msdsKysup9126juoY3w45qpt 4GPaoVVc+a/TxkM4ijLpYxRL51leU9F9tQ9R05ReNePt9CDRBDlhS8ATVmLjM2QE +FSwbjlaQlTqrKt18/x2STJ0a6yJTSHOMUTTuQhRlEBhISM68fQcLpGckDoni2Zg 1aMffwKBgQC1KCd3LDtiu8AUoN3y64+ba3BlFo82s9smU7ehlnXlDqwGyTIIdayj HMLvkCWIrUUbfok4osKaWxDiIIWsVIZ5O7xk5vEUNvmW0f0R9OgWAMJ177ov9Ylp TxDEppeL8zELjsLlz3bYWcBdXJuNYOx7wtAqVSiot9jZliavaSrUng== -----END RSA PRIVATE KEY-----"
    BUILD_ZIP: "/docker-deploy/nginx.conf"
    CI_USER: "ec2-user@18.253.190.212"
#  parameter-store:
#    key: "value"
#  exported-variables:
#    - variable
#  secrets-manager:
#    key: secret-id:json-key:version-stage:version-id
#  git-credential-helper: no | yes

phases:
  pre_build:
    commands:
      #installs dependencies into the node_modules/ directory
#      - cd web
#      - npm install
  build:
    commands:
#      #    install npm
#      - cd web
#      - npm install
#      #    build app
#      - npm run remote-build
#      #    set up dependencies
#      - apt-get update
#      - apt-get install zip openssh-client git -qq
#      #    start ssh client and set up key
#      - eval $(ssh-agent -s)
#      - echo "$SSH_PKEY" | tr -d '\r' | ssh-add -
#      - mkdir -p ~/.ssh
#      - chmod 700 ~/.ssh
#      #    create zip
#      - cd build
#      - zip -r $BUILD_ZIP .
  post_build:
    commands:
      #    make sure we have permission to write
      - ssh -o StrictHostKeyChecking=no $CI_USER "sudo setfacl -R -m u:ec2-user:rwx $DEPLOY_DIR"
      #    clear deploy dir
      - ssh -o StrictHostKeyChecking=no $CI_USER "sudo rm -r $DEPLOY_DIR/*"
      #    deploy zip
      - scp -o StrictHostKeyChecking=no $BUILD_ZIP $CI_USER:$DEPLOY_DIR
      #    unzip files
#      - ssh -o StrictHostKeyChecking=no $CI_USER "cd $DEPLOY_DIR; sudo unzip -o $BUILD_ZIP"
      #    remove zip file
#      - ssh -o StrictHostKeyChecking=no $CI_USER "cd $DEPLOY_DIR; sudo rm build.zip"
# Include only the files required for your application to run.
artifacts:
  files:
    - public/**/*
    - src/**/*
    - package.json
    - appspec.yml
    - scripts/**/*


#image: node:12.16.2
#
#variables:
#  CI_BUILDS_DIR: "bumed/build/"
#  DEPLOY_DIR: "/opt/apps/kmweb"
#  SSH_PKEY: $SSH_PRIVATE_KEY
#  BUILD_ZIP: build.zip
#
#stages:
#  - deploy
#
##build and deploy
#deploy:
#  stage: deploy
#  when: always
#  only:
#    - main
##  when: on_success
#  before_script:
##    install npm
#    - cd web
#    - npm install
##    build app
#    - npm run remote-build
##    set up dependencies
#    - apt-get update
#    - apt-get install zip openssh-client git -qq
##    start ssh client and set up key
#    - eval $(ssh-agent -s)
#    - echo "$SSH_PKEY" | tr -d '\r' | ssh-add -
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
##    create zip
#    - cd build
#    - zip -r $BUILD_ZIP .
#  script:
##    make sure we have permission to write
#    - ssh -o StrictHostKeyChecking=no $CI_USER "sudo setfacl -R -m u:ec2-user:rwx $DEPLOY_DIR"
##    clear deploy dir
#    - ssh -o StrictHostKeyChecking=no $CI_USER "sudo rm -r $DEPLOY_DIR/*"
##    deploy zip
#    - scp -o StrictHostKeyChecking=no $BUILD_ZIP $CI_USER:$DEPLOY_DIR
##    unzip files
#    - ssh -o StrictHostKeyChecking=no $CI_USER "cd $DEPLOY_DIR; sudo unzip -o $BUILD_ZIP"
##    remove zip file
#    - ssh -o StrictHostKeyChecking=no $CI_USER "cd $DEPLOY_DIR; sudo rm build.zip"
#
##deploy:
##  stage: deploy
##  tags:
##    - windows
##  script:
##    - npm run build
# #   - echo $CI_BUILDS_DIR
# #   - xcopy *\* "\Apache\Apache24\htdocs" /s /e
#  #  - tar.exe -a -c -f "..\PLBuild.zip" *.*
##  only:
# #   - master
## Publish tagged versions to npm
#  #publish:
#  #stage: deploy
#    #script:
#    #- npm run build
#    #- echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
#    #- npm publish
